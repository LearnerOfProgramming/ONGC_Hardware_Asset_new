{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91981\\\\Nigel\\\\Internship\\\\ONGC\\\\ONGC_REACT_RACK\\\\myapp\\\\src\\\\components\\\\home_components\\\\GnG.js\";\nimport React from 'react';\nimport Table from '../reusable/Table';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GnG = () => {\n  // TODO: API call to fetch racks\n  async function getComponentsByDataCenterIndex() {\n    try {\n      const response = await axios.get('/general/data-centers/1/components');\n      return response.data; // Assuming the response contains the grouped components data\n    } catch (error) {\n      console.error(\"Error fetching components:\", error);\n      // Handle errors appropriately, e.g., display an error message to the user\n    }\n  }\n  const newracks = getComponentsByDataCenterIndex().then(data => {\n    console.log(\"Racks:\", data);\n    // Use the retrieved components data in your application logic\n  });\n\n  // sample racks\n  const racks = {\n    server: [\"DELL R730 SERVER\", \"DELL R730 SERVER\", \"DELL R740 SERVER\", \"KVM CONSOLE\", \"DELL R740 SERVER\", \"DELL R940 SERVER\", \"DELL R940 SERVER\", \"DELL R940 SERVER\"],\n    network_1: [\"CISCO SAN SWITCH MDS9148S\", \"WOBSP01 : S5232F\", \"WOBLF01 : S5232F\", \"PATCH PANEL\", \"WOBLF03 : S4148T\", \"PATCH PANEL\", \"LIU\", \"WOBLF06 : S4148T\"],\n    network_2: [\"LIU\", \"WOBSP02 : S5232F\", \"WOBLF02 : S5248F\", \"PATCH PANEL\", \"WOBLF04 : S4148T\", \"PATCH PANEL\", \"LIU - INFOCOM\", \"LIU - SPIC\"],\n    storage: [\"DELL STORAGE SAN SW1\", \"DELL STORAGE SAN SW1\", \"KVM CONSOLE\", \"DELL EMC F600 NODE 08\", \"DELL EMC F600 NODE 07\", \"DELL EMC F600 NODE 06\", \"DELL EMC F600 NODE 05\", \"DELL EMC F600 NODE 04\", \"DELL EMC F600 NODE 03\", \"DELL EMC F600 NODE 02\", \"DELL EMC F600 NODE 01\", \"DELL EMC B100 NODE 15\", \"DELL EMC A300 NODE 1\", \"DELL EMC A300 NODE 2\", \"DELL EMC A300 NODE 3\", \"DELL EMC A300 NODE 4\", \"DELL EMC A300 NODE 5\", \"DELL EMC A300 NODE 6\"],\n    peripheral: [\"IBM 3590 TAPE DRIVE TS1140\", \"IBM 3590 TAPE DRIVE TS1140\", \"IBM 3590 TAPE DRIVE TS1140\", \"IBM 3590 TAPE DRIVE TS1150\", \"NEOSERIES LTO 6 TAPE LIBRARY (2D-140 SLOTS)\", \"IBM LTO 8 TAPE LIBRARY (1D-40 SLOTS)\", \"IBM LTO 8 TAPE LIBRARY (1D-80 SLOTS)\", \"IBM LTO 8 TAPE LIBRARY (1D-80 SLOTS)\"]\n  };\n\n  // Function to Normalize array lengths.\n  function normalizeArrayLengths(data, fillValue = \"\") {\n    const maxLength = Math.max(...Object.values(data).map(arr => arr.length));\n    return Object.fromEntries(Object.entries(data).map(([key, value]) => [key, value.concat(Array(maxLength - value.length).fill(fillValue))]));\n  }\n\n  // const normalizedRacks = normalizeArrayLengths(racks);\n  const normalizedRacks = normalizeArrayLengths(response.data);\n  // console.log(normalizedRacks);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex mx-2 border-r border-black\",\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      rack: normalizedRacks.server,\n      name: \"Server\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      rack: normalizedRacks.network_1,\n      name: \"Network-I\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      rack: normalizedRacks.network_2,\n      name: \"Network-II\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      rack: normalizedRacks.storage,\n      name: \"Storage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      rack: normalizedRacks.peripheral,\n      name: \"Peripheral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_c = GnG;\nexport default GnG;\nvar _c;\n$RefreshReg$(_c, \"GnG\");","map":{"version":3,"names":["React","Table","axios","jsxDEV","_jsxDEV","GnG","getComponentsByDataCenterIndex","response","get","data","error","console","newracks","then","log","racks","server","network_1","network_2","storage","peripheral","normalizeArrayLengths","fillValue","maxLength","Math","max","Object","values","map","arr","length","fromEntries","entries","key","value","concat","Array","fill","normalizedRacks","className","children","rack","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/91981/Nigel/Internship/ONGC/ONGC_REACT_RACK/myapp/src/components/home_components/GnG.js"],"sourcesContent":["import React from 'react'\r\nimport Table from '../reusable/Table'\r\nimport axios from \"axios\"\r\n\r\n\r\n\r\n\r\nconst GnG = () => {\r\n    // TODO: API call to fetch racks\r\n    async function getComponentsByDataCenterIndex() {\r\n        try {\r\n            const response = await axios.get('/general/data-centers/1/components');\r\n            return response.data; // Assuming the response contains the grouped components data\r\n        } catch (error) {\r\n            console.error(\"Error fetching components:\", error);\r\n            // Handle errors appropriately, e.g., display an error message to the user\r\n        }\r\n    }\r\n    const newracks = getComponentsByDataCenterIndex()\r\n        .then(data => {\r\n            console.log(\"Racks:\", data);\r\n            // Use the retrieved components data in your application logic\r\n        });\r\n\r\n\r\n    // sample racks\r\n    const racks = {\r\n        server: [\r\n            \"DELL R730 SERVER\", \"DELL R730 SERVER\", \"DELL R740 SERVER\", \"KVM CONSOLE\",\r\n            \"DELL R740 SERVER\", \"DELL R940 SERVER\", \"DELL R940 SERVER\", \"DELL R940 SERVER\"\r\n        ],\r\n        network_1: [\r\n            \"CISCO SAN SWITCH MDS9148S\", \"WOBSP01 : S5232F\", \"WOBLF01 : S5232F\", \"PATCH PANEL\",\r\n            \"WOBLF03 : S4148T\", \"PATCH PANEL\", \"LIU\", \"WOBLF06 : S4148T\"\r\n        ],\r\n        network_2: [\r\n            \"LIU\", \"WOBSP02 : S5232F\", \"WOBLF02 : S5248F\", \"PATCH PANEL\",\r\n            \"WOBLF04 : S4148T\", \"PATCH PANEL\", \"LIU - INFOCOM\", \"LIU - SPIC\"\r\n        ],\r\n        storage: [\r\n            \"DELL STORAGE SAN SW1\", \"DELL STORAGE SAN SW1\", \"KVM CONSOLE\", \"DELL EMC F600 NODE 08\",\r\n            \"DELL EMC F600 NODE 07\", \"DELL EMC F600 NODE 06\", \"DELL EMC F600 NODE 05\",\r\n            \"DELL EMC F600 NODE 04\", \"DELL EMC F600 NODE 03\", \"DELL EMC F600 NODE 02\",\r\n            \"DELL EMC F600 NODE 01\", \"DELL EMC B100 NODE 15\", \"DELL EMC A300 NODE 1\",\r\n            \"DELL EMC A300 NODE 2\", \"DELL EMC A300 NODE 3\", \"DELL EMC A300 NODE 4\",\r\n            \"DELL EMC A300 NODE 5\", \"DELL EMC A300 NODE 6\"\r\n        ],\r\n        peripheral: [\r\n            \"IBM 3590 TAPE DRIVE TS1140\", \"IBM 3590 TAPE DRIVE TS1140\", \"IBM 3590 TAPE DRIVE TS1140\",\r\n            \"IBM 3590 TAPE DRIVE TS1150\", \"NEOSERIES LTO 6 TAPE LIBRARY (2D-140 SLOTS)\",\r\n            \"IBM LTO 8 TAPE LIBRARY (1D-40 SLOTS)\", \"IBM LTO 8 TAPE LIBRARY (1D-80 SLOTS)\",\r\n            \"IBM LTO 8 TAPE LIBRARY (1D-80 SLOTS)\"\r\n        ]\r\n    };\r\n\r\n\r\n    // Function to Normalize array lengths.\r\n    function normalizeArrayLengths(data, fillValue = \"\") {\r\n        const maxLength = Math.max(...Object.values(data).map((arr) => arr.length));\r\n        return Object.fromEntries(\r\n            Object.entries(data).map(([key, value]) => [key, value.concat(Array(maxLength - value.length).fill(fillValue))])\r\n        );\r\n    }\r\n\r\n    // const normalizedRacks = normalizeArrayLengths(racks);\r\n    const normalizedRacks = normalizeArrayLengths(response.data);\r\n    // console.log(normalizedRacks);\r\n\r\n\r\n\r\n    return (\r\n        <div className='flex mx-2 border-r border-black'>\r\n\r\n            <Table rack={normalizedRacks.server} name=\"Server\" />\r\n            <Table rack={normalizedRacks.network_1} name=\"Network-I\" />\r\n            <Table rack={normalizedRacks.network_2} name=\"Network-II\" />\r\n            <Table rack={normalizedRacks.storage} name=\"Storage\" />\r\n            <Table rack={normalizedRacks.peripheral} name=\"Peripheral\" />\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default GnG"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}