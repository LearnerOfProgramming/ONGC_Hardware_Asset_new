{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91981\\\\Nigel\\\\Internship\\\\ONGC\\\\ONGC_REACT_RACK\\\\myapp\\\\src\\\\components\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  _s();\n  const [components, setComponents] = useState([]);\n  const [stats, setStats] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [newComponent, setNewComponent] = useState({\n    type: '',\n    name: '',\n    startSlot: '',\n    rackId: '',\n    slotsOccupied: 1\n  });\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const componentTypes = {\n    1: 'server',\n    2: 'storage',\n    3: 'switch',\n    4: 'tape drive',\n    5: 'others'\n  };\n  const rackTypes = ['server', 'network 1', 'network 2', 'storage', 'peripheral'];\n  const vendorList = {\n    100001: 'Dell',\n    100002: 'Cisco',\n    100004: 'NeoSeries'\n  };\n  useEffect(() => {\n    fetchComponents();\n  }, []);\n  const fetchComponents = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/general/data-centers/1/components');\n      const componentsData = JSON.parse(response.data); // Parse the JSON data\n      setComponents(componentsData); // Ensure data is an array\n      calculateStats(response.data);\n      setLoading(false);\n    } catch (err) {\n      setError('Error fetching components');\n      setLoading(false);\n    }\n  };\n  const calculateStats = data => {\n    const stats = {\n      totalComponents: 0,\n      componentsByType: {},\n      componentsByRack: {}\n    };\n    Object.values(data).forEach(rackComponents => {\n      rackComponents.forEach(component => {\n        stats.totalComponents++;\n        stats.componentsByType[component.type] = (stats.componentsByType[component.type] || 0) + 1;\n        stats.componentsByRack[component.rackId.name] = (stats.componentsByRack[component.rackId.name] || 0) + 1;\n      });\n    });\n    setStats(stats);\n  };\n  const calculateAvailableSlots = data => {\n    const occupiedSlots = new Set();\n    Object.values(data).forEach(rackComponents => {\n      rackComponents.forEach(component => {\n        for (let i = component.startSlot; i < component.startSlot + component.slotsOccupied; i++) {\n          occupiedSlots.add(i);\n        }\n      });\n    });\n    const availableSlots = Array.from({\n      length: 42\n    }, (_, i) => i + 1).filter(slot => !occupiedSlots.has(slot));\n    setAvailableSlots(availableSlots);\n  };\n  const handleDelete = async componentId => {\n    if (window.confirm('Are you sure you want to delete this component?')) {\n      try {\n        await axios.delete(`/general/components/${componentId}`);\n        fetchComponents(); // Refresh the list\n      } catch (err) {\n        setError('Error deleting component');\n      }\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewComponent(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  useEffect(() => {\n    if (newComponent.slotsOccupied) {\n      calculateAvailableSlots(components);\n    }\n  }, [newComponent.slotsOccupied, components]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('/general/components', newComponent);\n      setIsDialogOpen(false);\n      setNewComponent({\n        type: '',\n        name: '',\n        startSlot: '',\n        rack: '',\n        slotsOccupied: 1\n      });\n      fetchComponents(); // Refresh the list\n    } catch (err) {\n      setError('Error adding component');\n    }\n  };\n  const handleExtend = async (componentId, currentSlots) => {\n    const newSlots = prompt(`Enter new number of slots (current: ${currentSlots}):`, currentSlots);\n    if (newSlots && !isNaN(newSlots)) {\n      try {\n        await axios.put(`/general/components/${componentId}`, {\n          slotsOccupied: parseInt(newSlots)\n        });\n        fetchComponents(); // Refresh the list\n      } catch (err) {\n        setError('Error extending component');\n      }\n    }\n  };\n  const renderComponentFields = () => {\n    switch (newComponent.type) {\n      case '1':\n        // Server\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"serviceTag\",\n            value: newComponent.serviceTag || '',\n            onChange: handleInputChange,\n            placeholder: \"Service Tag / SN\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"makeModel\",\n            value: newComponent.makeModel || '',\n            onChange: handleInputChange,\n            placeholder: \"Make / Model\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"ram\",\n            value: newComponent.ram || '',\n            onChange: handleInputChange,\n            placeholder: \"RAM (GB)\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"hdd\",\n            value: newComponent.hdd || '',\n            onChange: handleInputChange,\n            placeholder: \"HDD (GB)\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"processor\",\n            value: newComponent.processor || '',\n            onChange: handleInputChange,\n            placeholder: \"Processor\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"vendor\",\n            value: newComponent.vendor || '',\n            onChange: handleInputChange,\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Vendor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), Object.entries(vendorList).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: id,\n              children: name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case '2':\n        // Storage\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"serviceTag\",\n            value: newComponent.serviceTag || '',\n            onChange: handleInputChange,\n            placeholder: \"Service Tag / SN\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"makeModel\",\n            value: newComponent.makeModel || '',\n            onChange: handleInputChange,\n            placeholder: \"Make / Model\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"vendor\",\n            value: newComponent.vendor || '',\n            onChange: handleInputChange,\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Vendor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), Object.entries(vendorList).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: id,\n              children: name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case '3':\n        // Switch\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"serviceTag\",\n            value: newComponent.serviceTag || '',\n            onChange: handleInputChange,\n            placeholder: \"Service Tag / SN\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"makeModel\",\n            value: newComponent.makeModel || '',\n            onChange: handleInputChange,\n            placeholder: \"Make / Model\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"ports\",\n            value: newComponent.ports || '',\n            onChange: handleInputChange,\n            placeholder: \"No. of ports\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"vendor\",\n            value: newComponent.vendor || '',\n            onChange: handleInputChange,\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Vendor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), Object.entries(vendorList).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: id,\n              children: name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case '4':\n        // Tape Drive\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"serviceTag\",\n            value: newComponent.serviceTag || '',\n            onChange: handleInputChange,\n            placeholder: \"Service Tag / SN\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"makeModel\",\n            value: newComponent.makeModel || '',\n            onChange: handleInputChange,\n            placeholder: \"Make / Model\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"vendor\",\n            value: newComponent.vendor || '',\n            onChange: handleInputChange,\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Vendor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), Object.entries(vendorList).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: id,\n              children: name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case '5':\n        // Others\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"serviceTag\",\n            value: newComponent.serviceTag || '',\n            onChange: handleInputChange,\n            placeholder: \"Service Tag / SN\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"makeModel\",\n            value: newComponent.makeModel || '',\n            onChange: handleInputChange,\n            placeholder: \"Make / Model\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"vendor\",\n            value: newComponent.vendor || '',\n            onChange: handleInputChange,\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Vendor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this), Object.entries(vendorList).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: id,\n              children: name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      default:\n        return null;\n    }\n  };\n  const renderAvailableSlots = () => {\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"startSlot\",\n      value: newComponent.startSlot,\n      onChange: handleInputChange,\n      className: \"w-full p-2 mb-4 border rounded\",\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Start Slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), availableSlots.map(slot => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: slot,\n        children: slot\n      }, slot, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Components\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full border-collapse\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-4 py-2\",\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-4 py-2\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-4 py-2\",\n              children: \"Start Slot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-4 py-2\",\n              children: \"Slots Occupied\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-4 py-2\",\n              children: \"Rack ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-4 py-2\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: components.map(component => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border px-4 py-2\",\n              children: componentTypes[component.type]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border px-4 py-2\",\n              children: component.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border px-4 py-2\",\n              children: component.startSlot\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border px-4 py-2\",\n              children: component.slotsOccupied\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border px-4 py-2\",\n              children: component.rackId.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border px-4 py-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleExtend(component.id, component.slotsOccupied),\n                className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mr-2\",\n                children: \"Extend\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(component.id),\n                className: \"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 19\n            }, this)]\n          }, component.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsDialogOpen(true),\n          className: \"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\",\n          children: \"Add Component\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }, this), isDialogOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-75\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded shadow-lg w-1/2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold mb-4\",\n            children: \"Add Component\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"type\",\n              value: newComponent.type,\n              onChange: handleInputChange,\n              className: \"w-full p-2 mb-4 border rounded\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 21\n              }, this), Object.entries(componentTypes).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: key,\n                children: value\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: newComponent.name,\n              onChange: handleInputChange,\n              placeholder: \"Name\",\n              className: \"w-full p-2 mb-4 border rounded\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 19\n            }, this), renderAvailableSlots(), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"slotsOccupied\",\n              value: newComponent.slotsOccupied,\n              onChange: handleInputChange,\n              placeholder: \"Slots Occupied\",\n              className: \"w-full p-2 mb-4 border rounded\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"rackId\",\n              value: newComponent.rackId,\n              onChange: handleInputChange,\n              className: \"w-full p-2 mb-4 border rounded\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Rack\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 21\n              }, this), rackTypes.map(rack => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: rack,\n                children: rack\n              }, rack, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 19\n            }, this), renderComponentFields(), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-end mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => setIsDialogOpen(false),\n                className: \"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded mr-2\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\",\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mt-4\",\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Components: \", stats.totalComponents]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-bold mt-2\",\n        children: \"Components by Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(stats.componentsByType).map(([type, count]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [componentTypes[type], \": \", count]\n        }, type, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-bold mt-2\",\n        children: \"Components by Rack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(stats.componentsByRack).map(([rack, count]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [rack, \": \", count]\n        }, rack, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 5\n  }, this);\n};\n_s(Admin, \"uqvbgWJiITm7McR7JLJKJYmO184=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Admin","_s","components","setComponents","stats","setStats","loading","setLoading","error","setError","isDialogOpen","setIsDialogOpen","newComponent","setNewComponent","type","name","startSlot","rackId","slotsOccupied","availableSlots","setAvailableSlots","componentTypes","rackTypes","vendorList","fetchComponents","response","get","componentsData","JSON","parse","data","calculateStats","err","totalComponents","componentsByType","componentsByRack","Object","values","forEach","rackComponents","component","calculateAvailableSlots","occupiedSlots","Set","i","add","Array","from","length","_","filter","slot","has","handleDelete","componentId","window","confirm","delete","handleInputChange","e","value","target","prev","handleSubmit","preventDefault","post","rack","handleExtend","currentSlots","newSlots","prompt","isNaN","put","parseInt","renderComponentFields","children","serviceTag","onChange","placeholder","className","required","fileName","_jsxFileName","lineNumber","columnNumber","makeModel","ram","hdd","processor","vendor","entries","map","id","ports","renderAvailableSlots","onClick","onSubmit","key","count","_c","$RefreshReg$"],"sources":["C:/Users/91981/Nigel/Internship/ONGC/ONGC_REACT_RACK/myapp/src/components/Admin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Admin = () => {\r\n  const [components, setComponents] = useState([]);\r\n  const [stats, setStats] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [newComponent, setNewComponent] = useState({\r\n    type: '',\r\n    name: '',\r\n    startSlot: '',\r\n    rackId: '',\r\n    slotsOccupied: 1,\r\n  });\r\n\r\n  const [availableSlots, setAvailableSlots] = useState([]);\r\n\r\n  const componentTypes = {\r\n    1: 'server',\r\n    2: 'storage',\r\n    3: 'switch',\r\n    4: 'tape drive',\r\n    5: 'others'\r\n  };\r\n  const rackTypes = ['server', 'network 1', 'network 2', 'storage', 'peripheral'];\r\n\r\n  const vendorList = {\r\n    100001: 'Dell',\r\n    100002: 'Cisco',\r\n    100004: 'NeoSeries',\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchComponents();\r\n  }, []);\r\n\r\n  const fetchComponents = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get('/general/data-centers/1/components');\r\n      const componentsData = JSON.parse(response.data); // Parse the JSON data\r\n      setComponents(componentsData ); // Ensure data is an array\r\n      calculateStats(response.data);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError('Error fetching components');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const calculateStats = (data) => {\r\n    const stats = {\r\n      totalComponents: 0,\r\n      componentsByType: {},\r\n      componentsByRack: {},\r\n    };\r\n\r\n    Object.values(data).forEach(rackComponents => {\r\n      rackComponents.forEach(component => {\r\n        stats.totalComponents++;\r\n        stats.componentsByType[component.type] = (stats.componentsByType[component.type] || 0) + 1;\r\n        stats.componentsByRack[component.rackId.name] = (stats.componentsByRack[component.rackId.name] || 0) + 1;\r\n      });\r\n    });\r\n\r\n    setStats(stats);\r\n  };\r\n\r\n  const calculateAvailableSlots = (data) => {\r\n    const occupiedSlots = new Set();\r\n    Object.values(data).forEach(rackComponents => {\r\n      rackComponents.forEach(component => {\r\n        for (let i = component.startSlot; i < component.startSlot + component.slotsOccupied; i++) {\r\n          occupiedSlots.add(i);\r\n        }\r\n      });\r\n    });\r\n    const availableSlots = Array.from({ length: 42 }, (_, i) => i + 1).filter(slot => !occupiedSlots.has(slot));\r\n    setAvailableSlots(availableSlots);\r\n  };\r\n\r\n  const handleDelete = async (componentId) => {\r\n    if (window.confirm('Are you sure you want to delete this component?')) {\r\n      try {\r\n        await axios.delete(`/general/components/${componentId}`);\r\n        fetchComponents(); // Refresh the list\r\n      } catch (err) {\r\n        setError('Error deleting component');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewComponent(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (newComponent.slotsOccupied) {\r\n      calculateAvailableSlots(components);\r\n    }\r\n  }, [newComponent.slotsOccupied, components]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('/general/components', newComponent);\r\n      setIsDialogOpen(false);\r\n      setNewComponent({ type: '', name: '', startSlot: '', rack: '', slotsOccupied: 1 });\r\n      fetchComponents(); // Refresh the list\r\n    } catch (err) {\r\n      setError('Error adding component');\r\n    }\r\n  };\r\n\r\n  const handleExtend = async (componentId, currentSlots) => {\r\n    const newSlots = prompt(`Enter new number of slots (current: ${currentSlots}):`, currentSlots);\r\n    if (newSlots && !isNaN(newSlots)) {\r\n      try {\r\n        await axios.put(`/general/components/${componentId}`, { slotsOccupied: parseInt(newSlots) });\r\n        fetchComponents(); // Refresh the list\r\n      } catch (err) {\r\n        setError('Error extending component');\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderComponentFields = () => {\r\n    switch (newComponent.type) {\r\n      case '1': // Server\r\n        return (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              name=\"serviceTag\"\r\n              value={newComponent.serviceTag || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Service Tag / SN\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"makeModel\"\r\n              value={newComponent.makeModel || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Make / Model\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"ram\"\r\n              value={newComponent.ram || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"RAM (GB)\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"hdd\"\r\n              value={newComponent.hdd || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"HDD (GB)\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"processor\"\r\n              value={newComponent.processor || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Processor\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <select\r\n              name=\"vendor\"\r\n              value={newComponent.vendor || ''}\r\n              onChange={handleInputChange}\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            >\r\n              <option value=\"\">Select Vendor</option>\r\n              {Object.entries(vendorList).map(([id, name]) => (\r\n                <option key={id} value={id}>{name}</option>\r\n              ))}\r\n            </select>\r\n          </>\r\n        );\r\n      case '2': // Storage\r\n        return (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              name=\"serviceTag\"\r\n              value={newComponent.serviceTag || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Service Tag / SN\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"makeModel\"\r\n              value={newComponent.makeModel || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Make / Model\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <select\r\n              name=\"vendor\"\r\n              value={newComponent.vendor || ''}\r\n              onChange={handleInputChange}\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            >\r\n              <option value=\"\">Select Vendor</option>\r\n              {Object.entries(vendorList).map(([id, name]) => (\r\n                <option key={id} value={id}>{name}</option>\r\n              ))}\r\n            </select>\r\n          </>\r\n        );\r\n      case '3': // Switch\r\n        return (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              name=\"serviceTag\"\r\n              value={newComponent.serviceTag || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Service Tag / SN\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"makeModel\"\r\n              value={newComponent.makeModel || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Make / Model\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"ports\"\r\n              value={newComponent.ports || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"No. of ports\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <select\r\n              name=\"vendor\"\r\n              value={newComponent.vendor || ''}\r\n              onChange={handleInputChange}\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            >\r\n              <option value=\"\">Select Vendor</option>\r\n              {Object.entries(vendorList).map(([id, name]) => (\r\n                <option key={id} value={id}>{name}</option>\r\n              ))}\r\n            </select>\r\n          </>\r\n        );\r\n      case '4': // Tape Drive\r\n        return (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              name=\"serviceTag\"\r\n              value={newComponent.serviceTag || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Service Tag / SN\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"makeModel\"\r\n              value={newComponent.makeModel || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Make / Model\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <select\r\n              name=\"vendor\"\r\n              value={newComponent.vendor || ''}\r\n              onChange={handleInputChange}\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            >\r\n              <option value=\"\">Select Vendor</option>\r\n              {Object.entries(vendorList).map(([id, name]) => (\r\n                <option key={id} value={id}>{name}</option>\r\n              ))}\r\n            </select>\r\n          </>\r\n        );\r\n      case '5': // Others\r\n        return (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              name=\"serviceTag\"\r\n              value={newComponent.serviceTag || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Service Tag / SN\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"makeModel\"\r\n              value={newComponent.makeModel || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Make / Model\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <select\r\n              name=\"vendor\"\r\n              value={newComponent.vendor || ''}\r\n              onChange={handleInputChange}\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            >\r\n              <option value=\"\">Select Vendor</option>\r\n              {Object.entries(vendorList).map(([id, name]) => (\r\n                <option key={id} value={id}>{name}</option>\r\n              ))}\r\n            </select>\r\n          </>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const renderAvailableSlots = () => {\r\n    return (\r\n      <select\r\n        name=\"startSlot\"\r\n        value={newComponent.startSlot}\r\n        onChange={handleInputChange}\r\n        className=\"w-full p-2 mb-4 border rounded\"\r\n        required\r\n      >\r\n        <option value=\"\">Select Start Slot</option>\r\n        {availableSlots.map(slot => (\r\n          <option key={slot} value={slot}>\r\n            {slot}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : error ? (\r\n        <p>{error}</p>\r\n      ) : (\r\n        <>\r\n          <h1 className=\"text-2xl font-bold mb-4\">Components</h1>\r\n          <table className=\"w-full border-collapse\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"border px-4 py-2\">Type</th>\r\n                <th className=\"border px-4 py-2\">Name</th>\r\n                <th className=\"border px-4 py-2\">Start Slot</th>\r\n                <th className=\"border px-4 py-2\">Slots Occupied</th>\r\n                <th className=\"border px-4 py-2\">Rack ID</th>\r\n                <th className=\"border px-4 py-2\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {components.map(component => (\r\n                <tr key={component.id}>\r\n                  <td className=\"border px-4 py-2\">{componentTypes[component.type]}</td>\r\n                  <td className=\"border px-4 py-2\">{component.name}</td>\r\n                  <td className=\"border px-4 py-2\">{component.startSlot}</td>\r\n                  <td className=\"border px-4 py-2\">{component.slotsOccupied}</td>\r\n                  <td className=\"border px-4 py-2\">{component.rackId.name}</td>\r\n                  <td className=\"border px-4 py-2\">\r\n                    <button\r\n                      onClick={() => handleExtend(component.id, component.slotsOccupied)}\r\n                      className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mr-2\"\r\n                    >\r\n                      Extend\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleDelete(component.id)}\r\n                      className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          <div className=\"mt-4\">\r\n            <button\r\n              onClick={() => setIsDialogOpen(true)}\r\n              className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\r\n            >\r\n              Add Component\r\n            </button>\r\n          </div>\r\n          {isDialogOpen && (\r\n            <div className=\"fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-75\">\r\n              <div className=\"bg-white p-6 rounded shadow-lg w-1/2\">\r\n                <h2 className=\"text-xl font-bold mb-4\">Add Component</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                  <select\r\n                    name=\"type\"\r\n                    value={newComponent.type}\r\n                    onChange={handleInputChange}\r\n                    className=\"w-full p-2 mb-4 border rounded\"\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select Type</option>\r\n                    {Object.entries(componentTypes).map(([key, value]) => (\r\n                      <option key={key} value={key}>{value}</option>\r\n                    ))}\r\n                  </select>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={newComponent.name}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Name\"\r\n                    className=\"w-full p-2 mb-4 border rounded\"\r\n                    required\r\n                  />\r\n                  {renderAvailableSlots()}\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"slotsOccupied\"\r\n                    value={newComponent.slotsOccupied}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Slots Occupied\"\r\n                    className=\"w-full p-2 mb-4 border rounded\"\r\n                    required\r\n                  />\r\n                  <select\r\n                    name=\"rackId\"\r\n                    value={newComponent.rackId}\r\n                    onChange={handleInputChange}\r\n                    className=\"w-full p-2 mb-4 border rounded\"\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select Rack</option>\r\n                    {rackTypes.map(rack => (\r\n                      <option key={rack} value={rack}>{rack}</option>\r\n                    ))}\r\n                  </select>\r\n                  {renderComponentFields()}\r\n                  <div className=\"flex justify-end mt-4\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => setIsDialogOpen(false)}\r\n                      className=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded mr-2\"\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\r\n                    >\r\n                      Add\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <h2 className=\"text-xl font-bold mt-4\">Statistics</h2>\r\n          <p>Total Components: {stats.totalComponents}</p>\r\n          <h3 className=\"text-lg font-bold mt-2\">Components by Type</h3>\r\n          <ul>\r\n            {Object.entries(stats.componentsByType).map(([type, count]) => (\r\n              <li key={type}>{componentTypes[type]}: {count}</li>\r\n            ))}\r\n          </ul>\r\n          <h3 className=\"text-lg font-bold mt-2\">Components by Rack</h3>\r\n          <ul>\r\n            {Object.entries(stats.componentsByRack).map(([rack, count]) => (\r\n              <li key={rack}>{rack}: {count}</li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}