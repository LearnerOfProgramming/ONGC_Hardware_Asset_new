{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91981\\\\Nigel\\\\Internship\\\\ONGC\\\\ONGC_REACT_RACK\\\\myapp\\\\src\\\\components\\\\home_components\\\\home_layout.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Table from '../reusable/Table';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Layout = ({\n  dataCenter\n}) => {\n  _s();\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\n  const [normalizedRacks, setNormalizedRacks] = useState({});\n\n  // Updated color mapping based on 'type' field\n  const colorMapping = {\n    1: \"rgba(255, 0, 0, 0.7)\",\n    // type 1 is for servers\n    2: \"rgba(0, 0, 255, 0.7)\",\n    // type 2 is for general storage devices\n    3: \"rgba(0, 128, 0, 0.7)\",\n    // type 3 is for switches\n    4: \"rgba(255, 165, 0, 0.7)\",\n    // type 4 is for tape drives\n    5: \"rgba(200, 165, 0, 0.7)\" // type 5 is for others\n  };\n  const getItemType = item => {\n    return colorMapping[item.type] || 'rgba(200, 200, 200, 0.6)'; // Default gray color\n  };\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await axios.get(`/general/data-centers/${dataCenter}/components`);\n        const data = response.data;\n        const processedData = Object.entries(data).reduce((acc, [rackName, components]) => {\n          acc[rackName] = components.map(component => ({\n            ...component,\n            color: getItemType(component)\n          }));\n          return acc;\n        }, {});\n        setNormalizedRacks(processedData);\n      } catch (error) {\n        console.error(\"Error fetching components:\", error);\n      }\n    }\n    fetchData();\n  }, [dataCenter]);\n  if (Object.keys(normalizedRacks).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 text-xl font-bold\",\n      children: \"Gathering Assets...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  }\n  const rackOrder = ['Server', 'Network1', 'Network2', 'Storage', 'Peripheral'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex mx-2 border-r rounded-md border-black\",\n    children: rackOrder.map(rackName => {\n      if (normalizedRacks[rackName]) {\n        return /*#__PURE__*/_jsxDEV(Table, {\n          rack: normalizedRacks[rackName],\n          name: rackName\n        }, rackName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 28\n        }, this);\n      }\n      return null;\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(Layout, \"a5ytGQfag69qRV8TTj45SirQoTs=\");\n_c = Layout;\nexport default Layout;\nvar _c;\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"names":["React","useState","useEffect","Table","axios","jsxDEV","_jsxDEV","Layout","dataCenter","_s","refreshTrigger","setRefreshTrigger","normalizedRacks","setNormalizedRacks","colorMapping","getItemType","item","type","fetchData","response","get","data","processedData","Object","entries","reduce","acc","rackName","components","map","component","color","error","console","keys","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rackOrder","rack","name","_c","$RefreshReg$"],"sources":["C:/Users/91981/Nigel/Internship/ONGC/ONGC_REACT_RACK/myapp/src/components/home_components/home_layout.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Table from '../reusable/Table'\r\nimport axios from \"axios\"\r\n\r\nconst Layout = ({ dataCenter }) => {\r\n    const [refreshTrigger, setRefreshTrigger] = useState(0);\r\n    const [normalizedRacks, setNormalizedRacks] = useState({});\r\n\r\n    // Updated color mapping based on 'type' field\r\n    const colorMapping = {\r\n        1: \"rgba(255, 0, 0, 0.7)\",    // type 1 is for servers\r\n        2: \"rgba(0, 0, 255, 0.7)\",    // type 2 is for general storage devices\r\n        3: \"rgba(0, 128, 0, 0.7)\",    // type 3 is for switches\r\n        4: \"rgba(255, 165, 0, 0.7)\",  // type 4 is for tape drives\r\n        5: \"rgba(200, 165, 0, 0.7)\",  // type 5 is for others\r\n\r\n    };\r\n\r\n    const getItemType = (item) => {\r\n        return colorMapping[item.type] || 'rgba(200, 200, 200, 0.6)'; // Default gray color\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const response = await axios.get(`/general/data-centers/${dataCenter}/components`);\r\n                const data = response.data;\r\n\r\n\r\n                const processedData = Object.entries(data).reduce((acc, [rackName, components]) => {\r\n                    acc[rackName] = components.map(component => ({\r\n                        ...component,\r\n                        color: getItemType(component)\r\n                    }));\r\n                    return acc;\r\n                }, {});\r\n                setNormalizedRacks(processedData);\r\n            } catch (error) {\r\n                console.error(\"Error fetching components:\", error);\r\n                \r\n            }\r\n        }\r\n\r\n        fetchData();\r\n    }, [dataCenter]);\r\n\r\n    if (Object.keys(normalizedRacks).length === 0) {\r\n        return <div className='p-4 text-xl font-bold'>Gathering Assets...</div>;\r\n    }\r\n\r\n    const rackOrder = ['Server', 'Network1', 'Network2', 'Storage', 'Peripheral'];\r\n\r\n    return (\r\n        <div className='flex mx-2 border-r rounded-md border-black'>\r\n            {rackOrder.map(rackName => {\r\n                if (normalizedRacks[rackName]) {\r\n                    return <Table key={rackName} rack={normalizedRacks[rackName]} name={rackName} />;\r\n                }\r\n                return null;\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}