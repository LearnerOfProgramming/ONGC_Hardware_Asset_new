{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91981\\\\Nigel\\\\Internship\\\\ONGC\\\\ONGC_REACT_RACK\\\\myapp\\\\src\\\\components\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  _s();\n  const [components, setComponents] = useState({});\n  const [stats, setStats] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [newComponent, setNewComponent] = useState({\n    type: '',\n    name: '',\n    startSlot: '',\n    rack: '',\n    size: 1\n  });\n  const updateComponents = data => {\n    setComponents(c => ({\n      ...c,\n      ...data\n    }));\n  };\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const componentTypes = {\n    1: 'server',\n    2: 'storage',\n    3: 'switch',\n    4: 'tape drive',\n    5: 'others'\n  };\n  const rackTypes = ['Server', 'Network1', 'Network2', 'Storage', 'Peripheral'];\n  const vendorList = {\n    100001: 'Dell',\n    100002: 'Cisco',\n    100004: 'NeoSeries'\n  };\n  useEffect(() => {\n    fetchComponents();\n  }, []);\n  const fetchComponents = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/general/data-centers/1/components');\n      updateComponents(response.data);\n      calculateStats(response.data);\n      setLoading(false);\n    } catch (err) {\n      setError('Error fetching components');\n      setLoading(false);\n    }\n  };\n  const calculateStats = data => {\n    const stats = {\n      totalComponents: 0,\n      componentsByType: {},\n      componentsByRack: {}\n    };\n    Object.values(data).forEach(rackComponents => {\n      rackComponents.forEach(component => {\n        stats.totalComponents++;\n        stats.componentsByType[component.type] = (stats.componentsByType[component.type] || 0) + 1;\n        stats.componentsByRack[component.rackId.name] = (stats.componentsByRack[component.rackId.name] || 0) + 1;\n      });\n    });\n    setStats(stats);\n  };\n  useEffect(() => {\n    if (newComponent.size && newComponent.rack) {\n      calculateAvailableSlots(newComponent.rack, components);\n    }\n  }, [newComponent.size, newComponent.rack, components]);\n  const calculateAvailableSlots = (rack, data) => {\n    const occupiedSlots = new Set();\n\n    // Check if the rack exists in the data object\n    if (data[rack]) {\n      // Iterate through the components in the specified rack\n      data[rack].forEach(component => {\n        // Adjust the occupied slots based on slotsOccupied and startSlot\n        for (let i = component.startSlot; i < component.startSlot + component.size; i++) {\n          occupiedSlots.add(i);\n        }\n      });\n    }\n\n    // Calculate available slots\n    const availableSlots = Array.from({\n      length: 42\n    }, (_, i) => i + 1).filter(slot => {\n      // Check if the slot is available for the desired slotsOccupied\n      for (let j = 0; j < newComponent.size; j++) {\n        if (occupiedSlots.has(slot + j)) {\n          return false; // Slot is occupied, so exclude it\n        }\n      }\n      return true; // Slot is available\n    });\n    setAvailableSlots(availableSlots);\n  };\n  const handleDelete = async componentId => {\n    if (window.confirm('Are you sure you want to delete this component?')) {\n      try {\n        await axios.delete(`/general/components/${componentId}`);\n        fetchComponents(); // Refresh the list\n      } catch (err) {\n        setError('Error deleting component');\n      }\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewComponent(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    if (name === 'rack') {\n      calculateAvailableSlots(value, components);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('/general/components', newComponent);\n      setIsDialogOpen(false);\n      setNewComponent({\n        type: '',\n        name: '',\n        startSlot: '',\n        rack: '',\n        size: 1\n      });\n      fetchComponents(); // Refresh the list\n    } catch (err) {\n      setError('Error adding component');\n    }\n  };\n  const handleExtend = async (componentId, currentSlots) => {\n    const newSlots = prompt(`Enter new number of slots (current: ${currentSlots}):`, currentSlots);\n    if (newSlots && !isNaN(newSlots)) {\n      try {\n        await axios.put(`/general/components/${componentId}`, {\n          size: parseInt(newSlots)\n        });\n        fetchComponents(); // Refresh the list\n      } catch (err) {\n        setError('Error extending component');\n      }\n    }\n  };\n  const renderComponentFields = () => {\n    switch (newComponent.type) {\n      case '1':\n        // Server\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"serviceTag\",\n            value: newComponent.serviceTag || '',\n            onChange: handleInputChange,\n            placeholder: \"Service Tag / SN\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"makeModel\",\n            value: newComponent.makeModel || '',\n            onChange: handleInputChange,\n            placeholder: \"Make / Model\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"ram\",\n            value: newComponent.ram || '',\n            onChange: handleInputChange,\n            placeholder: \"RAM (GB)\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"hdd\",\n            value: newComponent.hdd || '',\n            onChange: handleInputChange,\n            placeholder: \"HDD (GB)\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"processor\",\n            value: newComponent.processor || '',\n            onChange: handleInputChange,\n            placeholder: \"Processor\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"vendor\",\n            value: newComponent.vendor || '',\n            onChange: handleInputChange,\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Vendor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), Object.entries(vendorList).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: id,\n              children: name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case '2':\n        // Storage\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"serviceTag\",\n            value: newComponent.serviceTag || '',\n            onChange: handleInputChange,\n            placeholder: \"Service Tag / SN\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"makeModel\",\n            value: newComponent.makeModel || '',\n            onChange: handleInputChange,\n            placeholder: \"Make / Model\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"vendor\",\n            value: newComponent.vendor || '',\n            onChange: handleInputChange,\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Vendor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), Object.entries(vendorList).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: id,\n              children: name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case '3':\n        // Switch\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"serviceTag\",\n            value: newComponent.serviceTag || '',\n            onChange: handleInputChange,\n            placeholder: \"Service Tag / SN\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"makeModel\",\n            value: newComponent.makeModel || '',\n            onChange: handleInputChange,\n            placeholder: \"Make / Model\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"ports\",\n            value: newComponent.ports || '',\n            onChange: handleInputChange,\n            placeholder: \"No. of ports\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"vendor\",\n            value: newComponent.vendor || '',\n            onChange: handleInputChange,\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Vendor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), Object.entries(vendorList).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: id,\n              children: name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case '4':\n        // Tape Drive\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"serviceTag\",\n            value: newComponent.serviceTag || '',\n            onChange: handleInputChange,\n            placeholder: \"Service Tag / SN\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"makeModel\",\n            value: newComponent.makeModel || '',\n            onChange: handleInputChange,\n            placeholder: \"Make / Model\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"drives\",\n            value: newComponent.drives || '',\n            onChange: handleInputChange,\n            placeholder: \"No. of drives\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"slots\",\n            value: newComponent.slots || '',\n            onChange: handleInputChange,\n            placeholder: \"No. of slots\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"vendor\",\n            value: newComponent.vendor || '',\n            onChange: handleInputChange,\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Vendor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this), Object.entries(vendorList).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: id,\n              children: name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      default:\n        return null;\n    }\n  };\n  const renderAvailableSlots = () => {\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"startSlot\",\n      value: newComponent.startSlot,\n      onChange: handleInputChange,\n      className: \"w-full p-2 mb-4 border rounded\",\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Start Slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), availableSlots.map(slot => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: slot,\n        children: slot\n      }, slot, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 374,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 375,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Data Center Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsDialogOpen(true),\n      className: \"bg-blue-500 text-white px-4 py-2 rounded mb-4\",\n      children: \"Add New Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this), isDialogOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" relative top-32 mx-auto p-5 border w-10/12 shadow-lg rounded-md bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Add New Component\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" grid grid-cols-2 gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"type\",\n              value: newComponent.type,\n              onChange: handleInputChange,\n              className: \"w-full p-2 mb-4 border rounded\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Component Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this), Object.entries(componentTypes).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: key,\n                children: value\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this), renderComponentFields(), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: newComponent.name,\n              onChange: handleInputChange,\n              placeholder: \"Component Name\",\n              className: \"w-full p-2 mb-4 border rounded\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"rack\",\n              value: newComponent.rack,\n              onChange: handleInputChange,\n              className: \"w-full p-2 mb-4 border rounded\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Rack\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 19\n              }, this), rackTypes.map((rack, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: rack,\n                children: rack\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"size\",\n              value: newComponent.size,\n              onChange: handleInputChange,\n              className: \"w-full p-2 mb-4 border rounded\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Slots Occupied\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 19\n              }, this), Array.from({\n                length: 40 - newComponent.startSlot + 1\n              }, (_, i) => i + 1).map(slot => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: slot,\n                children: slot\n              }, slot, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this), renderAvailableSlots()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setIsDialogOpen(false),\n              className: \"bg-gray-300 text-black px-4 py-2 rounded mr-2\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n              children: \"Add Component\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Components: \", stats.totalComponents]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mt-2\",\n        children: \"Components by Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(stats.componentsByType).map(([type, count]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [type, \": \", count]\n        }, type, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mt-2\",\n        children: \"Components by Rack:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(stats.componentsByRack).map(([rack, count]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [rack, \": \", count]\n        }, rack, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Component List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 9\n      }, this), Object.entries(components).map(([rackName, rackComponents]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold\",\n          children: rackName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: rackComponents.map(component => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"flex justify-between items-center mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [component.name, \" (Type: \", componentTypes[component.type] || component.type, \", Slot: \", component.startSlot, \", Slots Occupied: \", component.size, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleExtend(component._id, component.size),\n                className: \"bg-yellow-500 text-white px-2 py-1 rounded mr-2\",\n                children: \"Extend/Retract\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(component._id),\n                className: \"bg-red-500 text-white px-2 py-1 rounded\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 19\n            }, this)]\n          }, component._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 13\n        }, this)]\n      }, rackName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 378,\n    columnNumber: 5\n  }, this);\n};\n_s(Admin, \"9RgyEG9Mqd/UMVPADLXmU7gyDWI=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Admin","_s","components","setComponents","stats","setStats","loading","setLoading","error","setError","isDialogOpen","setIsDialogOpen","newComponent","setNewComponent","type","name","startSlot","rack","size","updateComponents","data","c","availableSlots","setAvailableSlots","componentTypes","rackTypes","vendorList","fetchComponents","response","get","calculateStats","err","totalComponents","componentsByType","componentsByRack","Object","values","forEach","rackComponents","component","rackId","calculateAvailableSlots","occupiedSlots","Set","i","add","Array","from","length","_","filter","slot","j","has","handleDelete","componentId","window","confirm","delete","handleInputChange","e","value","target","prev","handleSubmit","preventDefault","post","handleExtend","currentSlots","newSlots","prompt","isNaN","put","parseInt","renderComponentFields","children","serviceTag","onChange","placeholder","className","required","fileName","_jsxFileName","lineNumber","columnNumber","makeModel","ram","hdd","processor","vendor","entries","map","id","ports","drives","slots","renderAvailableSlots","onClick","onSubmit","key","index","count","rackName","_id","_c","$RefreshReg$"],"sources":["C:/Users/91981/Nigel/Internship/ONGC/ONGC_REACT_RACK/myapp/src/components/Admin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Admin = () => {\r\n  const [components, setComponents] = useState({});\r\n  const [stats, setStats] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [newComponent, setNewComponent] = useState({\r\n    type: '',\r\n    name: '',\r\n    startSlot: '',\r\n    rack: '',\r\n    size: 1,\r\n  });\r\n\r\n  const updateComponents = (data) => {\r\n    setComponents(c=>({ ...c, ...data }))\r\n  }\r\n\r\n  const [availableSlots, setAvailableSlots] = useState([]);\r\n\r\n  const componentTypes = {\r\n    1: 'server',\r\n    2: 'storage',\r\n    3: 'switch',\r\n    4: 'tape drive',\r\n    5: 'others'\r\n  };\r\n  const rackTypes = ['Server', 'Network1', 'Network2', 'Storage', 'Peripheral'];\r\n\r\n  const vendorList = {\r\n    100001: 'Dell',\r\n    100002: 'Cisco',\r\n    100004: 'NeoSeries',\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchComponents();\r\n    \r\n  }, []);\r\n\r\n  const fetchComponents = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get('/general/data-centers/1/components');\r\n      \r\n      updateComponents(response.data);\r\n      calculateStats(response.data);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError('Error fetching components');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const calculateStats = (data) => {\r\n    const stats = {\r\n      totalComponents: 0,\r\n      componentsByType: {},\r\n      componentsByRack: {},\r\n    };\r\n\r\n    Object.values(data).forEach(rackComponents => {\r\n      rackComponents.forEach(component => {\r\n        stats.totalComponents++;\r\n        stats.componentsByType[component.type] = (stats.componentsByType[component.type] || 0) + 1;\r\n        stats.componentsByRack[component.rackId.name] = (stats.componentsByRack[component.rackId.name] || 0) + 1;\r\n      });\r\n    });\r\n\r\n    setStats(stats);\r\n  };\r\n  useEffect(() => {\r\n    if (newComponent.size && newComponent.rack) {\r\n      calculateAvailableSlots(newComponent.rack, components);\r\n    }\r\n  }, [newComponent.size, newComponent.rack, components]);\r\n\r\n  const calculateAvailableSlots = (rack, data) => {\r\n    const occupiedSlots = new Set();\r\n  \r\n    // Check if the rack exists in the data object\r\n    if (data[rack]) {\r\n      // Iterate through the components in the specified rack\r\n      data[rack].forEach(component => {\r\n        // Adjust the occupied slots based on slotsOccupied and startSlot\r\n        for (let i = component.startSlot; i < component.startSlot + component.size; i++) {\r\n          occupiedSlots.add(i);\r\n        }\r\n      });\r\n    }\r\n  \r\n    // Calculate available slots\r\n    const availableSlots = Array.from({ length: 42 }, (_, i) => i + 1).filter(slot => {\r\n      // Check if the slot is available for the desired slotsOccupied\r\n      for (let j = 0; j < newComponent.size; j++) {\r\n        if (occupiedSlots.has(slot + j)) {\r\n          return false; // Slot is occupied, so exclude it\r\n        }\r\n      }\r\n      return true; // Slot is available\r\n    });\r\n  \r\n    setAvailableSlots(availableSlots);\r\n  };\r\n  \r\n\r\n  const handleDelete = async (componentId) => {\r\n    if (window.confirm('Are you sure you want to delete this component?')) {\r\n      try {\r\n        await axios.delete(`/general/components/${componentId}`);\r\n        fetchComponents(); // Refresh the list\r\n      } catch (err) {\r\n        setError('Error deleting component');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewComponent(prev => ({ ...prev, [name]: value }));\r\n    if (name === 'rack') {\r\n      calculateAvailableSlots(value, components);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('/general/components', newComponent);\r\n      setIsDialogOpen(false);\r\n      setNewComponent({ type: '', name: '', startSlot: '', rack: '', size: 1 });\r\n      fetchComponents(); // Refresh the list\r\n    } catch (err) {\r\n      setError('Error adding component');\r\n    }\r\n  };\r\n\r\n  const handleExtend = async (componentId, currentSlots) => {\r\n    const newSlots = prompt(`Enter new number of slots (current: ${currentSlots}):`, currentSlots);\r\n    if (newSlots && !isNaN(newSlots)) {\r\n      try {\r\n        await axios.put(`/general/components/${componentId}`, { size: parseInt(newSlots) });\r\n        fetchComponents(); // Refresh the list\r\n      } catch (err) {\r\n        setError('Error extending component');\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderComponentFields = () => {\r\n    switch (newComponent.type) {\r\n      case '1': // Server\r\n        return (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              name=\"serviceTag\"\r\n              value={newComponent.serviceTag || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Service Tag / SN\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"makeModel\"\r\n              value={newComponent.makeModel || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Make / Model\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"ram\"\r\n              value={newComponent.ram || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"RAM (GB)\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"hdd\"\r\n              value={newComponent.hdd || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"HDD (GB)\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"processor\"\r\n              value={newComponent.processor || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Processor\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <select\r\n              name=\"vendor\"\r\n              value={newComponent.vendor || ''}\r\n              onChange={handleInputChange}\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            >\r\n              <option value=\"\">Select Vendor</option>\r\n              {Object.entries(vendorList).map(([id, name]) => (\r\n                <option key={id} value={id}>{name}</option>\r\n              ))}\r\n            </select>\r\n          </>\r\n        );\r\n      case '2': // Storage\r\n        return (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              name=\"serviceTag\"\r\n              value={newComponent.serviceTag || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Service Tag / SN\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"makeModel\"\r\n              value={newComponent.makeModel || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Make / Model\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <select\r\n              name=\"vendor\"\r\n              value={newComponent.vendor || ''}\r\n              onChange={handleInputChange}\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            >\r\n              <option value=\"\">Select Vendor</option>\r\n              {Object.entries(vendorList).map(([id, name]) => (\r\n                <option key={id} value={id}>{name}</option>\r\n              ))}\r\n            </select>\r\n          </>\r\n        );\r\n      case '3': // Switch\r\n        return (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              name=\"serviceTag\"\r\n              value={newComponent.serviceTag || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Service Tag / SN\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"makeModel\"\r\n              value={newComponent.makeModel || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Make / Model\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"ports\"\r\n              value={newComponent.ports || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"No. of ports\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <select\r\n              name=\"vendor\"\r\n              value={newComponent.vendor || ''}\r\n              onChange={handleInputChange}\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            >\r\n              <option value=\"\">Select Vendor</option>\r\n              {Object.entries(vendorList).map(([id, name]) => (\r\n                <option key={id} value={id}>{name}</option>\r\n              ))}\r\n            </select>\r\n          </>\r\n        );\r\n      case '4': // Tape Drive\r\n        return (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              name=\"serviceTag\"\r\n              value={newComponent.serviceTag || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Service Tag / SN\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"makeModel\"\r\n              value={newComponent.makeModel || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Make / Model\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"drives\"\r\n              value={newComponent.drives || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"No. of drives\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"slots\"\r\n              value={newComponent.slots || ''}\r\n              onChange={handleInputChange}\r\n              placeholder=\"No. of slots\"\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            />\r\n            <select\r\n              name=\"vendor\"\r\n              value={newComponent.vendor || ''}\r\n              onChange={handleInputChange}\r\n              className=\"w-full p-2 mb-4 border rounded\"\r\n              required\r\n            >\r\n              <option value=\"\">Select Vendor</option>\r\n              {Object.entries(vendorList).map(([id, name]) => (\r\n                <option key={id} value={id}>{name}</option>\r\n              ))}\r\n            </select>\r\n          </>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const renderAvailableSlots = () => {\r\n    return (\r\n      <select\r\n        name=\"startSlot\"\r\n        value={newComponent.startSlot}\r\n        onChange={handleInputChange}\r\n        className=\"w-full p-2 mb-4 border rounded\"\r\n        required\r\n      >\r\n        <option value=\"\">Select Start Slot</option>\r\n        {availableSlots.map(slot => (\r\n          <option key={slot} value={slot}>\r\n            {slot}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    );\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Data Center Admin</h1>\r\n\r\n      <button\r\n        onClick={() => setIsDialogOpen(true)}\r\n        className=\"bg-blue-500 text-white px-4 py-2 rounded mb-4\"\r\n      >\r\n        Add New Component\r\n      </button>\r\n\r\n      {/* Insert Component Dialog */}\r\n      {isDialogOpen && (\r\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full\">\r\n          <div className=\" relative top-32 mx-auto p-5 border w-10/12 shadow-lg rounded-md bg-white\">\r\n            <h3 className=\"text-lg font-semibold mb-4\">Add New Component</h3>\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=' grid grid-cols-2 gap-3'>\r\n\r\n                <select\r\n                  name=\"type\"\r\n                  value={newComponent.type}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full p-2 mb-4 border rounded\"\r\n                  required\r\n                >\r\n                  <option value=\"\">Select Component Type</option>\r\n                  {Object.entries(componentTypes).map(([key, value]) => (\r\n                    <option key={key} value={key}>{value}</option>\r\n                  ))}\r\n                </select>\r\n                {renderComponentFields()}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={newComponent.name}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Component Name\"\r\n                  className=\"w-full p-2 mb-4 border rounded\"\r\n                  required\r\n                />\r\n                <select\r\n                  name=\"rack\"\r\n                  value={newComponent.rack}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full p-2 mb-4 border rounded\"\r\n                  required\r\n                >\r\n                  <option value=\"\">Select Rack</option>\r\n                  {rackTypes.map((rack, index) => (\r\n                    <option key={index} value={rack}>{rack}</option>\r\n                  ))}\r\n                </select>\r\n                <select\r\n                  name=\"size\"\r\n                  value={newComponent.size}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full p-2 mb-4 border rounded\"\r\n                  required\r\n                >\r\n                  <option value=\"\">Select Slots Occupied</option>\r\n                  {Array.from({ length: 40 - newComponent.startSlot + 1 }, (_, i) => i + 1).map((slot) => (\r\n                    <option key={slot} value={slot}>{slot}</option>\r\n                  ))}\r\n                </select>\r\n                {renderAvailableSlots()}\r\n                {/* <select\r\n                  name=\"startSlot\"\r\n                  value={newComponent.startSlot}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full p-2 mb-4 border rounded\"\r\n                  required\r\n                >\r\n                  <option value=\"\">Select Start Slot</option>\r\n                  {availableSlots.map((slot) => (\r\n                    <option key={slot} value={slot}>{slot}</option>\r\n                  ))}\r\n                </select> */}\r\n              </div>\r\n                <div className=\"flex justify-end\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setIsDialogOpen(false)}\r\n                    className=\"bg-gray-300 text-black px-4 py-2 rounded mr-2\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n                  >\r\n                    Add Component\r\n                  </button>\r\n                </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"mb-8\">\r\n        <h2 className=\"text-xl font-semibold mb-2\">Statistics</h2>\r\n        <p>Total Components: {stats.totalComponents}</p>\r\n        <h3 className=\"text-lg font-semibold mt-2\">Components by Type:</h3>\r\n        <ul>\r\n          {Object.entries(stats.componentsByType).map(([type, count]) => (\r\n            <li key={type}>{type}: {count}</li>\r\n          ))}\r\n        </ul>\r\n        <h3 className=\"text-lg font-semibold mt-2\">Components by Rack:</h3>\r\n        <ul>\r\n          {Object.entries(stats.componentsByRack).map(([rack, count]) => (\r\n            <li key={rack}>{rack}: {count}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        <h2 className=\"text-xl font-semibold mb-2\">Component List</h2>\r\n        {Object.entries(components).map(([rackName, rackComponents]) => (\r\n          <div key={rackName} className=\"mb-4\">\r\n            <h3 className=\"text-lg font-semibold\">{rackName}</h3>\r\n            <ul>\r\n              {rackComponents.map(component => (\r\n                <li key={component._id} className=\"flex justify-between items-center mb-2\">\r\n                  <span>\r\n                    {component.name} (Type: {componentTypes[component.type] || component.type},\r\n                    Slot: {component.startSlot}, Slots Occupied: {component.size})\r\n                  </span>\r\n                  <div>\r\n                    <button\r\n                      onClick={() => handleExtend(component._id, component.size)}\r\n                      className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\"\r\n                    >\r\n                      Extend/Retract\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleDelete(component._id)}\r\n                      className=\"bg-red-500 text-white px-2 py-1 rounded\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}