{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91981\\\\Nigel\\\\Internship\\\\ONGC\\\\ONGC_REACT_RACK\\\\myapp\\\\src\\\\components\\\\home_components\\\\GnG.js\";\nimport React from 'react';\nimport Table from '../reusable/Table';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GnG = () => {\n  // TODO: API call to fetch racks\n  async function getComponentsByDataCenterIndex() {\n    try {\n      const response = await axios.get('/general/data-centers/1/components');\n      return response.data; // Assuming the response contains the grouped components data\n    } catch (error) {\n      console.error(\"Error fetching components:\", error);\n      // Handle errors appropriately, e.g., display an error message to the user\n    }\n  }\n  getComponentsByDataCenterIndex().then(data => {\n    console.log(\"Racks:\", data);\n    // Use the retrieved components data in your application logic\n  });\n\n  // Function to Normalize array lengths.\n  function normalizeArrayLengths(data, fillValue = \"\") {\n    const maxLength = Math.max(...Object.values(data).map(arr => arr.length));\n    return Object.fromEntries(Object.entries(data).map(([key, value]) => [key, value.concat(Array(maxLength - value.length).fill(fillValue))]));\n  }\n  const normalizedRacks = normalizeArrayLengths(racks);\n  console.log(normalizedRacks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex mx-2 border-r border-black\",\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      rack: normalizedRacks.server,\n      name: \"Server\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      rack: normalizedRacks.network_1,\n      name: \"Network-I\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      rack: normalizedRacks.network_2,\n      name: \"Network-II\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      rack: normalizedRacks.storage,\n      name: \"Storage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      rack: normalizedRacks.peripheral,\n      name: \"Peripheral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_c = GnG;\nexport default GnG;\nvar _c;\n$RefreshReg$(_c, \"GnG\");","map":{"version":3,"names":["React","Table","axios","jsxDEV","_jsxDEV","GnG","getComponentsByDataCenterIndex","response","get","data","error","console","then","log","normalizeArrayLengths","fillValue","maxLength","Math","max","Object","values","map","arr","length","fromEntries","entries","key","value","concat","Array","fill","normalizedRacks","racks","className","children","rack","server","name","fileName","_jsxFileName","lineNumber","columnNumber","network_1","network_2","storage","peripheral","_c","$RefreshReg$"],"sources":["C:/Users/91981/Nigel/Internship/ONGC/ONGC_REACT_RACK/myapp/src/components/home_components/GnG.js"],"sourcesContent":["import React from 'react'\r\nimport Table from '../reusable/Table'\r\nimport axios from \"axios\"\r\n\r\n\r\n\r\n\r\nconst GnG = () => {\r\n    // TODO: API call to fetch racks\r\n    async function getComponentsByDataCenterIndex() {\r\n        try {\r\n            const response = await axios.get('/general/data-centers/1/components');\r\n            return response.data; // Assuming the response contains the grouped components data\r\n        } catch (error) {\r\n            console.error(\"Error fetching components:\", error);\r\n            // Handle errors appropriately, e.g., display an error message to the user\r\n        }\r\n    }\r\n  getComponentsByDataCenterIndex()\r\n        .then(data => {\r\n            console.log(\"Racks:\", data);\r\n            // Use the retrieved components data in your application logic\r\n        });\r\n    \r\n\r\n\r\n    \r\n\r\n\r\n    // Function to Normalize array lengths.\r\n    function normalizeArrayLengths(data, fillValue = \"\") {\r\n        const maxLength = Math.max(...Object.values(data).map((arr) => arr.length));\r\n        return Object.fromEntries(\r\n            Object.entries(data).map(([key, value]) => [key, value.concat(Array(maxLength - value.length).fill(fillValue))])\r\n        );\r\n    }\r\n\r\n    const normalizedRacks = normalizeArrayLengths(racks);\r\n\r\n    console.log(normalizedRacks);\r\n\r\n\r\n\r\n    return (\r\n        <div className='flex mx-2 border-r border-black'>\r\n\r\n            <Table rack={normalizedRacks.server} name=\"Server\" />\r\n            <Table rack={normalizedRacks.network_1} name=\"Network-I\" />\r\n            <Table rack={normalizedRacks.network_2} name=\"Network-II\" />\r\n            <Table rack={normalizedRacks.storage} name=\"Storage\" />\r\n            <Table rack={normalizedRacks.peripheral} name=\"Peripheral\" />\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default GnG"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKzB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EACd;EACA,eAAeC,8BAA8BA,CAAA,EAAG;IAC5C,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,oCAAoC,CAAC;MACtE,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD;IACJ;EACJ;EACFJ,8BAA8B,CAAC,CAAC,CACzBM,IAAI,CAACH,IAAI,IAAI;IACVE,OAAO,CAACE,GAAG,CAAC,QAAQ,EAAEJ,IAAI,CAAC;IAC3B;EACJ,CAAC,CAAC;;EAON;EACA,SAASK,qBAAqBA,CAACL,IAAI,EAAEM,SAAS,GAAG,EAAE,EAAE;IACjD,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGC,MAAM,CAACC,MAAM,CAACX,IAAI,CAAC,CAACY,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACC,MAAM,CAAC,CAAC;IAC3E,OAAOJ,MAAM,CAACK,WAAW,CACrBL,MAAM,CAACM,OAAO,CAAChB,IAAI,CAAC,CAACY,GAAG,CAAC,CAAC,CAACK,GAAG,EAAEC,KAAK,CAAC,KAAK,CAACD,GAAG,EAAEC,KAAK,CAACC,MAAM,CAACC,KAAK,CAACb,SAAS,GAAGW,KAAK,CAACJ,MAAM,CAAC,CAACO,IAAI,CAACf,SAAS,CAAC,CAAC,CAAC,CACnH,CAAC;EACL;EAEA,MAAMgB,eAAe,GAAGjB,qBAAqB,CAACkB,KAAK,CAAC;EAEpDrB,OAAO,CAACE,GAAG,CAACkB,eAAe,CAAC;EAI5B,oBACI3B,OAAA;IAAK6B,SAAS,EAAC,iCAAiC;IAAAC,QAAA,gBAE5C9B,OAAA,CAACH,KAAK;MAACkC,IAAI,EAAEJ,eAAe,CAACK,MAAO;MAACC,IAAI,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrDrC,OAAA,CAACH,KAAK;MAACkC,IAAI,EAAEJ,eAAe,CAACW,SAAU;MAACL,IAAI,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3DrC,OAAA,CAACH,KAAK;MAACkC,IAAI,EAAEJ,eAAe,CAACY,SAAU;MAACN,IAAI,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5DrC,OAAA,CAACH,KAAK;MAACkC,IAAI,EAAEJ,eAAe,CAACa,OAAQ;MAACP,IAAI,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvDrC,OAAA,CAACH,KAAK;MAACkC,IAAI,EAAEJ,eAAe,CAACc,UAAW;MAACR,IAAI,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5D,CAAC;AAGd,CAAC;AAAAK,EAAA,GAhDKzC,GAAG;AAkDT,eAAeA,GAAG;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}