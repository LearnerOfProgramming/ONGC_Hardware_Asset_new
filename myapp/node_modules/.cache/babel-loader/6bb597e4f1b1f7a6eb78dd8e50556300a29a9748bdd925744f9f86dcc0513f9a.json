{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91981\\\\Nigel\\\\Internship\\\\ONGC\\\\ONGC_REACT_RACK\\\\myapp\\\\src\\\\components\\\\reusable\\\\Badge.js\",\n  _s = $RefreshSig$();\nimport { Button, Chip, Dialog, DialogActions, DialogContent, DialogTitle, Grid, MenuItem, Select, TextField, Typography } from '@mui/material';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { FaArrowRight } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Badge = props => {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedComponent, setEditedComponent] = useState({});\n  const [isChanged, setIsChanged] = useState(false);\n  const [showChanges, setShowChanges] = useState(false);\n  const [vendors, setVendors] = useState([]);\n  const [vendorValue, setVendorValue] = useState('');\n  useEffect(() => {\n    setIsAdmin(localStorage.getItem('isAdmin') === 'true');\n    fetchVendors();\n  }, []);\n  useEffect(() => {\n    if (props.componentDetails.specifications.vendorID) {\n      setVendorValue(`${props.componentDetails.specifications.vendorID.vendorID}(${props.componentDetails.specifications.vendorID.vendorName})`);\n    }\n  }, [props.componentDetails]);\n  const fetchVendors = async () => {\n    try {\n      const response = await axios.get('/general/vendors');\n      setVendors(response.data);\n    } catch (error) {\n      console.error('Error fetching vendors:', error);\n    }\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n    setEditedComponent(JSON.parse(JSON.stringify(props.componentDetails)));\n  };\n  const handleClose = () => {\n    setOpen(false);\n    setIsEditing(false);\n    setIsChanged(false);\n    setShowChanges(false);\n  };\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n  const handleSave = () => {\n    setShowChanges(true);\n  };\n  const confirmSave = async () => {\n    try {\n      setIsEditing(false);\n      setIsChanged(false);\n      setShowChanges(false);\n      const updatedComponent = {\n        ...editedComponent,\n        specifications: {\n          ...editedComponent.specifications,\n          vendorID: editedComponent.specifications.vendorID._id\n        }\n      };\n      const response = await axios.put(`/admin/edit-component/${editedComponent._id}`, {\n        specifications: updatedComponent.specifications,\n        customFields: updatedComponent.customFields\n      });\n      if (response.status === 200) {\n        console.log('Component updated successfully');\n      } else {\n        throw new Error('Failed to update component');\n      }\n      handleClose();\n      props.onSave();\n    } catch (error) {\n      console.error('Error updating component:', error);\n    }\n  };\n  const handleInputChange = (key, value, vendorId = null) => {\n    setEditedComponent(prev => {\n      const updated = JSON.parse(JSON.stringify(prev));\n      if (vendorId) {\n        const matches = value.match(/^(.+?)\\((.+?)\\)$/);\n        if (matches) {\n          setVendorValue(value);\n          updated.specifications.vendorID = {\n            _id: vendorId,\n            vendorName: matches[2],\n            vendorID: matches[1]\n          };\n        }\n      } else {\n        const originalValue = props.componentDetails.specifications[key];\n        let typedValue = value;\n        if (typeof originalValue === 'number' && !isNaN(Number(value))) {\n          typedValue = Number(value);\n        } else if (typeof originalValue === 'boolean') {\n          typedValue = value === 'true' || value === true;\n        }\n        updated.specifications[key] = typedValue;\n      }\n      const hasChanged = isObjectChanged(updated, props.componentDetails);\n      setIsChanged(hasChanged);\n      return updated;\n    });\n  };\n  const handleCustomFieldChange = (index, value) => {\n    setEditedComponent(prev => {\n      const updated = JSON.parse(JSON.stringify(prev));\n      updated.customFields[index].value = value;\n      const hasChanged = isObjectChanged(updated, props.componentDetails);\n      setIsChanged(hasChanged);\n      return updated;\n    });\n  };\n  const isObjectChanged = (obj1, obj2) => {\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return true;\n    }\n    for (const key of keys1) {\n      const val1 = obj1[key];\n      const val2 = obj2[key];\n      const areObjects = isObject(val1) && isObject(val2);\n      if (areObjects && isObjectChanged(val1, val2) || !areObjects && val1 !== val2) {\n        return true;\n      }\n    }\n    return false;\n  };\n  const isObject = object => {\n    return object != null && typeof object === 'object';\n  };\n  const renderComparisonField = (label, oldValue, newValue, key) => {\n    if (oldValue === newValue) return null;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          color: \"text.secondary\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: oldValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1,\n        children: /*#__PURE__*/_jsxDEV(FaArrowRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"primary\",\n          textAlign: 'center',\n          children: newValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  };\n  const renderField = item => {\n    if (isEditing) {\n      if (item.key === 'vendor') {\n        return /*#__PURE__*/_jsxDEV(Select, {\n          fullWidth: true,\n          value: vendorValue,\n          children: vendors.map(vendor => {\n            const vendor_value = `${vendor.vendorID}(${vendor.vendorName})`;\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: vendor_value,\n              onClick: () => handleInputChange(item.key, vendor_value, vendor._id),\n              children: vendor_value\n            }, vendor._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this);\n      } else if (item.key === 'ram' || item.key === 'hdd') {\n        return /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"number\",\n          value: editedComponent.specifications[item.key],\n          onChange: e => handleInputChange(item.key, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          size: \"small\",\n          value: editedComponent.specifications[item.key],\n          onChange: e => handleInputChange(item.key, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this);\n      }\n    } else {\n      if (item.key === 'vendor') {\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: `${item.value.vendorID}(${item.value.vendorName})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 16\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: item.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  const renderCustomField = (field, index) => {\n    if (isEditing) {\n      if (field.type === 'string') {\n        return /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          size: \"small\",\n          value: field.value,\n          onChange: e => handleCustomFieldChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this);\n      } else if (field.type === 'date') {\n        return /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"date\",\n          value: field.value,\n          onChange: e => handleCustomFieldChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: field.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  let component = isEditing ? editedComponent : props.componentDetails;\n  return props.label ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Chip, {\n      label: props.label,\n      onClick: handleClickOpen,\n      sx: {\n        backgroundColor: props.color,\n        color: 'white',\n        fontFamily: 'Montserrat',\n        zIndex: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"specifications-dialog-title\",\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"specifications-dialog-title\",\n        sx: {\n          bgcolor: props.color,\n          color: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: props.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: showChanges ? /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [[{\n            label: \"Service Tag / SN\",\n            oldValue: props.componentDetails.specifications.serialNo,\n            newValue: editedComponent.specifications.serialNo,\n            key: \"serialNo\"\n          }, {\n            label: \"Make / Model\",\n            oldValue: props.componentDetails.specifications.makeModel,\n            newValue: editedComponent.specifications.makeModel,\n            key: \"makeModel\"\n          }, ...(props.componentDetails.type === 1 ? [{\n            label: \"RAM (GB)\",\n            oldValue: props.componentDetails.specifications.ram,\n            newValue: editedComponent.specifications.ram,\n            key: \"ram\"\n          }, {\n            label: \"HDD (GB)\",\n            oldValue: props.componentDetails.specifications.hdd,\n            newValue: editedComponent.specifications.hdd,\n            key: \"hdd\"\n          }] : []), {\n            label: \"Vendor\",\n            oldValue: `${props.componentDetails.specifications.vendorID.vendorID}(${props.componentDetails.specifications.vendorID.vendorName})`,\n            newValue: `${editedComponent.specifications.vendorID.vendorID}(${editedComponent.specifications.vendorID.vendorName})`,\n            key: \"vendor\"\n          }].map(item => renderComparisonField(item.label, item.oldValue, item.newValue, item.key)), editedComponent.customFields.map((field, index) => renderComparisonField(field.name, props.componentDetails.customFields[index].value, field.value, `customField_${index}`))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [[{\n            label: \"Service Tag / SN\",\n            value: component.specifications.serialNo,\n            key: \"serialNo\"\n          }, {\n            label: \"Make / Model\",\n            value: component.specifications.makeModel,\n            key: \"makeModel\"\n          }, ...(props.componentDetails.type === 1 ? [{\n            label: \"RAM (GB)\",\n            value: component.specifications.ram,\n            key: \"ram\"\n          }, {\n            label: \"HDD (GB)\",\n            value: component.specifications.hdd,\n            key: \"hdd\"\n          }] : []), {\n            label: \"Vendor\",\n            value: component.specifications.vendorID,\n            key: \"vendor\"\n          }].map(item => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: item.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 8,\n              children: renderField(item)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 21\n            }, this)]\n          }, item.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 19\n          }, this)), component.customFields.map((field, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: field.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 8,\n              children: renderCustomField(field, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 21\n            }, this)]\n          }, `customField_${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [isChanged && !showChanges && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSave,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 15\n        }, this), showChanges && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            color: \"primary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: confirmSave,\n            color: \"primary\",\n            variant: \"contained\",\n            children: \"Confirm Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), !showChanges && !isEditing && isAdmin && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEdit,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 15\n        }, this), !showChanges && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Badge, \"q8K7OvtmrWhxE1MHSgOIwn1DXPo=\");\n_c = Badge;\nexport default Badge;\nvar _c;\n$RefreshReg$(_c, \"Badge\");","map":{"version":3,"names":["Button","Chip","Dialog","DialogActions","DialogContent","DialogTitle","Grid","MenuItem","Select","TextField","Typography","axios","React","useState","useEffect","FaArrowRight","jsxDEV","_jsxDEV","Fragment","_Fragment","Badge","props","_s","open","setOpen","isAdmin","setIsAdmin","isEditing","setIsEditing","editedComponent","setEditedComponent","isChanged","setIsChanged","showChanges","setShowChanges","vendors","setVendors","vendorValue","setVendorValue","localStorage","getItem","fetchVendors","componentDetails","specifications","vendorID","vendorName","response","get","data","error","console","handleClickOpen","JSON","parse","stringify","handleClose","handleEdit","handleSave","confirmSave","updatedComponent","_id","put","customFields","status","log","Error","onSave","handleInputChange","key","value","vendorId","prev","updated","matches","match","originalValue","typedValue","isNaN","Number","hasChanged","isObjectChanged","handleCustomFieldChange","index","obj1","obj2","keys1","Object","keys","keys2","length","val1","val2","areObjects","isObject","object","renderComparisonField","label","oldValue","newValue","children","item","xs","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","renderField","fullWidth","map","vendor","vendor_value","onClick","size","type","onChange","e","target","renderCustomField","field","component","sx","backgroundColor","fontFamily","zIndex","onClose","maxWidth","id","bgcolor","dividers","container","spacing","serialNo","makeModel","ram","hdd","name","_c","$RefreshReg$"],"sources":["C:/Users/91981/Nigel/Internship/ONGC/ONGC_REACT_RACK/myapp/src/components/reusable/Badge.js"],"sourcesContent":["import { Button, Chip, Dialog, DialogActions, DialogContent, DialogTitle, Grid, MenuItem, Select, TextField, Typography } from '@mui/material';\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { FaArrowRight } from 'react-icons/fa';\r\n\r\nconst Badge = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedComponent, setEditedComponent] = useState({});\r\n  const [isChanged, setIsChanged] = useState(false);\r\n  const [showChanges, setShowChanges] = useState(false);\r\n  const [vendors, setVendors] = useState([]);\r\n  const [vendorValue, setVendorValue] = useState('');\r\n\r\n  useEffect(() => {\r\n    setIsAdmin(localStorage.getItem('isAdmin') === 'true');\r\n    fetchVendors();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.componentDetails.specifications.vendorID) {\r\n      setVendorValue(`${props.componentDetails.specifications.vendorID.vendorID}(${props.componentDetails.specifications.vendorID.vendorName})`);\r\n    }\r\n  }, [props.componentDetails]);\r\n\r\n  const fetchVendors = async () => {\r\n    try {\r\n      const response = await axios.get('/general/vendors');\r\n      setVendors(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching vendors:', error);\r\n    }\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    setEditedComponent(JSON.parse(JSON.stringify(props.componentDetails)));\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setIsEditing(false);\r\n    setIsChanged(false);\r\n    setShowChanges(false);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    setShowChanges(true);\r\n  };\r\n\r\n  const confirmSave = async () => {\r\n    try {\r\n      setIsEditing(false);\r\n      setIsChanged(false);\r\n      setShowChanges(false);\r\n\r\n      const updatedComponent = {\r\n        ...editedComponent,\r\n        specifications: {\r\n          ...editedComponent.specifications,\r\n          vendorID: editedComponent.specifications.vendorID._id\r\n        }\r\n      };\r\n\r\n      const response = await axios.put(`/admin/edit-component/${editedComponent._id}`, {\r\n        specifications: updatedComponent.specifications,\r\n        customFields: updatedComponent.customFields\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        console.log('Component updated successfully');\r\n      } else {\r\n        throw new Error('Failed to update component');\r\n      }\r\n\r\n      handleClose();\r\n      props.onSave();\r\n    } catch (error) {\r\n      console.error('Error updating component:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (key, value, vendorId = null) => {\r\n    setEditedComponent(prev => {\r\n      const updated = JSON.parse(JSON.stringify(prev));\r\n\r\n      if (vendorId) {\r\n        const matches = value.match(/^(.+?)\\((.+?)\\)$/);\r\n        if (matches) {\r\n          setVendorValue(value);\r\n          updated.specifications.vendorID = {\r\n            _id: vendorId,\r\n            vendorName: matches[2],\r\n            vendorID: matches[1],\r\n          };\r\n        }\r\n      } else {\r\n        const originalValue = props.componentDetails.specifications[key];\r\n        let typedValue = value;\r\n\r\n        if (typeof originalValue === 'number' && !isNaN(Number(value))) {\r\n          typedValue = Number(value);\r\n        } else if (typeof originalValue === 'boolean') {\r\n          typedValue = value === 'true' || value === true;\r\n        }\r\n\r\n        updated.specifications[key] = typedValue;\r\n      }\r\n\r\n      const hasChanged = isObjectChanged(updated, props.componentDetails);\r\n      setIsChanged(hasChanged);\r\n\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  const handleCustomFieldChange = (index, value) => {\r\n    setEditedComponent(prev => {\r\n      const updated = JSON.parse(JSON.stringify(prev));\r\n      updated.customFields[index].value = value;\r\n\r\n      const hasChanged = isObjectChanged(updated, props.componentDetails);\r\n      setIsChanged(hasChanged);\r\n\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  const isObjectChanged = (obj1, obj2) => {\r\n    const keys1 = Object.keys(obj1);\r\n    const keys2 = Object.keys(obj2);\r\n\r\n    if (keys1.length !== keys2.length) {\r\n      return true;\r\n    }\r\n\r\n    for (const key of keys1) {\r\n      const val1 = obj1[key];\r\n      const val2 = obj2[key];\r\n      const areObjects = isObject(val1) && isObject(val2);\r\n\r\n      if (\r\n        (areObjects && isObjectChanged(val1, val2)) ||\r\n        (!areObjects && val1 !== val2)\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const isObject = (object) => {\r\n    return object != null && typeof object === 'object';\r\n  };\r\n\r\n  const renderComparisonField = (label, oldValue, newValue, key) => {\r\n    if (oldValue === newValue) return null;\r\n    return (\r\n      <React.Fragment key={key}>\r\n        <Grid item xs={4}>\r\n          <Typography variant=\"subtitle2\" color=\"text.secondary\">{label}</Typography>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Typography variant=\"body2\">{oldValue}</Typography>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <FaArrowRight />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Typography variant=\"body2\" color=\"primary\" textAlign={'center'}>{newValue}</Typography>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const renderField = (item) => {\r\n    if (isEditing) {\r\n      if (item.key === 'vendor') {\r\n        return (\r\n          <Select\r\n            fullWidth\r\n            value={vendorValue}\r\n          >\r\n            {vendors.map((vendor) => {\r\n              const vendor_value = `${vendor.vendorID}(${vendor.vendorName})`;\r\n              return (\r\n                <MenuItem \r\n                  key={vendor._id} \r\n                  value={vendor_value}\r\n                  onClick={() => handleInputChange(item.key, vendor_value, vendor._id)}\r\n                >\r\n                  {vendor_value}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        );\r\n      } else if (item.key === 'ram' || item.key === 'hdd') {\r\n        return (\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"number\"\r\n            value={editedComponent.specifications[item.key]}\r\n            onChange={(e) => handleInputChange(item.key, e.target.value)}\r\n          />\r\n        );\r\n      } else {\r\n        return (\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            value={editedComponent.specifications[item.key]}\r\n            onChange={(e) => handleInputChange(item.key, e.target.value)}\r\n          />\r\n        );\r\n      }\r\n    } else {\r\n      if (item.key === 'vendor') {\r\n        return <Typography variant=\"body2\">{`${item.value.vendorID}(${item.value.vendorName})`}</Typography>;\r\n      }\r\n      return <Typography variant=\"body2\">{item.value}</Typography>;\r\n    }\r\n  };\r\n\r\n  const renderCustomField = (field, index) => {\r\n    if (isEditing) {\r\n      if (field.type === 'string') {\r\n        return (\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            value={field.value}\r\n            onChange={(e) => handleCustomFieldChange(index, e.target.value)}\r\n          />\r\n        );\r\n      } else if (field.type === 'date') {\r\n        return (\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"date\"\r\n            value={field.value}\r\n            onChange={(e) => handleCustomFieldChange(index, e.target.value)}\r\n          />\r\n        );\r\n      }\r\n    } else {\r\n      return <Typography variant=\"body2\">{field.value}</Typography>;\r\n    }\r\n  };\r\n\r\n  let component = isEditing ? editedComponent : props.componentDetails;\r\n\r\n  return (\r\n    props.label ?\r\n      <>\r\n        <Chip\r\n          label={props.label}\r\n          onClick={handleClickOpen}\r\n          sx={{ backgroundColor: props.color, color: 'white', fontFamily: 'Montserrat', zIndex: 10 }}\r\n        />\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"specifications-dialog-title\"\r\n          maxWidth=\"sm\"\r\n          fullWidth\r\n        >\r\n          <DialogTitle id=\"specifications-dialog-title\" sx={{ bgcolor: props.color, color: 'white' }}>\r\n            <Typography variant=\"h6\">{props.label}</Typography>\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            {showChanges ? (\r\n              <Grid container spacing={3}>\r\n                {[\r\n                  { label: \"Service Tag / SN\", oldValue: props.componentDetails.specifications.serialNo, newValue: editedComponent.specifications.serialNo, key: \"serialNo\" },\r\n                  { label: \"Make / Model\", oldValue: props.componentDetails.specifications.makeModel, newValue: editedComponent.specifications.makeModel, key: \"makeModel\" },\r\n                  ...(props.componentDetails.type === 1 ? [\r\n                    { label: \"RAM (GB)\", oldValue: props.componentDetails.specifications.ram, newValue: editedComponent.specifications.ram, key: \"ram\" },\r\n                    { label: \"HDD (GB)\", oldValue: props.componentDetails.specifications.hdd, newValue: editedComponent.specifications.hdd, key: \"hdd\" },\r\n                  ] : []),\r\n                  { label: \"Vendor\", oldValue: `${props.componentDetails.specifications.vendorID.vendorID}(${props.componentDetails.specifications.vendorID.vendorName})`, newValue: `${editedComponent.specifications.vendorID.vendorID}(${editedComponent.specifications.vendorID.vendorName})`, key: \"vendor\" },\r\n                ].map(item => renderComparisonField(item.label, item.oldValue, item.newValue, item.key))}\r\n                {editedComponent.customFields.map((field, index) => renderComparisonField(field.name, props.componentDetails.customFields[index].value, field.value, `customField_${index}`))}\r\n              </Grid>\r\n            ) : (\r\n              <Grid container spacing={3}>\r\n                {[\r\n                  { label: \"Service Tag / SN\", value: component.specifications.serialNo, key: \"serialNo\" },\r\n                  { label: \"Make / Model\", value: component.specifications.makeModel, key: \"makeModel\" },\r\n                  ...(props.componentDetails.type === 1 ? [\r\n                    { label: \"RAM (GB)\", value: component.specifications.ram, key: \"ram\" },\r\n                    { label: \"HDD (GB)\", value: component.specifications.hdd, key: \"hdd\" },\r\n                  ] : []),\r\n                  { label: \"Vendor\", value: component.specifications.vendorID, key: \"vendor\" },\r\n                ].map(item => (\r\n                  <React.Fragment key={item.key}>\r\n                    <Grid item xs={4}>\r\n                      <Typography variant=\"subtitle2\" color=\"text.secondary\">{item.label}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                      {renderField(item)}\r\n                    </Grid>\r\n                  </React.Fragment>\r\n                ))}\r\n                {component.customFields.map((field, index) => (\r\n                  <React.Fragment key={`customField_${index}`}>\r\n                    <Grid item xs={4}>\r\n                      <Typography variant=\"subtitle2\" color=\"text.secondary\">{field.name}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                      {renderCustomField(field, index)}\r\n                    </Grid>\r\n                  </React.Fragment>\r\n                ))}\r\n              </Grid>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            {isChanged && !showChanges && (\r\n              <Button onClick={handleSave} color=\"primary\" variant=\"contained\">\r\n                Save Changes\r\n              </Button>\r\n            )}\r\n            {showChanges && (\r\n              <>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={confirmSave} color=\"primary\" variant=\"contained\">\r\n                  Confirm Save\r\n                </Button>\r\n              </>\r\n            )}\r\n            {!showChanges && !isEditing && isAdmin && (\r\n              <Button onClick={handleEdit} color=\"primary\" variant=\"contained\">\r\n                Edit\r\n              </Button>\r\n            )}\r\n            {!showChanges && (\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Close\r\n              </Button>\r\n            )}\r\n          </DialogActions>\r\n        </Dialog>\r\n      </>\r\n      : <></>\r\n  );\r\n};\r\n\r\nexport default Badge;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}