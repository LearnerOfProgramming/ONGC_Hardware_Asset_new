{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91981\\\\Nigel\\\\Internship\\\\ONGC\\\\ONGC_REACT_RACK\\\\myapp\\\\src\\\\components\\\\reusable\\\\Table.js\";\nimport React from 'react';\nimport './Table.css';\nimport Badge from './Badge';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = ({\n  rack,\n  name\n}) => {\n  const TOTAL_SLOTS = 60; // Define the total number of slots\n\n  // Function to combine rows based on slot ranges and add empty slots\n  const combineRowsWithEmptySlots = data => {\n    let currentSlot = 1;\n    const combinedRows = [];\n    for (const item of data) {\n      // Add empty slots before the current item if there's a gap\n      if (item.startSlot > currentSlot) {\n        for (let i = currentSlot; i < item.startSlot; i++) {\n          combinedRows.push({\n            name: '',\n            startSlot: i,\n            endSlot: i,\n            color: 'transparent',\n            // You can choose a different color for empty slots\n            rows: 1\n          });\n        }\n      }\n      console.log(\"Current Slot\", currentSlot);\n\n      // Add the current item\n      combinedRows.push({\n        ...item,\n        rows: item.size,\n        endSlot: item.startSlot + item.size - 1\n      });\n\n      // Update the current slot to the next slot after the current item\n      currentSlot = item.startSlot + item.size;\n    }\n\n    // Add empty slots at the end if needed\n    if (currentSlot <= TOTAL_SLOTS) {\n      for (let i = currentSlot; i <= TOTAL_SLOTS; i++) {\n        combinedRows.push({\n          name: '',\n          startSlot: i,\n          endSlot: i,\n          color: 'transparent',\n          // You can choose a different color for empty slots\n          rows: 1\n        });\n      }\n    }\n    return combinedRows;\n  };\n\n  // Combine rows using rack data and add empty slots\n  const rowsWithRowCount = combineRowsWithEmptySlots(rack);\n  console.log(\"Rows with row count\", rowsWithRowCount);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"w-full table-fixed text-center text-white bg-teal-600 -z-0\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      className: \"text-3xl\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"py-2\",\n          children: [name, \" Rack\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: rowsWithRowCount.map(({\n        name,\n        startSlot,\n        endSlot,\n        color,\n        rows\n      }, groupIndex) => {\n        const indexDisplay = startSlot === endSlot ? `${startSlot}` : `${startSlot}-${endSlot}`;\n        const rowHeight = `${rows * 3}rem`; // Height based on row count\n\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"h-12 relative\",\n            style: {\n              height: rowHeight\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute inset-0 flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"pl-2 absolute left-0\",\n                children: [indexDisplay, \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-full flex justify-center items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"w-10/12\",\n                  children: name ? /*#__PURE__*/_jsxDEV(Badge, {\n                    label: name,\n                    color: color\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"h-full w-full bg-transparent\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, groupIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","Badge","jsxDEV","_jsxDEV","Table","rack","name","TOTAL_SLOTS","combineRowsWithEmptySlots","data","currentSlot","combinedRows","item","startSlot","i","push","endSlot","color","rows","console","log","size","rowsWithRowCount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","groupIndex","indexDisplay","rowHeight","style","height","label","_c","$RefreshReg$"],"sources":["C:/Users/91981/Nigel/Internship/ONGC/ONGC_REACT_RACK/myapp/src/components/reusable/Table.js"],"sourcesContent":["import React from 'react';\r\nimport './Table.css';\r\nimport Badge from './Badge';\r\n\r\nconst Table = ({ rack, name }) => {\r\n\r\n    const TOTAL_SLOTS = 60; // Define the total number of slots\r\n\r\n  // Function to combine rows based on slot ranges and add empty slots\r\n  const combineRowsWithEmptySlots = (data) => {\r\n    let currentSlot = 1;\r\n    const combinedRows = [];\r\n    \r\n    for (const item of data) {\r\n        // Add empty slots before the current item if there's a gap\r\n        if (item.startSlot > currentSlot) {\r\n            for (let i = currentSlot; i < item.startSlot; i++) {\r\n                combinedRows.push({\r\n                    name: '',\r\n                    startSlot: i,\r\n                    endSlot: i,\r\n                    color: 'transparent', // You can choose a different color for empty slots\r\n                    rows: 1,\r\n                });\r\n            }\r\n        }\r\n        console.log(\"Current Slot\",currentSlot)\r\n\r\n      // Add the current item\r\n      combinedRows.push({\r\n        ...item,\r\n          rows: item.size,\r\n        endSlot: item.startSlot + item.size - 1\r\n      });\r\n\r\n      // Update the current slot to the next slot after the current item\r\n      currentSlot = item.startSlot + item.size;\r\n      }\r\n      \r\n      // Add empty slots at the end if needed\r\n    if (currentSlot <= TOTAL_SLOTS) {\r\n        for (let i = currentSlot; i <= TOTAL_SLOTS; i++) {\r\n          combinedRows.push({\r\n            name: '',\r\n            startSlot: i,\r\n            endSlot: i,\r\n            color: 'transparent', // You can choose a different color for empty slots\r\n            rows: 1,\r\n          });\r\n        }\r\n      }\r\n  \r\n\r\n    return combinedRows;\r\n  };\r\n\r\n  // Combine rows using rack data and add empty slots\r\n    const rowsWithRowCount = combineRowsWithEmptySlots(rack);\r\n    console.log(\"Rows with row count\",rowsWithRowCount)\r\n\r\n  return (\r\n    <table className=\"w-full table-fixed text-center text-white bg-teal-600 -z-0\">\r\n      <thead className=\"text-3xl\">\r\n        <tr>\r\n          <th className=\"py-2\">{name} Rack</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {rowsWithRowCount.map(({ name, startSlot, endSlot, color, rows }, groupIndex) => {\r\n          const indexDisplay = startSlot === endSlot ? `${startSlot}` : `${startSlot}-${endSlot}`;\r\n          const rowHeight = `${rows * 3}rem`; // Height based on row count\r\n\r\n          return (\r\n            <tr key={groupIndex} className=\"\">\r\n              <td\r\n                className=\"h-12 relative\"\r\n                style={{ height: rowHeight }}\r\n              >\r\n                <div className=\"absolute inset-0 flex items-center\">\r\n                  <span className=\"pl-2 absolute left-0\">\r\n                    {indexDisplay}.\r\n                  </span>\r\n                  <div className=\"w-full flex justify-center items-center\">\r\n                    <span className=\"w-10/12\">\r\n                      {name ? (\r\n                        <Badge label={name} color={color} />\r\n                      ) : (\r\n                        <div className=\"h-full w-full bg-transparent\" />\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}