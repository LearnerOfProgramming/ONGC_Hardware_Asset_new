{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91981\\\\Nigel\\\\Internship\\\\ONGC\\\\ONGC_REACT_RACK\\\\myapp\\\\src\\\\components\\\\reusable\\\\SpecificationsDialog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, MenuItem, Select, TextField, Typography } from '@mui/material';\nimport axios from 'axios';\nimport { FaArrowRight } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SpecificationsDialog = ({\n  open,\n  onClose,\n  componentDetails,\n  color,\n  label,\n  isAdmin,\n  onSave\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedComponent, setEditedComponent] = useState({});\n  const [isChanged, setIsChanged] = useState(false);\n  const [showChanges, setShowChanges] = useState(false);\n  const [vendors, setVendors] = useState([]);\n  const [vendorValue, setVendorValue] = useState('');\n  useEffect(() => {\n    fetchVendors();\n    console.log(vendors);\n  }, []);\n  useEffect(() => {\n    if (componentDetails.specifications.vendorID) {\n      const vendor = componentDetails.specifications.vendorID;\n      setVendorValue(`${vendor.vendorID[0]}(${vendor.vendorName})`);\n    }\n    setEditedComponent(JSON.parse(JSON.stringify(componentDetails)));\n  }, [componentDetails]);\n  const fetchVendors = async () => {\n    try {\n      const response = await axios.get('/general/vendors');\n      setVendors(response.data);\n      console.log(vendors);\n    } catch (error) {\n      console.error('Error fetching vendors:', error);\n    }\n  };\n  const handleClose = () => {\n    setIsEditing(false);\n    setIsChanged(false);\n    setShowChanges(false);\n    onClose();\n  };\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n  const handleSave = () => {\n    setShowChanges(true);\n  };\n  const confirmSave = async () => {\n    try {\n      setIsEditing(false);\n      setIsChanged(false);\n      setShowChanges(false);\n      const updatedComponent = {\n        ...editedComponent,\n        specifications: {\n          ...editedComponent.specifications,\n          vendorID: editedComponent.specifications.vendorID._id\n        },\n        customFields: editedComponent.customFields\n      };\n      const response = await axios.put(`/admin/edit-component/${editedComponent._id}`, {\n        specifications: updatedComponent.specifications,\n        customFields: updatedComponent.customFields\n      });\n      if (response.status === 200) {\n        console.log('Component updated successfully');\n      } else {\n        throw new Error('Failed to update component');\n      }\n      handleClose();\n      onSave();\n    } catch (error) {\n      console.error('Error updating component:', error);\n    }\n  };\n  const handleInputChange = (key, value, vendorId = null) => {\n    setEditedComponent(prev => {\n      const updated = JSON.parse(JSON.stringify(prev));\n      if (vendorId) {\n        const matches = value.match(/^(.+?)\\((.+?)\\)$/);\n        if (matches) {\n          setVendorValue(value);\n          updated.specifications.vendorID = {\n            _id: vendorId,\n            vendorName: matches[2],\n            vendorID: [matches[1]]\n          };\n        }\n      } else {\n        const originalValue = componentDetails.specifications[key];\n        let typedValue = value;\n        if (typeof originalValue === 'number' && !isNaN(Number(value))) {\n          typedValue = Number(value);\n        } else if (typeof originalValue === 'boolean') {\n          typedValue = value === 'true' || value === true;\n        }\n        updated.specifications[key] = typedValue;\n      }\n      const hasChanged = isObjectChanged(updated, componentDetails);\n      setIsChanged(hasChanged);\n      return updated;\n    });\n  };\n  const handleCustomFieldChange = (index, value) => {\n    setEditedComponent(prev => {\n      const updated = JSON.parse(JSON.stringify(prev));\n      updated.customFields[index].value = value;\n      const hasChanged = isObjectChanged(updated, componentDetails);\n      setIsChanged(hasChanged);\n      return updated;\n    });\n  };\n  const isObjectChanged = (obj1, obj2) => {\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return true;\n    }\n    for (const key of keys1) {\n      const val1 = obj1[key];\n      const val2 = obj2[key];\n      const areObjects = isObject(val1) && isObject(val2);\n      if (areObjects && isObjectChanged(val1, val2) || !areObjects && val1 !== val2) {\n        return true;\n      }\n    }\n    return false;\n  };\n  const isObject = object => {\n    return object != null && typeof object === 'object';\n  };\n  const renderComparisonField = (label, oldValue, newValue, key) => {\n    if (oldValue === newValue) return null;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          color: \"text.secondary\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: oldValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1,\n        children: /*#__PURE__*/_jsxDEV(FaArrowRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"primary\",\n          textAlign: 'center',\n          children: newValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this);\n  };\n  const renderField = item => {\n    if (isEditing) {\n      if (item.key === 'vendor') {\n        return /*#__PURE__*/_jsxDEV(Select, {\n          fullWidth: true,\n          value: vendorValue,\n          children: vendors.map(vendor => {\n            const vendor_value = `${vendor.vendorID[0]}(${vendor.vendorName})`;\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: vendor_value,\n              onClick: () => handleInputChange(item.key, vendor_value, vendor._id),\n              children: vendor_value\n            }, vendor._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this);\n      } else if (item.key === 'ram' || item.key === 'hdd') {\n        return /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"number\",\n          value: editedComponent.specifications[item.key],\n          onChange: e => handleInputChange(item.key, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          size: \"small\",\n          value: editedComponent.specifications[item.key],\n          onChange: e => handleInputChange(item.key, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this);\n      }\n    } else {\n      if (item.key === 'vendor') {\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: `${item.value.vendorID[0]}(${item.value.vendorName})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 16\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: item.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  const renderCustomField = (field, index) => {\n    if (isEditing) {\n      if (field.type === 'string') {\n        return /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          size: \"small\",\n          value: field.value,\n          onChange: e => handleCustomFieldChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this);\n      } else if (field.type === 'date') {\n        return /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"date\",\n          value: field.value,\n          onChange: e => handleCustomFieldChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: field.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  let component = isEditing ? editedComponent : componentDetails;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"specifications-dialog-title\",\n    maxWidth: \"sm\",\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"specifications-dialog-title\",\n      sx: {\n        bgcolor: color,\n        color: 'white'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: showChanges ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [[{\n          label: \"Service Tag / SN\",\n          oldValue: componentDetails.specifications.serialNo,\n          newValue: editedComponent.specifications.serialNo,\n          key: \"serialNo\"\n        }, {\n          label: \"Make / Model\",\n          oldValue: componentDetails.specifications.makeModel,\n          newValue: editedComponent.specifications.makeModel,\n          key: \"makeModel\"\n        }, ...(componentDetails.type === 1 ? [{\n          label: \"RAM (GB)\",\n          oldValue: componentDetails.specifications.ram,\n          newValue: editedComponent.specifications.ram,\n          key: \"ram\"\n        }, {\n          label: \"HDD (GB)\",\n          oldValue: componentDetails.specifications.hdd,\n          newValue: editedComponent.specifications.hdd,\n          key: \"hdd\"\n        }] : []), {\n          label: \"Vendor\",\n          oldValue: `${componentDetails.specifications.vendorID.vendorID}(${componentDetails.specifications.vendorID.vendorName})`,\n          newValue: `${editedComponent.specifications.vendorID.vendorID}(${editedComponent.specifications.vendorID.vendorName})`,\n          key: \"vendor\"\n        }].map(item => renderComparisonField(item.label, item.oldValue, item.newValue, item.key)), editedComponent.customFields.map((field, index) => renderComparisonField(field.name, componentDetails.customFields[index].value, field.value, `customField_${index}`))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [[{\n          label: \"Service Tag / SN\",\n          value: component.specifications.serialNo,\n          key: \"serialNo\"\n        }, {\n          label: \"Make / Model\",\n          value: component.specifications.makeModel,\n          key: \"makeModel\"\n        }, ...(componentDetails.type === 1 ? [{\n          label: \"RAM (GB)\",\n          value: component.specifications.ram,\n          key: \"ram\"\n        }, {\n          label: \"HDD (GB)\",\n          value: component.specifications.hdd,\n          key: \"hdd\"\n        }] : []), {\n          label: \"Vendor\",\n          value: component.specifications.vendorID,\n          key: \"vendor\"\n        }].map(item => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              color: \"text.secondary\",\n              children: item.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: renderField(item)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this)]\n        }, item.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 15\n        }, this)), component.customFields.map((field, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              color: \"text.secondary\",\n              children: field.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: renderCustomField(field, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }, this)]\n        }, `customField_${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [isChanged && !showChanges && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSave,\n        color: \"primary\",\n        variant: \"contained\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this), showChanges && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: confirmSave,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Confirm Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), !showChanges && !isEditing && isAdmin && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleEdit,\n        color: \"primary\",\n        variant: \"contained\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this), !showChanges && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        color: \"primary\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n};\n_s(SpecificationsDialog, \"vRm/jGm1ihFDUxTzoUprSFl03g8=\");\n_c = SpecificationsDialog;\nexport default SpecificationsDialog;\nvar _c;\n$RefreshReg$(_c, \"SpecificationsDialog\");","map":{"version":3,"names":["React","useState","useEffect","Button","Dialog","DialogActions","DialogContent","DialogTitle","Grid","MenuItem","Select","TextField","Typography","axios","FaArrowRight","jsxDEV","_jsxDEV","Fragment","_Fragment","SpecificationsDialog","open","onClose","componentDetails","color","label","isAdmin","onSave","_s","isEditing","setIsEditing","editedComponent","setEditedComponent","isChanged","setIsChanged","showChanges","setShowChanges","vendors","setVendors","vendorValue","setVendorValue","fetchVendors","console","log","specifications","vendorID","vendor","vendorName","JSON","parse","stringify","response","get","data","error","handleClose","handleEdit","handleSave","confirmSave","updatedComponent","_id","customFields","put","status","Error","handleInputChange","key","value","vendorId","prev","updated","matches","match","originalValue","typedValue","isNaN","Number","hasChanged","isObjectChanged","handleCustomFieldChange","index","obj1","obj2","keys1","Object","keys","keys2","length","val1","val2","areObjects","isObject","object","renderComparisonField","oldValue","newValue","children","item","xs","variant","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","renderField","fullWidth","map","vendor_value","onClick","size","type","onChange","e","target","renderCustomField","field","component","maxWidth","id","sx","bgcolor","dividers","container","spacing","serialNo","makeModel","ram","hdd","name","_c","$RefreshReg$"],"sources":["C:/Users/91981/Nigel/Internship/ONGC/ONGC_REACT_RACK/myapp/src/components/reusable/SpecificationsDialog.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, MenuItem, Select, TextField, Typography } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { FaArrowRight } from 'react-icons/fa';\r\n\r\nconst SpecificationsDialog = ({\r\n  open,\r\n  onClose,\r\n  componentDetails,\r\n  color,\r\n  label,\r\n  isAdmin,\r\n  onSave\r\n}) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedComponent, setEditedComponent] = useState({});\r\n  const [isChanged, setIsChanged] = useState(false);\r\n  const [showChanges, setShowChanges] = useState(false);\r\n  const [vendors, setVendors] = useState([]);\r\n  const [vendorValue, setVendorValue] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchVendors();\r\n    console.log(vendors)\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (componentDetails.specifications.vendorID) {\r\n      const vendor = componentDetails.specifications.vendorID;\r\n      setVendorValue(`${vendor.vendorID[0]}(${vendor.vendorName})`);\r\n      \r\n    }\r\n    setEditedComponent(JSON.parse(JSON.stringify(componentDetails)));\r\n  }, [componentDetails]);\r\n\r\n  const fetchVendors = async () => {\r\n    try {\r\n      const response = await axios.get('/general/vendors');\r\n      setVendors(response.data);\r\n      console.log(vendors)\r\n    } catch (error) {\r\n      console.error('Error fetching vendors:', error);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsEditing(false);\r\n    setIsChanged(false);\r\n    setShowChanges(false);\r\n    onClose();\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    setShowChanges(true);\r\n  };\r\n\r\n  const confirmSave = async () => {\r\n    try {\r\n      setIsEditing(false);\r\n      setIsChanged(false);\r\n      setShowChanges(false);\r\n\r\n      const updatedComponent = {\r\n        ...editedComponent,\r\n        specifications: {\r\n          ...editedComponent.specifications,\r\n          vendorID: editedComponent.specifications.vendorID._id\r\n        },\r\n        customFields: editedComponent.customFields,\r\n      };\r\n\r\n      const response = await axios.put(`/admin/edit-component/${editedComponent._id}`, {\r\n        specifications: updatedComponent.specifications,\r\n        customFields: updatedComponent.customFields\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        console.log('Component updated successfully');\r\n      } else {\r\n        throw new Error('Failed to update component');\r\n      }\r\n\r\n      handleClose();\r\n      onSave();\r\n    } catch (error) {\r\n      console.error('Error updating component:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (key, value, vendorId = null) => {\r\n    setEditedComponent(prev => {\r\n      const updated = JSON.parse(JSON.stringify(prev));\r\n\r\n      if (vendorId) {\r\n        const matches = value.match(/^(.+?)\\((.+?)\\)$/);\r\n        if (matches) {\r\n          setVendorValue(value);\r\n          updated.specifications.vendorID = {\r\n            _id: vendorId,\r\n            vendorName: matches[2],\r\n            vendorID: [matches[1]],\r\n          };\r\n        }\r\n      } else {\r\n        const originalValue = componentDetails.specifications[key];\r\n        let typedValue = value;\r\n\r\n        if (typeof originalValue === 'number' && !isNaN(Number(value))) {\r\n          typedValue = Number(value);\r\n        } else if (typeof originalValue === 'boolean') {\r\n          typedValue = value === 'true' || value === true;\r\n        }\r\n\r\n        updated.specifications[key] = typedValue;\r\n      }\r\n\r\n      const hasChanged = isObjectChanged(updated, componentDetails);\r\n      setIsChanged(hasChanged);\r\n\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  const handleCustomFieldChange = (index, value) => {\r\n    setEditedComponent(prev => {\r\n      const updated = JSON.parse(JSON.stringify(prev));\r\n      updated.customFields[index].value = value;\r\n\r\n      const hasChanged = isObjectChanged(updated, componentDetails);\r\n      setIsChanged(hasChanged);\r\n\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  const isObjectChanged = (obj1, obj2) => {\r\n    const keys1 = Object.keys(obj1);\r\n    const keys2 = Object.keys(obj2);\r\n\r\n    if (keys1.length !== keys2.length) {\r\n      return true;\r\n    }\r\n\r\n    for (const key of keys1) {\r\n      const val1 = obj1[key];\r\n      const val2 = obj2[key];\r\n      const areObjects = isObject(val1) && isObject(val2);\r\n\r\n      if (\r\n        (areObjects && isObjectChanged(val1, val2)) ||\r\n        (!areObjects && val1 !== val2)\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const isObject = (object) => {\r\n    return object != null && typeof object === 'object';\r\n  };\r\n\r\n  const renderComparisonField = (label, oldValue, newValue, key) => {\r\n    if (oldValue === newValue) return null;\r\n    return (\r\n      <React.Fragment key={key}>\r\n        <Grid item xs={4}>\r\n          <Typography variant=\"subtitle2\" color=\"text.secondary\">{label}</Typography>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Typography variant=\"body2\">{oldValue}</Typography>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <FaArrowRight />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Typography variant=\"body2\" color=\"primary\" textAlign={'center'}>{newValue}</Typography>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const renderField = (item) => {\r\n    if (isEditing) {\r\n      if (item.key === 'vendor') {\r\n        return (\r\n          <Select\r\n            fullWidth\r\n            value={vendorValue}\r\n          >\r\n            {vendors.map((vendor) => {\r\n              const vendor_value = `${vendor.vendorID[0]}(${vendor.vendorName})`;\r\n              return (\r\n                <MenuItem \r\n                  key={vendor._id} \r\n                  value={vendor_value}\r\n                  onClick={() => handleInputChange(item.key, vendor_value, vendor._id)}\r\n                >\r\n                  {vendor_value}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        );\r\n      } else if (item.key === 'ram' || item.key === 'hdd') {\r\n        return (\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"number\"\r\n            value={editedComponent.specifications[item.key]}\r\n            onChange={(e) => handleInputChange(item.key, e.target.value)}\r\n          />\r\n        );\r\n      } else {\r\n        return (\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            value={editedComponent.specifications[item.key]}\r\n            onChange={(e) => handleInputChange(item.key, e.target.value)}\r\n          />\r\n        );\r\n      }\r\n    } else {\r\n      if (item.key === 'vendor') {\r\n        return <Typography variant=\"body2\">{`${item.value.vendorID[0]}(${item.value.vendorName})`}</Typography>;\r\n      }\r\n      return <Typography variant=\"body2\">{item.value}</Typography>;\r\n    }\r\n  };\r\n\r\n  const renderCustomField = (field, index) => {\r\n    if (isEditing) {\r\n      if (field.type === 'string') {\r\n        return (\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            value={field.value}\r\n            onChange={(e) => handleCustomFieldChange(index, e.target.value)}\r\n          />\r\n        );\r\n      } else if (field.type === 'date') {\r\n        return (\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"date\"\r\n            value={field.value}\r\n            onChange={(e) => handleCustomFieldChange(index, e.target.value)}\r\n          />\r\n        );\r\n      }\r\n    } else {\r\n      return <Typography variant=\"body2\">{field.value}</Typography>;\r\n    }\r\n  };\r\n\r\n\r\n  let component = isEditing ? editedComponent : componentDetails;\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"specifications-dialog-title\"\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle id=\"specifications-dialog-title\" sx={{ bgcolor: color, color: 'white' }}>\r\n        <Typography variant=\"h6\">{label}</Typography>\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        {showChanges ? (\r\n          <Grid container spacing={3}>\r\n            {[\r\n              { label: \"Service Tag / SN\", oldValue: componentDetails.specifications.serialNo, newValue: editedComponent.specifications.serialNo, key: \"serialNo\" },\r\n              { label: \"Make / Model\", oldValue: componentDetails.specifications.makeModel, newValue: editedComponent.specifications.makeModel, key: \"makeModel\" },\r\n              ...(componentDetails.type === 1 ? [\r\n                { label: \"RAM (GB)\", oldValue: componentDetails.specifications.ram, newValue: editedComponent.specifications.ram, key: \"ram\" },\r\n                { label: \"HDD (GB)\", oldValue: componentDetails.specifications.hdd, newValue: editedComponent.specifications.hdd, key: \"hdd\" },\r\n              ] : []),\r\n              { label: \"Vendor\", oldValue: `${componentDetails.specifications.vendorID.vendorID}(${componentDetails.specifications.vendorID.vendorName})`, newValue: `${editedComponent.specifications.vendorID.vendorID}(${editedComponent.specifications.vendorID.vendorName})`, key: \"vendor\" },\r\n            ].map(item => renderComparisonField(item.label, item.oldValue, item.newValue, item.key))}\r\n            {editedComponent.customFields.map((field, index) => renderComparisonField(field.name, componentDetails.customFields[index].value, field.value, `customField_${index}`))}\r\n          </Grid>\r\n        ) : (\r\n          <Grid container spacing={3}>\r\n            {[\r\n              { label: \"Service Tag / SN\", value: component.specifications.serialNo, key: \"serialNo\" },\r\n              { label: \"Make / Model\", value: component.specifications.makeModel, key: \"makeModel\" },\r\n              ...(componentDetails.type === 1 ? [\r\n                { label: \"RAM (GB)\", value: component.specifications.ram, key: \"ram\" },\r\n                { label: \"HDD (GB)\", value: component.specifications.hdd, key: \"hdd\" },\r\n              ] : []),\r\n              { label: \"Vendor\", value: component.specifications.vendorID, key: \"vendor\" },\r\n            ].map(item => (\r\n              <React.Fragment key={item.key}>\r\n                <Grid item xs={4}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">{item.label}</Typography>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  {renderField(item)}\r\n                </Grid>\r\n              </React.Fragment>\r\n            ))}\r\n            {component.customFields.map((field, index) => (\r\n              <React.Fragment key={`customField_${index}`}>\r\n                <Grid item xs={4}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">{field.name}</Typography>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  {renderCustomField(field, index)}\r\n                </Grid>\r\n              </React.Fragment>\r\n            ))}\r\n          </Grid>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {isChanged && !showChanges && (\r\n          <Button onClick={handleSave} color=\"primary\" variant=\"contained\">\r\n            Save Changes\r\n          </Button>\r\n        )}\r\n        {showChanges && (\r\n          <>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={confirmSave} color=\"primary\" variant=\"contained\">\r\n              Confirm Save\r\n            </Button>\r\n          </>\r\n        )}\r\n        {!showChanges && !isEditing && isAdmin && (\r\n          <Button onClick={handleEdit} color=\"primary\" variant=\"contained\">\r\n            Edit\r\n          </Button>\r\n        )}\r\n        {!showChanges && (\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        )}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SpecificationsDialog;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}