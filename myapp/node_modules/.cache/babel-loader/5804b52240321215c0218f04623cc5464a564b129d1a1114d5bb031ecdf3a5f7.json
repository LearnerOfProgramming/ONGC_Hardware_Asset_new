{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91981\\\\Nigel\\\\Internship\\\\ONGC\\\\ONGC_REACT_RACK\\\\myapp\\\\src\\\\components\\\\reusable\\\\Table.js\";\nimport React, { useMemo } from 'react';\nimport './Table.css';\nimport Badge from './Badge';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TOTAL_SLOTS = 20;\nconst Table = ({\n  rack,\n  name,\n  onRefresh\n}) => {\n  const sortedRack = [...rack].sort((a, b) => a.startSlot - b.startSlot);\n  // Function to combine rows based on slot ranges and add empty slots\n  const combineRowsWithEmptySlots = data => {\n    let currentSlot = 1;\n    const combinedRows = [];\n    for (const item of data) {\n      // Add empty slots before the current item if there's a gap\n      if (item.startSlot > currentSlot) {\n        for (let i = currentSlot; i < item.startSlot; i++) {\n          combinedRows.push({\n            name: '',\n            startSlot: i,\n            endSlot: i,\n            color: 'transparent',\n            // You can choose a different color for empty slots\n            rows: 1\n          });\n        }\n      }\n\n      // Add the current item\n      combinedRows.push({\n        ...item,\n        rows: item.size,\n        endSlot: item.startSlot + item.size - 1\n      });\n\n      // Update the current slot to the next slot after the current item\n      currentSlot = item.startSlot + item.size;\n    }\n\n    // Add empty slots at the end if needed\n    if (currentSlot <= TOTAL_SLOTS) {\n      for (let i = currentSlot; i <= TOTAL_SLOTS; i++) {\n        combinedRows.push({\n          name: '',\n          startSlot: i,\n          endSlot: i,\n          color: 'transparent',\n          // You can choose a different color for empty slots\n          rows: 1\n        });\n      }\n    }\n    return combinedRows;\n  };\n\n  // Combine rows using rack data and add empty slots\n  const rowsWithRowCount = combineRowsWithEmptySlots(sortedRack);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"w-full table-fixed text-center bg-stone-200 shadow-lg rounded-md  overflow-hidden -z-0\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      className: \"bg-gray-800 text-white\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"py-4 px-6 text-2xl font-semibold\",\n          children: [name, \" Rack\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: rowsWithRowCount.map(({\n        name,\n        startSlot,\n        endSlot,\n        color,\n        rows,\n        _id\n      }, groupIndex) => {\n        const indexDisplay = startSlot === endSlot ? `${startSlot}` : `${startSlot}-${endSlot}`;\n        const rowHeight = `${rows * 3}rem`;\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"border-b border-gray-200 hover:bg-zinc-200 transition-colors duration-200\",\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"relative\",\n            style: {\n              height: rowHeight\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute inset-0 flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"pl-2 absolute left-0 text-gray-600 font-medium select-none\",\n                children: [indexDisplay, \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ml-6 w-full flex justify-center items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"w-10/12\",\n                  children: name ? /*#__PURE__*/_jsxDEV(Badge, {\n                    label: name,\n                    color: color,\n                    componentDetails: _id ? rowsWithRowCount[groupIndex] : null,\n                    onSave: onRefresh\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"h-full w-full bg-gray-100 rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, groupIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useMemo","Badge","jsxDEV","_jsxDEV","TOTAL_SLOTS","Table","rack","name","onRefresh","sortedRack","sort","a","b","startSlot","combineRowsWithEmptySlots","data","currentSlot","combinedRows","item","i","push","endSlot","color","rows","size","rowsWithRowCount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_id","groupIndex","indexDisplay","rowHeight","style","height","label","componentDetails","onSave","_c","$RefreshReg$"],"sources":["C:/Users/91981/Nigel/Internship/ONGC/ONGC_REACT_RACK/myapp/src/components/reusable/Table.js"],"sourcesContent":["import React, { useMemo} from 'react';\r\nimport './Table.css';\r\nimport Badge from './Badge';\r\n\r\nexport const TOTAL_SLOTS = 20;\r\n\r\n\r\nconst Table = ({ rack, name, onRefresh }) => {\r\n\r\n  const sortedRack= [...rack].sort((a, b) => a.startSlot - b.startSlot);\r\n  // Function to combine rows based on slot ranges and add empty slots\r\n  const combineRowsWithEmptySlots = (data) => {\r\n    let currentSlot = 1;\r\n    const combinedRows = [];\r\n    \r\n    for (const item of data) {\r\n        // Add empty slots before the current item if there's a gap\r\n        if (item.startSlot > currentSlot) {\r\n            for (let i = currentSlot; i < item.startSlot; i++) {\r\n                combinedRows.push({\r\n                    name: '',\r\n                    startSlot: i,\r\n                    endSlot: i,\r\n                    color: 'transparent', // You can choose a different color for empty slots\r\n                    rows: 1,\r\n                });\r\n            }\r\n        }\r\n\r\n      // Add the current item\r\n      combinedRows.push({\r\n        ...item,\r\n          rows: item.size,\r\n        endSlot: item.startSlot + item.size - 1\r\n      });\r\n\r\n      // Update the current slot to the next slot after the current item\r\n      currentSlot = item.startSlot + item.size;\r\n      }\r\n      \r\n      // Add empty slots at the end if needed\r\n    if (currentSlot <= TOTAL_SLOTS) {\r\n        for (let i = currentSlot; i <= TOTAL_SLOTS; i++) {\r\n          combinedRows.push({\r\n            name: '',\r\n            startSlot: i,\r\n            endSlot: i,\r\n            color: 'transparent', // You can choose a different color for empty slots\r\n            rows: 1,\r\n          });\r\n        }\r\n      }\r\n  \r\n\r\n    return combinedRows;\r\n  };\r\n\r\n  // Combine rows using rack data and add empty slots\r\n    const rowsWithRowCount = combineRowsWithEmptySlots(sortedRack);\r\n\r\n  return (\r\n    <table className=\"w-full table-fixed text-center bg-stone-200 shadow-lg rounded-md  overflow-hidden -z-0\">\r\n    <thead className=\"bg-gray-800 text-white\">\r\n      <tr>\r\n        <th className=\"py-4 px-6 text-2xl font-semibold\">{name} Rack</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {rowsWithRowCount.map(({ name, startSlot, endSlot, color, rows, _id }, groupIndex) => {\r\n        const indexDisplay = startSlot === endSlot ? `${startSlot}` : `${startSlot}-${endSlot}`;\r\n        const rowHeight = `${rows * 3}rem`;\r\n  \r\n        return (\r\n          <tr key={groupIndex} className=\"border-b border-gray-200 hover:bg-zinc-200 transition-colors duration-200\">\r\n            <td\r\n              className=\"relative\"\r\n              style={{ height: rowHeight }}\r\n            >\r\n              <div className=\"absolute inset-0 flex items-center\">\r\n                <span className=\"pl-2 absolute left-0 text-gray-600 font-medium select-none\">\r\n                  {indexDisplay}.\r\n                </span>\r\n                <div className=\"ml-6 w-full flex justify-center items-center\">\r\n                  <span className=\"w-10/12\">\r\n                    {name ? (\r\n                      <Badge label={name} color={color} componentDetails={\r\n                        _id ? rowsWithRowCount[groupIndex] : null\r\n                      } onSave={onRefresh}/>\r\n                    ) : (\r\n                      <div className=\"h-full w-full bg-gray-100 rounded-md\" />\r\n                    )}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </tbody>\r\n  </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}