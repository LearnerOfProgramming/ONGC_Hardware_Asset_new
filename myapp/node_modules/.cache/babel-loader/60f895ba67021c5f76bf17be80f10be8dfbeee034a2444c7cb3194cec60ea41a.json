{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91981\\\\Nigel\\\\Internship\\\\ONGC\\\\ONGC_REACT_RACK\\\\myapp\\\\src\\\\components\\\\admin_components\\\\GnG.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { TOTAL_SLOTS } from '../reusable/Table';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GnG_Admin = ({\n  dataCenter\n}) => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [components, setComponents] = useState({});\n  const [stats, setStats] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [newComponent, setNewComponent] = useState({\n    type: '',\n    name: '',\n    startSlot: '',\n    rack: '',\n    size: 1,\n    specifications: {}\n  });\n  const updateComponents = data => {\n    setComponents(c => ({\n      ...c,\n      ...data\n    }));\n  };\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const componentTypes = {\n    1: 'server',\n    2: 'storage',\n    3: 'switch',\n    4: 'tape drive',\n    5: 'others'\n  };\n  const rackTypes = ['Server', 'Network1', 'Network2', 'Storage', 'Peripheral'];\n  const vendorList = {\n    100001: 'Dell',\n    100002: 'Cisco',\n    100004: 'NeoSeries'\n  };\n  useEffect(() => {\n    fetchComponents();\n    switch (dataCenter) {\n      case 1:\n        setName('G&G Data Center');\n        break;\n      case 2:\n        setName('VRC');\n        break;\n      case 3:\n        setName('DR');\n        break;\n      case 4:\n        setName('SPIC');\n        break;\n      default:\n        setName('Unknown Data Center');\n        break;\n    }\n  }, [dataCenter]);\n  const fetchComponents = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`/general/data-centers/${dataCenter}/components`);\n      updateComponents(response.data);\n      calculateStats(response.data);\n      setLoading(false);\n    } catch (err) {\n      setError('Error fetching components');\n      setLoading(false);\n    }\n  };\n  const updateIsExpanded = componentsData => {\n    // Create an object with all racks initially collapsed (or desired default state)\n    const newIsExpanded = {};\n    Object.keys(componentsData).forEach(rackName => newIsExpanded[rackName] = false);\n    return newIsExpanded;\n  };\n  const calculateStats = data => {\n    const stats = {\n      totalComponents: 0,\n      componentsByType: {},\n      componentsByRack: {}\n    };\n    Object.values(data).forEach(rackComponents => {\n      rackComponents.forEach(component => {\n        stats.totalComponents++;\n        stats.componentsByType[component.type] = (stats.componentsByType[component.type] || 0) + 1;\n        stats.componentsByRack[component.rackId.name] = (stats.componentsByRack[component.rackId.name] || 0) + 1;\n      });\n    });\n    setStats(stats);\n  };\n  useEffect(() => {\n    if (newComponent.size && newComponent.rack) {\n      calculateAvailableSlots(newComponent.rack, components);\n    }\n  }, [newComponent.size, newComponent.rack, components]);\n  const calculateAvailableSlots = (rack, data) => {\n    const occupiedSlots = new Set();\n\n    // Check if the rack exists in the data object\n    if (data[rack]) {\n      // Iterate through the components in the specified rack\n      data[rack].forEach(component => {\n        // Adjust the occupied slots based on slotsOccupied and startSlot\n        for (let i = component.startSlot; i < component.startSlot + component.size; i++) {\n          occupiedSlots.add(i);\n        }\n      });\n    }\n\n    // Calculate available slots\n    const availableSlots = Array.from({\n      length: TOTAL_SLOTS\n    }, (_, i) => i + 1).filter(slot => {\n      // Check if the slot is available for the desired slotsOccupied\n      for (let j = 0; j < newComponent.size; j++) {\n        if (occupiedSlots.has(slot + j)) {\n          return false; // Slot is occupied, so exclude it\n        }\n      }\n      return true; // Slot is available\n    });\n    setAvailableSlots(availableSlots);\n    console.log(availableSlots);\n  };\n  const handleDelete = async componentId => {\n    if (window.confirm('Are you sure you want to delete this component?')) {\n      try {\n        await axios.delete(`/general/components/${componentId}`);\n        fetchComponents(); // Refresh the list\n      } catch (err) {\n        setError('Error deleting component');\n      }\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewComponent(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    if (name === 'rack') {\n      calculateAvailableSlots(value, components);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      console.log(\"Sending data:\", JSON.stringify(newComponent));\n      await axios.post(`/admin/${dataCenter}/addcomponent`, JSON.stringify(newComponent), {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      });\n      alert('Successfully added!');\n      setIsDialogOpen(false);\n      setNewComponent({\n        type: '',\n        name: '',\n        startSlot: '',\n        rack: '',\n        size: 1,\n        specifications: {}\n      });\n      fetchComponents(); // Refresh the list\n    } catch (err) {\n      var _err$response, _err$response2, _err$response2$data;\n      console.error(\"Error adding component:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Error adding component');\n    }\n  };\n  const handleExtend = async (componentId, currentSlots) => {\n    const newSlots = prompt(`Enter new number of slots (current: ${currentSlots}):`, currentSlots);\n    if (newSlots && !isNaN(newSlots)) {\n      try {\n        await axios.put(`/general/components/${componentId}`, {\n          size: parseInt(newSlots)\n        });\n        fetchComponents(); // Refresh the list\n      } catch (err) {\n        setError('Error extending component');\n      }\n    }\n  };\n  const renderComponentFields = () => {\n    switch (newComponent.type) {\n      case '1':\n        // Server\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"serviceTag\",\n            value: newComponent.serviceTag || '',\n            onChange: handleInputChange,\n            placeholder: \"Service Tag / SN\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"makeModel\",\n            value: newComponent.makeModel || '',\n            onChange: handleInputChange,\n            placeholder: \"Make / Model\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"ram\",\n            value: newComponent.ram || '',\n            onChange: handleInputChange,\n            placeholder: \"RAM (GB)\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"hdd\",\n            value: newComponent.hdd || '',\n            onChange: handleInputChange,\n            placeholder: \"HDD (GB)\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"processor\",\n            value: newComponent.processor || '',\n            onChange: handleInputChange,\n            placeholder: \"Processor\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"vendor\",\n            value: newComponent.vendor || '',\n            onChange: handleInputChange,\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Vendor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this), Object.entries(vendorList).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: id,\n              children: name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true);\n      case '2':\n        // Storage\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"serviceTag\",\n            value: newComponent.serviceTag || '',\n            onChange: handleInputChange,\n            placeholder: \"Service Tag / SN\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"makeModel\",\n            value: newComponent.makeModel || '',\n            onChange: handleInputChange,\n            placeholder: \"Make / Model\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"vendor\",\n            value: newComponent.vendor || '',\n            onChange: handleInputChange,\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Vendor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 29\n            }, this), Object.entries(vendorList).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: id,\n              children: name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true);\n      case '3':\n        // Switch\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"serviceTag\",\n            value: newComponent.serviceTag || '',\n            onChange: handleInputChange,\n            placeholder: \"Service Tag / SN\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"makeModel\",\n            value: newComponent.makeModel || '',\n            onChange: handleInputChange,\n            placeholder: \"Make / Model\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"ports\",\n            value: newComponent.ports || '',\n            onChange: handleInputChange,\n            placeholder: \"No. of ports\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"vendor\",\n            value: newComponent.vendor || '',\n            onChange: handleInputChange,\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Vendor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 29\n            }, this), Object.entries(vendorList).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: id,\n              children: name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true);\n      case '4':\n        // Tape Drive\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"serviceTag\",\n            value: newComponent.serviceTag || '',\n            onChange: handleInputChange,\n            placeholder: \"Service Tag / SN\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"makeModel\",\n            value: newComponent.makeModel || '',\n            onChange: handleInputChange,\n            placeholder: \"Make / Model\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"drives\",\n            value: newComponent.drives || '',\n            onChange: handleInputChange,\n            placeholder: \"No. of drives\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"slots\",\n            value: newComponent.slots || '',\n            onChange: handleInputChange,\n            placeholder: \"No. of slots\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"vendor\",\n            value: newComponent.vendor || '',\n            onChange: handleInputChange,\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Vendor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 29\n            }, this), Object.entries(vendorList).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: id,\n              children: name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true);\n      default:\n        return null;\n    }\n  };\n  const renderAvailableSlots = () => {\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"startSlot\",\n      value: newComponent.startSlot,\n      onChange: handleInputChange,\n      className: \"w-full p-2 mb-4 border rounded\",\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Start Slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 17\n      }, this), availableSlots.map(slot => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: slot,\n        children: slot\n      }, slot, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }, this);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 414,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 415,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: [\"Data Center Admin - \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow-md rounded-lg p-6 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-10 text-center\",\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-10/12\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold mb-2\",\n              children: \"Components by Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"divide-y divide-gray-200\",\n              children: Object.entries(stats.componentsByType).map(([type, count]) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"flex justify-between py-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"capitalize\",\n                  children: [componentTypes[type], \"s\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-semibold\",\n                  children: count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 41\n                }, this)]\n              }, type, true, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-10/12\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold mb-2\",\n              children: \"Components by Rack\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"divide-y divide-gray-200\",\n              children: Object.entries(stats.componentsByRack).map(([rack, count]) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"flex justify-between py-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: rack\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-semibold\",\n                  children: count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 41\n                }, this)]\n              }, rack, true, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsDialogOpen(true),\n      className: \"bg-blue-500 text-white px-4 py-2 rounded mb-4\",\n      children: \"Add New Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 13\n    }, this), isDialogOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full mt-24\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" relative top-32 mx-auto p-5 border w-10/12 shadow-lg rounded-md bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Add New Component\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" grid grid-cols-2 gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"type\",\n              value: newComponent.type,\n              onChange: handleInputChange,\n              className: \"w-full p-2 mb-4 border rounded\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Component Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 37\n              }, this), Object.entries(componentTypes).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: key,\n                children: value\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 33\n            }, this), renderComponentFields(), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: newComponent.name,\n              onChange: handleInputChange,\n              placeholder: \"Component Name\",\n              className: \"w-full p-2 mb-4 border rounded\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"rack\",\n              value: newComponent.rack,\n              onChange: handleInputChange,\n              className: \"w-full p-2 mb-4 border rounded\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Rack\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 37\n              }, this), rackTypes.map((rack, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: rack,\n                children: rack\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"size\",\n              value: newComponent.size,\n              onChange: handleInputChange,\n              className: \"w-full p-2 mb-4 border rounded\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Slots Occupied\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 37\n              }, this), Array.from({\n                length: 40 - newComponent.startSlot + 1\n              }, (_, i) => i + 1).map(slot => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: slot,\n                children: slot\n              }, slot, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 33\n            }, this), renderAvailableSlots()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setIsDialogOpen(false),\n              className: \"bg-gray-300 text-black px-4 py-2 rounded mr-2\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n              children: \"Add Component\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-100 p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-6 text-gray-800 border-b pb-2\",\n        children: \"Component Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 3\n      }, this), Object.entries(components).map(([rackName, rackComponents]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8 bg-white rounded-lg shadow-md overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold bg-red-800 text-white p-4 cursor-pointer\",\n          onClick: () => setIsExpanded(!isExpanded[rackName]),\n          children: rackName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 7\n        }, this), isExpanded[rackName] && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"divide-y divide-gray-200\",\n          children: [...rackComponents].sort((a, b) => a.startSlot - b.startSlot).map(component => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"p-4 hover:bg-gray-50 transition-colors duration-150 ease-in-out\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col sm:flex-row justify-between items-start sm:items-center space-y-2 sm:space-y-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-gray-800\",\n                  children: component.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-600 mt-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"inline-block bg-blue-100 text-blue-800 rounded-full px-2 py-1 text-xs font-semibold mr-2\",\n                    children: componentTypes[component.type] || component.type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 563,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"mr-2\",\n                    children: [\"Slot: \", component.startSlot]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 566,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Slots Occupied: \", component.size]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 567,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleExtend(component._id, component.size),\n                  className: \"bg-yellow-500 hover:bg-yellow-600 text-white px-3 py-1 rounded-md text-sm font-medium transition-colors duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:ring-opacity-50\",\n                  children: \"Extend/Retract\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDelete(component._id),\n                  className: \"bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded-md text-sm font-medium transition-colors duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 17\n            }, this)\n          }, component._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 9\n        }, this)]\n      }, rackName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 5\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 418,\n    columnNumber: 9\n  }, this);\n};\n_s(GnG_Admin, \"y2yYvOmQsow4w+GQTi4TyNHcFdQ=\");\n_c = GnG_Admin;\nexport default GnG_Admin;\nvar _c;\n$RefreshReg$(_c, \"GnG_Admin\");","map":{"version":3,"names":["React","useState","useEffect","axios","TOTAL_SLOTS","jsxDEV","_jsxDEV","Fragment","_Fragment","GnG_Admin","dataCenter","_s","name","setName","components","setComponents","stats","setStats","loading","setLoading","error","setError","isDialogOpen","setIsDialogOpen","newComponent","setNewComponent","type","startSlot","rack","size","specifications","updateComponents","data","c","availableSlots","setAvailableSlots","componentTypes","rackTypes","vendorList","fetchComponents","response","get","calculateStats","err","updateIsExpanded","componentsData","newIsExpanded","Object","keys","forEach","rackName","totalComponents","componentsByType","componentsByRack","values","rackComponents","component","rackId","calculateAvailableSlots","occupiedSlots","Set","i","add","Array","from","length","_","filter","slot","j","has","console","log","handleDelete","componentId","window","confirm","delete","handleInputChange","e","value","target","prev","handleSubmit","preventDefault","JSON","stringify","post","headers","Accept","alert","_err$response","_err$response2","_err$response2$data","message","handleExtend","currentSlots","newSlots","prompt","isNaN","put","parseInt","renderComponentFields","children","serviceTag","onChange","placeholder","className","required","fileName","_jsxFileName","lineNumber","columnNumber","makeModel","ram","hdd","processor","vendor","entries","map","id","ports","drives","slots","renderAvailableSlots","count","onClick","onSubmit","key","index","setIsExpanded","isExpanded","sort","a","b","_id","_c","$RefreshReg$"],"sources":["C:/Users/91981/Nigel/Internship/ONGC/ONGC_REACT_RACK/myapp/src/components/admin_components/GnG.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { TOTAL_SLOTS } from '../reusable/Table';\r\n\r\nconst GnG_Admin = ({ dataCenter }) => {\r\n    \r\n    const [name, setName] = useState(\"\")\r\n    const [components, setComponents] = useState({});\r\n    const [stats, setStats] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n    const [newComponent, setNewComponent] = useState({\r\n        type: '',\r\n        name: '',\r\n        startSlot: '',\r\n        rack: '',\r\n        size: 1,\r\n        specifications: {}\r\n    });\r\n\r\n    const updateComponents = (data) => {\r\n        setComponents(c => ({ ...c, ...data }))\r\n    }\r\n\r\n    const [availableSlots, setAvailableSlots] = useState([]);\r\n\r\n    const componentTypes = {\r\n        1: 'server',\r\n        2: 'storage',\r\n        3: 'switch',\r\n        4: 'tape drive',\r\n        5: 'others'\r\n    };\r\n    const rackTypes = ['Server', 'Network1', 'Network2', 'Storage', 'Peripheral'];\r\n\r\n    const vendorList = {\r\n        100001: 'Dell',\r\n        100002: 'Cisco',\r\n        100004: 'NeoSeries',\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchComponents();\r\n\r\n\r\n        switch (dataCenter) {\r\n            case 1:\r\n                setName('G&G Data Center');\r\n                break;\r\n            case 2:\r\n                setName('VRC');\r\n                break;\r\n            case 3:\r\n                setName('DR');\r\n                break;\r\n            case 4:\r\n                setName('SPIC');\r\n                break;\r\n            default:\r\n                setName('Unknown Data Center');\r\n                break;\r\n        }\r\n\r\n    }, [dataCenter]);\r\n\r\n    const fetchComponents = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await axios.get(`/general/data-centers/${dataCenter}/components`);\r\n\r\n            updateComponents(response.data);\r\n            calculateStats(response.data);\r\n            setLoading(false);\r\n            \r\n        } catch (err) {\r\n            setError('Error fetching components');\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const updateIsExpanded = (componentsData) => {\r\n        // Create an object with all racks initially collapsed (or desired default state)\r\n        const newIsExpanded = {};\r\n        Object.keys(componentsData).forEach(rackName => newIsExpanded[rackName] = false);\r\n        return newIsExpanded;\r\n    }\r\n    \r\n    const calculateStats = (data) => {\r\n        const stats = {\r\n            totalComponents: 0,\r\n            componentsByType: {},\r\n            componentsByRack: {},\r\n        };\r\n\r\n        Object.values(data).forEach(rackComponents => {\r\n            rackComponents.forEach(component => {\r\n                stats.totalComponents++;\r\n                stats.componentsByType[component.type] = (stats.componentsByType[component.type] || 0) + 1;\r\n                stats.componentsByRack[component.rackId.name] = (stats.componentsByRack[component.rackId.name] || 0) + 1;\r\n            });\r\n        });\r\n\r\n        setStats(stats);\r\n    };\r\n    useEffect(() => {\r\n        if (newComponent.size && newComponent.rack) {\r\n            calculateAvailableSlots(newComponent.rack, components);\r\n        }\r\n    }, [newComponent.size, newComponent.rack, components]);\r\n\r\n    const calculateAvailableSlots = (rack, data) => {\r\n        const occupiedSlots = new Set();\r\n\r\n        // Check if the rack exists in the data object\r\n        if (data[rack]) {\r\n            // Iterate through the components in the specified rack\r\n            data[rack].forEach(component => {\r\n                // Adjust the occupied slots based on slotsOccupied and startSlot\r\n                for (let i = component.startSlot; i < component.startSlot + component.size; i++) {\r\n                    occupiedSlots.add(i);\r\n                }\r\n            });\r\n        }\r\n\r\n        // Calculate available slots\r\n        const availableSlots = Array.from({ length: TOTAL_SLOTS }, (_, i) => i + 1).filter(slot => {\r\n            // Check if the slot is available for the desired slotsOccupied\r\n            for (let j = 0; j < newComponent.size; j++) {\r\n                if (occupiedSlots.has(slot + j)) {\r\n                    return false; // Slot is occupied, so exclude it\r\n                }\r\n            }\r\n            return true; // Slot is available\r\n        });\r\n\r\n        setAvailableSlots(availableSlots);\r\n        console.log(availableSlots)\r\n    };\r\n\r\n\r\n    const handleDelete = async (componentId) => {\r\n        if (window.confirm('Are you sure you want to delete this component?')) {\r\n            try {\r\n                await axios.delete(`/general/components/${componentId}`);\r\n                fetchComponents(); // Refresh the list\r\n            } catch (err) {\r\n                setError('Error deleting component');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewComponent(prev => ({ ...prev, [name]: value }));\r\n        if (name === 'rack') {\r\n            calculateAvailableSlots(value, components);\r\n        }\r\n    };\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            console.log(\"Sending data:\", JSON.stringify(newComponent));\r\n            await axios.post(`/admin/${dataCenter}/addcomponent`, JSON.stringify(newComponent), {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Accept: \"application/json\",\r\n                }\r\n            });\r\n            alert('Successfully added!')\r\n            setIsDialogOpen(false);\r\n            setNewComponent({ type: '', name: '', startSlot: '', rack: '', size: 1, specifications: {} });\r\n            fetchComponents(); // Refresh the list\r\n        } catch (err) {\r\n            console.error(\"Error adding component:\", err.response?.data || err.message);\r\n            setError(err.response?.data?.message || 'Error adding component');\r\n        }\r\n    };\r\n\r\n    const handleExtend = async (componentId, currentSlots) => {\r\n        const newSlots = prompt(`Enter new number of slots (current: ${currentSlots}):`, currentSlots);\r\n        if (newSlots && !isNaN(newSlots)) {\r\n            try {\r\n                await axios.put(`/general/components/${componentId}`, { size: parseInt(newSlots) });\r\n                fetchComponents(); // Refresh the list\r\n            } catch (err) {\r\n                setError('Error extending component');\r\n            }\r\n        }\r\n    };\r\n\r\n    const renderComponentFields = () => {\r\n        switch (newComponent.type) {\r\n            case '1': // Server\r\n                return (\r\n                    <>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"serviceTag\"\r\n                            value={newComponent.serviceTag || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Service Tag / SN\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"makeModel\"\r\n                            value={newComponent.makeModel || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Make / Model\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"ram\"\r\n                            value={newComponent.ram || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"RAM (GB)\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"hdd\"\r\n                            value={newComponent.hdd || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"HDD (GB)\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"processor\"\r\n                            value={newComponent.processor || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Processor\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <select\r\n                            name=\"vendor\"\r\n                            value={newComponent.vendor || ''}\r\n                            onChange={handleInputChange}\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select Vendor</option>\r\n                            {Object.entries(vendorList).map(([id, name]) => (\r\n                                <option key={id} value={id}>{name}</option>\r\n                            ))}\r\n                        </select>\r\n                    </>\r\n                );\r\n            case '2': // Storage\r\n                return (\r\n                    <>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"serviceTag\"\r\n                            value={newComponent.serviceTag || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Service Tag / SN\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"makeModel\"\r\n                            value={newComponent.makeModel || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Make / Model\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <select\r\n                            name=\"vendor\"\r\n                            value={newComponent.vendor || ''}\r\n                            onChange={handleInputChange}\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select Vendor</option>\r\n                            {Object.entries(vendorList).map(([id, name]) => (\r\n                                <option key={id} value={id}>{name}</option>\r\n                            ))}\r\n                        </select>\r\n                    </>\r\n                );\r\n            case '3': // Switch\r\n                return (\r\n                    <>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"serviceTag\"\r\n                            value={newComponent.serviceTag || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Service Tag / SN\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"makeModel\"\r\n                            value={newComponent.makeModel || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Make / Model\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"ports\"\r\n                            value={newComponent.ports || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"No. of ports\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <select\r\n                            name=\"vendor\"\r\n                            value={newComponent.vendor || ''}\r\n                            onChange={handleInputChange}\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select Vendor</option>\r\n                            {Object.entries(vendorList).map(([id, name]) => (\r\n                                <option key={id} value={id}>{name}</option>\r\n                            ))}\r\n                        </select>\r\n                    </>\r\n                );\r\n            case '4': // Tape Drive\r\n                return (\r\n                    <>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"serviceTag\"\r\n                            value={newComponent.serviceTag || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Service Tag / SN\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"makeModel\"\r\n                            value={newComponent.makeModel || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Make / Model\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"drives\"\r\n                            value={newComponent.drives || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"No. of drives\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"slots\"\r\n                            value={newComponent.slots || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"No. of slots\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <select\r\n                            name=\"vendor\"\r\n                            value={newComponent.vendor || ''}\r\n                            onChange={handleInputChange}\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select Vendor</option>\r\n                            {Object.entries(vendorList).map(([id, name]) => (\r\n                                <option key={id} value={id}>{name}</option>\r\n                            ))}\r\n                        </select>\r\n                    </>\r\n                );\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    const renderAvailableSlots = () => {\r\n        return (\r\n            <select\r\n                name=\"startSlot\"\r\n                value={newComponent.startSlot}\r\n                onChange={handleInputChange}\r\n                className=\"w-full p-2 mb-4 border rounded\"\r\n                required\r\n            >\r\n                <option value=\"\">Select Start Slot</option>\r\n                {availableSlots.map(slot => (\r\n                    <option key={slot} value={slot}>\r\n                        {slot}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        );\r\n    };\r\n\r\n    if (loading) return <div>Loading...</div>;\r\n    if (error) return <div>{error}</div>;\r\n\r\n    return (\r\n        <div className=\"container mx-auto p-4\">\r\n            <h1 className=\"text-2xl font-bold mb-4\">Data Center Admin - {name}</h1>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <div className=\"bg-white shadow-md rounded-lg p-6 mb-8\">\r\n                <h2 className=\"text-2xl font-bold mb-10 text-center\">Statistics</h2>\r\n                <div className=\"grid grid-cols-2 gap-6\">\r\n                    <div className='w-full flex justify-center'>\r\n                        <div className='w-10/12'>\r\n\r\n                            <h3 className=\"text-lg font-semibold mb-2\">Components by Type</h3>\r\n                            <ul className=\"divide-y divide-gray-200\">\r\n                                {Object.entries(stats.componentsByType).map(([type, count]) => (\r\n                                    <li key={type} className=\"flex justify-between py-2\">\r\n                                        <span className=\"capitalize\">{componentTypes[type]}s</span>\r\n                                        <span className=\"font-semibold\">{count}</span>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='w-full flex justify-center'>\r\n                        <div className='w-10/12'>\r\n\r\n                            <h3 className=\"text-lg font-semibold mb-2\">Components by Rack</h3>\r\n                            <ul className=\"divide-y divide-gray-200\">\r\n                                {Object.entries(stats.componentsByRack).map(([rack, count]) => (\r\n                                    <li key={rack} className=\"flex justify-between py-2\">\r\n                                        <span>{rack}</span>\r\n                                        <span className=\"font-semibold\">{count}</span>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <button\r\n                onClick={() => setIsDialogOpen(true)}\r\n                className=\"bg-blue-500 text-white px-4 py-2 rounded mb-4\"\r\n            >\r\n                Add New Component\r\n            </button>\r\n            {isDialogOpen && (\r\n                <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full mt-24\">\r\n                    <div className=\" relative top-32 mx-auto p-5 border w-10/12 shadow-lg rounded-md bg-white\">\r\n                        <h3 className=\"text-lg font-semibold mb-4\">Add New Component</h3>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=' grid grid-cols-2 gap-3'>\r\n\r\n                                <select\r\n                                    name=\"type\"\r\n                                    value={newComponent.type}\r\n                                    onChange={handleInputChange}\r\n                                    className=\"w-full p-2 mb-4 border rounded\"\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">Select Component Type</option>\r\n                                    {Object.entries(componentTypes).map(([key, value]) => (\r\n                                        <option key={key} value={key}>{value}</option>\r\n                                    ))}\r\n                                </select>\r\n                                {renderComponentFields()}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    value={newComponent.name}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Component Name\"\r\n                                    className=\"w-full p-2 mb-4 border rounded\"\r\n                                    required\r\n                                />\r\n                                <select\r\n                                    name=\"rack\"\r\n                                    value={newComponent.rack}\r\n                                    onChange={handleInputChange}\r\n                                    className=\"w-full p-2 mb-4 border rounded\"\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">Select Rack</option>\r\n                                    {rackTypes.map((rack, index) => (\r\n                                        <option key={index} value={rack}>{rack}</option>\r\n                                    ))}\r\n                                </select>\r\n                                <select\r\n                                    name=\"size\"\r\n                                    value={newComponent.size}\r\n                                    onChange={handleInputChange}\r\n                                    className=\"w-full p-2 mb-4 border rounded\"\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">Select Slots Occupied</option>\r\n                                    {Array.from({ length: 40 - newComponent.startSlot + 1 }, (_, i) => i + 1).map((slot) => (\r\n                                        <option key={slot} value={slot}>{slot}</option>\r\n                                    ))}\r\n                                </select>\r\n                                {renderAvailableSlots()}\r\n\r\n                            </div>\r\n                            <div className=\"flex justify-end\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={() => setIsDialogOpen(false)}\r\n                                    className=\"bg-gray-300 text-black px-4 py-2 rounded mr-2\"\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n                                >\r\n                                    Add Component\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n<div className=\"bg-gray-100 p-6 rounded-lg shadow-lg\">\r\n  <h2 className=\"text-2xl font-bold mb-6 text-gray-800 border-b pb-2\">Component Dashboard</h2>\r\n  {Object.entries(components).map(([rackName, rackComponents]) => (\r\n    <div key={rackName} className=\"mb-8 bg-white rounded-lg shadow-md overflow-hidden\">\r\n      <h3\r\n        className=\"text-lg font-semibold bg-red-800 text-white p-4 cursor-pointer\"\r\n        onClick={() => setIsExpanded(!isExpanded[rackName])}\r\n      >\r\n        {rackName}\r\n      </h3>\r\n      {isExpanded[rackName] && (\r\n        <ul className=\"divide-y divide-gray-200\">\r\n          {[...rackComponents]\r\n            .sort((a, b) => a.startSlot - b.startSlot)\r\n            .map((component) => (\r\n              <li key={component._id} className=\"p-4 hover:bg-gray-50 transition-colors duration-150 ease-in-out\">\r\n                <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center space-y-2 sm:space-y-0\">\r\n                  <div className=\"flex-1\">\r\n                    <span className=\"font-medium text-gray-800\">{component.name}</span>\r\n                    <div className=\"text-sm text-gray-600 mt-1\">\r\n                      <span className=\"inline-block bg-blue-100 text-blue-800 rounded-full px-2 py-1 text-xs font-semibold mr-2\">\r\n                        {componentTypes[component.type] || component.type}\r\n                      </span>\r\n                      <span className=\"mr-2\">Slot: {component.startSlot}</span>\r\n                      <span>Slots Occupied: {component.size}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex space-x-2\">\r\n                    <button\r\n                      onClick={() => handleExtend(component._id, component.size)}\r\n                      className=\"bg-yellow-500 hover:bg-yellow-600 text-white px-3 py-1 rounded-md text-sm font-medium transition-colors duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:ring-opacity-50\"\r\n                    >\r\n                      Extend/Retract\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleDelete(component._id)}\r\n                      className=\"bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded-md text-sm font-medium transition-colors duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  ))}\r\n</div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GnG_Admin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}