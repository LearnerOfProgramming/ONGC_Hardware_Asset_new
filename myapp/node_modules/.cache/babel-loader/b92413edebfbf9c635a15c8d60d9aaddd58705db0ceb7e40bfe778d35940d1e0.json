{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91981\\\\Nigel\\\\Internship\\\\ONGC\\\\ONGC_REACT_RACK\\\\myapp\\\\src\\\\components\\\\reusable\\\\Table.js\";\nimport React from 'react';\nimport './Table.css';\nimport Badge from './Badge';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = ({\n  rack,\n  name\n}) => {\n  // Calculate group information based on components\n  const groupedRack = rack.reduce((acc, item, index) => {\n    if (acc.length === 0 || item.name !== acc[acc.length - 1].name) {\n      acc.push({\n        ...item,\n        startIndex: item.startSlot,\n        endIndex: item.startSlot + item.size - 1\n      });\n    } else {\n      acc[acc.length - 1].endIndex = item.startSlot + item.size - 1;\n    }\n    return acc;\n  }, []);\n\n  // Function to combine rows based on slot ranges\n  const combineRows = data => {\n    let currentRow = null; // Keep track of the current row\n    const combinedRows = [];\n    for (const item of data) {\n      // If no current row or the item's startIndex doesn't match the current row's endIndex + 1, create a new row\n      if (!currentRow || currentRow.endIndex + 1 !== item.startIndex) {\n        currentRow = {\n          ...item,\n          rows: 1\n        }; // Create new row with initial row count\n        combinedRows.push(currentRow);\n      } else {\n        // If the item belongs to the current row, increment its row count\n        currentRow.rows++;\n      }\n    }\n    return combinedRows;\n  };\n\n  // Combine rows using groupedRack data\n  const rowsWithRowCount = combineRows(groupedRack);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"w-full table-fixed text-center text-white bg-teal-600\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      className: \"text-3xl\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"py-2\",\n          children: [name, \" Rack\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: rowsWithRowCount.map(({\n        name,\n        startIndex,\n        endIndex,\n        color,\n        rows\n      }, groupIndex) => {\n        const indexDisplay = `${startIndex + 1}-${endIndex + 1}`;\n        const rowHeight = `${rows * 3}rem`; // Height based on row count\n\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"border-t-2 border-b-2 border-white\",\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"h-12 relative\",\n            style: {\n              height: rowHeight\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute inset-0 flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"pl-2 absolute left-0\",\n                children: [indexDisplay, \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-full flex justify-center items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"w-10/12\",\n                  children: name ? /*#__PURE__*/_jsxDEV(Badge, {\n                    label: name,\n                    color: color\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"h-full w-full bg-transparent\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 19\n          }, this)\n        }, groupIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","Badge","jsxDEV","_jsxDEV","Table","rack","name","groupedRack","reduce","acc","item","index","length","push","startIndex","startSlot","endIndex","size","combineRows","data","currentRow","combinedRows","rows","rowsWithRowCount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","color","groupIndex","indexDisplay","rowHeight","style","height","label","_c","$RefreshReg$"],"sources":["C:/Users/91981/Nigel/Internship/ONGC/ONGC_REACT_RACK/myapp/src/components/reusable/Table.js"],"sourcesContent":["import React from 'react';\r\nimport './Table.css';\r\nimport Badge from './Badge';\r\n\r\nconst Table = ({ rack, name }) => {\r\n  // Calculate group information based on components\r\n  const groupedRack = rack.reduce((acc, item, index) => {\r\n    if (acc.length === 0 || item.name !== acc[acc.length - 1].name) {\r\n      acc.push({ ...item, startIndex: item.startSlot, endIndex: item.startSlot + item.size - 1 });\r\n    } else {\r\n      acc[acc.length - 1].endIndex = item.startSlot + item.size - 1;\r\n    }\r\n    return acc;\r\n  }, []);\r\n\r\n  // Function to combine rows based on slot ranges\r\n  const combineRows = (data) => {\r\n    let currentRow = null; // Keep track of the current row\r\n    const combinedRows = [];\r\n\r\n    for (const item of data) {\r\n      // If no current row or the item's startIndex doesn't match the current row's endIndex + 1, create a new row\r\n      if (!currentRow || currentRow.endIndex + 1 !== item.startIndex) {\r\n        currentRow = { ...item, rows: 1 }; // Create new row with initial row count\r\n        combinedRows.push(currentRow);\r\n      } else {\r\n        // If the item belongs to the current row, increment its row count\r\n        currentRow.rows++;\r\n      }\r\n    }\r\n\r\n    return combinedRows;\r\n  };\r\n\r\n  // Combine rows using groupedRack data\r\n  const rowsWithRowCount = combineRows(groupedRack);\r\n\r\n  return (\r\n    <table className=\"w-full table-fixed text-center text-white bg-teal-600\">\r\n      <thead className=\"text-3xl\">\r\n        <tr>\r\n          <th className=\"py-2\">{name} Rack</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {rowsWithRowCount.map(({ name, startIndex, endIndex, color, rows }, groupIndex) => {\r\n          const indexDisplay = `${startIndex + 1}-${endIndex + 1}`;\r\n          const rowHeight = `${rows * 3}rem`; // Height based on row count\r\n\r\n          return (\r\n            <tr key={groupIndex} className=\"border-t-2 border-b-2 border-white\">\r\n                  <td className=\"h-12 relative\"\r\n                      style={{ height: rowHeight }}\r\n                  >\r\n                <div className=\"absolute inset-0 flex items-center\">\r\n                  <span className=\"pl-2 absolute left-0\">\r\n                    {indexDisplay}.\r\n                  </span>\r\n                  <div className=\"w-full flex justify-center items-center\">\r\n                    <span className=\"w-10/12\">\r\n                      {name ? (\r\n                        <Badge label={name} color={color} />\r\n                      ) : (\r\n                        <div className=\"h-full w-full bg-transparent\" />\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}