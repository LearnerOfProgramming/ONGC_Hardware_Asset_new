{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91981\\\\Nigel\\\\Internship\\\\ONGC\\\\ONGC_REACT_RACK\\\\myapp\\\\src\\\\components\\\\home_components\\\\GnG.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Table from '../reusable/Table';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GnG = () => {\n  _s();\n  const [normalizedRacks, setNormalizedRacks] = useState({});\n\n  // Updated color mapping based on 'type' field\n  const colorMapping = {\n    1: \"rgba(255, 0, 0, 0.6)\",\n    // type 1 is for servers\n    2: \"rgba(0, 0, 255, 0.6)\",\n    // type 2 is for tape drives\n    3: \"rgba(0, 128, 0, 0.6)\",\n    // type 3 is for network devices\n    4: \"rgba(255, 165, 0, 0.6)\" // type 4 is for storage devices\n  };\n  const getItemType = item => {\n    return colorMapping[item.type] || 'rgba(200, 200, 200, 0.6)'; // Default gray color\n  };\n  function normalizeArrayLengths(data, fillValue = \"\") {\n    const maxLength = Math.max(...Object.values(data).map(arr => arr.length));\n    return Object.fromEntries(Object.entries(data).map(([key, value]) => [key, value.concat(Array(maxLength - value.length).fill(fillValue))]));\n  }\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await axios.get('/general/data-centers/1/components');\n        const data = response.data;\n        console.log(\"Raw data:\", data);\n\n        // Process the data into the required structure\n        const processedData = Object.entries(data).reduce((acc, [rackName, components]) => {\n          acc[rackName] = components.map(component => ({\n            ...component,\n            displayName: component.name,\n            color: getItemType(component)\n          }));\n          return acc;\n        }, {});\n        const normalizedData = normalizeArrayLengths(processedData);\n        setNormalizedRacks(normalizedData);\n      } catch (error) {\n        console.error(\"Error fetching components:\", error);\n        // Handle errors appropriately\n      }\n    }\n    fetchData();\n  }, []);\n  if (Object.keys(normalizedRacks).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex mx-2 border-r border-black\",\n    children: Object.entries(normalizedRacks).map(([rackName, components]) => /*#__PURE__*/_jsxDEV(Table, {\n      rack: components,\n      name: rackName\n    }, rackName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(GnG, \"GNlhK6msdrZCFfe58dw2ryaLJyE=\");\n_c = GnG;\nexport default GnG;\nvar _c;\n$RefreshReg$(_c, \"GnG\");","map":{"version":3,"names":["React","useState","useEffect","Table","axios","jsxDEV","_jsxDEV","GnG","_s","normalizedRacks","setNormalizedRacks","colorMapping","getItemType","item","type","normalizeArrayLengths","data","fillValue","maxLength","Math","max","Object","values","map","arr","length","fromEntries","entries","key","value","concat","Array","fill","fetchData","response","get","console","log","processedData","reduce","acc","rackName","components","component","displayName","name","color","normalizedData","error","keys","children","fileName","_jsxFileName","lineNumber","columnNumber","className","rack","_c","$RefreshReg$"],"sources":["C:/Users/91981/Nigel/Internship/ONGC/ONGC_REACT_RACK/myapp/src/components/home_components/GnG.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Table from '../reusable/Table'\r\nimport axios from \"axios\"\r\n\r\nconst GnG = () => {\r\n    const [normalizedRacks, setNormalizedRacks] = useState({});\r\n\r\n    // Updated color mapping based on 'type' field\r\n    const colorMapping = {\r\n        1: \"rgba(255, 0, 0, 0.6)\",    // type 1 is for servers\r\n        2: \"rgba(0, 0, 255, 0.6)\",    // type 2 is for tape drives\r\n        3: \"rgba(0, 128, 0, 0.6)\",    // type 3 is for network devices\r\n        4: \"rgba(255, 165, 0, 0.6)\",  // type 4 is for storage devices\r\n        \r\n    };\r\n\r\n    const getItemType = (item) => {\r\n        return colorMapping[item.type] || 'rgba(200, 200, 200, 0.6)'; // Default gray color\r\n    };\r\n\r\n    function normalizeArrayLengths(data, fillValue = \"\") {\r\n        const maxLength = Math.max(...Object.values(data).map((arr) => arr.length));\r\n        return Object.fromEntries(\r\n            Object.entries(data).map(([key, value]) => [\r\n                key, \r\n                value.concat(Array(maxLength - value.length).fill(fillValue))\r\n            ])\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const response = await axios.get('/general/data-centers/1/components');\r\n                const data = response.data;\r\n                console.log(\"Raw data:\", data);\r\n                \r\n                // Process the data into the required structure\r\n                const processedData = Object.entries(data).reduce((acc, [rackName, components]) => {\r\n                    acc[rackName] = components.map(component => ({\r\n                        ...component,\r\n                        displayName: component.name,\r\n                        color: getItemType(component)\r\n                    }));\r\n                    return acc;\r\n                }, {});\r\n\r\n                const normalizedData = normalizeArrayLengths(processedData);\r\n                setNormalizedRacks(normalizedData);\r\n            } catch (error) {\r\n                console.error(\"Error fetching components:\", error);\r\n                // Handle errors appropriately\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    if (Object.keys(normalizedRacks).length === 0) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className='flex mx-2 border-r border-black'>\r\n            {Object.entries(normalizedRacks).map(([rackName, components]) => (\r\n                <Table key={rackName} rack={components} name={rackName} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GnG"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}