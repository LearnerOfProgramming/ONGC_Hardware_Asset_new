{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91981\\\\Nigel\\\\Internship\\\\ONGC\\\\ONGC_REACT_RACK\\\\myapp\\\\src\\\\components\\\\GnG.js\";\nimport React from 'react';\nimport Table from './reusable/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GnG = () => {\n  const racks = {\n    server: [\"server1\", \"server2 (high priority)\", \"database server\", \"web server (production)\", \"web server (staging)\", \"mail server\", \"VPN server\", \"development server 1\", \"development server 2\", \"test server\", \"backup server\", \"content management server\", \"file server\" // Add more elements as needed (up to 20 total)\n    ],\n    network_1: [\"switch1 (core)\", \"firewall\", \"load balancer\", \"VLAN router\", \"VPN concentrator\", \"wireless access point 1\", \"wireless access point 2\", \"network printer\", \"IP phone system\", \"management switch\", \"remote access server\" // Add more elements as needed (up to 20 total)\n    ],\n    storage: [\"storage array 1\", \"storage array 2 (backup)\", \"SAN switch\", \"tape library\", \"cloud storage gateway\", \"NAS device\", \"archival storage\", \"disaster recovery storage\", \"log archive server\", \"video surveillance storage\" // Add more elements as needed (up to 20 total)\n    ],\n    peripheral: [\"KVM switch\", \"serial console server\", \"UPS (uninterruptible power supply)\", \"PDU (power distribution unit)\", \"environmental monitoring system\", \"barcode scanner\", \"fingerprint reader\", \"security camera 1\", \"security camera 2\", \"access control system\" // Add more elements as needed (up to 20 total)\n    ],\n    network_2: [\"DMZ switch\", \"web server (DMZ)\", \"application server (DMZ)\", \"database server (DMZ)\", \"external firewall\", \"VPN gateway\", \"web application firewall\", \"intrusion detection system\", \"remote access VPN\" // Add more elements as needed (up to 20 total)\n    ]\n  };\n  function normalizeArrayLengths(data, fillValue = \"\") {\n    const maxLength = Math.max(...Object.values(data).map(arr => arr.length));\n    return Object.fromEntries(Object.entries(data).map(([key, value]) => [key, value.concat(Array(maxLength - value.length).fill(fillValue))]));\n  }\n  const normalizedRacks = normalizeArrayLengths(racks);\n  console.log(normalizedRacks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex mx-2 border-r border-black mt-10\",\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      rack: normalizedRacks.server,\n      name: \"Server\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      rack: normalizedRacks.network_1,\n      name: \"Network-I\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      rack: normalizedRacks.network_2,\n      name: \"Network-II\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      rack: normalizedRacks.storage,\n      name: \"Storage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      rack: normalizedRacks.peripheral,\n      name: \"Peripheral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_c = GnG;\nexport default GnG;\nvar _c;\n$RefreshReg$(_c, \"GnG\");","map":{"version":3,"names":["React","Table","jsxDEV","_jsxDEV","GnG","racks","server","network_1","storage","peripheral","network_2","normalizeArrayLengths","data","fillValue","maxLength","Math","max","Object","values","map","arr","length","fromEntries","entries","key","value","concat","Array","fill","normalizedRacks","console","log","className","children","rack","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/91981/Nigel/Internship/ONGC/ONGC_REACT_RACK/myapp/src/components/GnG.js"],"sourcesContent":["import React from 'react'\r\nimport Table from './reusable/Table'\r\n\r\nconst GnG = () => {\r\n    const racks = {\r\n        server: [\r\n          \"server1\",\r\n          \"server2 (high priority)\",\r\n          \"database server\",\r\n          \"web server (production)\",\r\n          \"web server (staging)\",\r\n          \"mail server\",\r\n          \"VPN server\",\r\n          \"development server 1\",\r\n          \"development server 2\",\r\n          \"test server\",\r\n          \"backup server\",\r\n          \"content management server\",\r\n          \"file server\", // Add more elements as needed (up to 20 total)\r\n        ],\r\n        network_1: [\r\n          \"switch1 (core)\",\r\n          \"firewall\",\r\n          \"load balancer\",\r\n          \"VLAN router\",\r\n          \"VPN concentrator\",\r\n          \"wireless access point 1\",\r\n          \"wireless access point 2\",\r\n          \"network printer\",\r\n          \"IP phone system\",\r\n          \"management switch\",\r\n          \"remote access server\", // Add more elements as needed (up to 20 total)\r\n        ],\r\n        storage: [\r\n          \"storage array 1\",\r\n          \"storage array 2 (backup)\",\r\n          \"SAN switch\",\r\n          \"tape library\",\r\n          \"cloud storage gateway\",\r\n          \"NAS device\",\r\n          \"archival storage\",\r\n          \"disaster recovery storage\",\r\n          \"log archive server\",\r\n          \"video surveillance storage\", // Add more elements as needed (up to 20 total)\r\n        ],\r\n        peripheral: [\r\n          \"KVM switch\",\r\n          \"serial console server\",\r\n          \"UPS (uninterruptible power supply)\",\r\n          \"PDU (power distribution unit)\",\r\n          \"environmental monitoring system\",\r\n          \"barcode scanner\",\r\n          \"fingerprint reader\",\r\n          \"security camera 1\",\r\n          \"security camera 2\",\r\n          \"access control system\", // Add more elements as needed (up to 20 total)\r\n        ],\r\n        network_2: [\r\n          \"DMZ switch\",\r\n          \"web server (DMZ)\",\r\n          \"application server (DMZ)\",\r\n          \"database server (DMZ)\",\r\n          \"external firewall\",\r\n          \"VPN gateway\",\r\n          \"web application firewall\",\r\n          \"intrusion detection system\",\r\n          \"remote access VPN\", // Add more elements as needed (up to 20 total)\r\n        ],\r\n      };\r\n      \r\n\r\n\r\n    function normalizeArrayLengths(data, fillValue = \"\") {\r\n        const maxLength = Math.max(...Object.values(data).map((arr) => arr.length));\r\n        return Object.fromEntries(\r\n            Object.entries(data).map(([key, value]) => [key, value.concat(Array(maxLength - value.length).fill(fillValue))])\r\n        );\r\n    }\r\n\r\n    const normalizedRacks = normalizeArrayLengths(racks);\r\n    console.log(normalizedRacks);\r\n\r\n    \r\n\r\n    return (\r\n        <div className='flex mx-2 border-r border-black mt-10'>\r\n\r\n            <Table rack={normalizedRacks.server} name=\"Server\" />\r\n            <Table rack={normalizedRacks.network_1} name=\"Network-I\" />\r\n            <Table rack={normalizedRacks.network_2} name=\"Network-II\" />\r\n            <Table rack={normalizedRacks.storage} name=\"Storage\" />\r\n            <Table rack={normalizedRacks.peripheral} name=\"Peripheral\" />\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default GnG"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EACd,MAAMC,KAAK,GAAG;IACVC,MAAM,EAAE,CACN,SAAS,EACT,yBAAyB,EACzB,iBAAiB,EACjB,yBAAyB,EACzB,sBAAsB,EACtB,aAAa,EACb,YAAY,EACZ,sBAAsB,EACtB,sBAAsB,EACtB,aAAa,EACb,eAAe,EACf,2BAA2B,EAC3B,aAAa,CAAE;IAAA,CAChB;IACDC,SAAS,EAAE,CACT,gBAAgB,EAChB,UAAU,EACV,eAAe,EACf,aAAa,EACb,kBAAkB,EAClB,yBAAyB,EACzB,yBAAyB,EACzB,iBAAiB,EACjB,iBAAiB,EACjB,mBAAmB,EACnB,sBAAsB,CAAE;IAAA,CACzB;IACDC,OAAO,EAAE,CACP,iBAAiB,EACjB,0BAA0B,EAC1B,YAAY,EACZ,cAAc,EACd,uBAAuB,EACvB,YAAY,EACZ,kBAAkB,EAClB,2BAA2B,EAC3B,oBAAoB,EACpB,4BAA4B,CAAE;IAAA,CAC/B;IACDC,UAAU,EAAE,CACV,YAAY,EACZ,uBAAuB,EACvB,oCAAoC,EACpC,+BAA+B,EAC/B,iCAAiC,EACjC,iBAAiB,EACjB,oBAAoB,EACpB,mBAAmB,EACnB,mBAAmB,EACnB,uBAAuB,CAAE;IAAA,CAC1B;IACDC,SAAS,EAAE,CACT,YAAY,EACZ,kBAAkB,EAClB,0BAA0B,EAC1B,uBAAuB,EACvB,mBAAmB,EACnB,aAAa,EACb,0BAA0B,EAC1B,4BAA4B,EAC5B,mBAAmB,CAAE;IAAA;EAEzB,CAAC;EAIH,SAASC,qBAAqBA,CAACC,IAAI,EAAEC,SAAS,GAAG,EAAE,EAAE;IACjD,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGC,MAAM,CAACC,MAAM,CAACN,IAAI,CAAC,CAACO,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACC,MAAM,CAAC,CAAC;IAC3E,OAAOJ,MAAM,CAACK,WAAW,CACrBL,MAAM,CAACM,OAAO,CAACX,IAAI,CAAC,CAACO,GAAG,CAAC,CAAC,CAACK,GAAG,EAAEC,KAAK,CAAC,KAAK,CAACD,GAAG,EAAEC,KAAK,CAACC,MAAM,CAACC,KAAK,CAACb,SAAS,GAAGW,KAAK,CAACJ,MAAM,CAAC,CAACO,IAAI,CAACf,SAAS,CAAC,CAAC,CAAC,CACnH,CAAC;EACL;EAEA,MAAMgB,eAAe,GAAGlB,qBAAqB,CAACN,KAAK,CAAC;EACpDyB,OAAO,CAACC,GAAG,CAACF,eAAe,CAAC;EAI5B,oBACI1B,OAAA;IAAK6B,SAAS,EAAC,uCAAuC;IAAAC,QAAA,gBAElD9B,OAAA,CAACF,KAAK;MAACiC,IAAI,EAAEL,eAAe,CAACvB,MAAO;MAAC6B,IAAI,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrDpC,OAAA,CAACF,KAAK;MAACiC,IAAI,EAAEL,eAAe,CAACtB,SAAU;MAAC4B,IAAI,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3DpC,OAAA,CAACF,KAAK;MAACiC,IAAI,EAAEL,eAAe,CAACnB,SAAU;MAACyB,IAAI,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5DpC,OAAA,CAACF,KAAK;MAACiC,IAAI,EAAEL,eAAe,CAACrB,OAAQ;MAAC2B,IAAI,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvDpC,OAAA,CAACF,KAAK;MAACiC,IAAI,EAAEL,eAAe,CAACpB,UAAW;MAAC0B,IAAI,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5D,CAAC;AAGd,CAAC;AAAAC,EAAA,GA7FKpC,GAAG;AA+FT,eAAeA,GAAG;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}