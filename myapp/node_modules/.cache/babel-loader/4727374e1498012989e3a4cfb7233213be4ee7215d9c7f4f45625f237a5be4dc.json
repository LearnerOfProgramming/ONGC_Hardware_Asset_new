{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91981\\\\Nigel\\\\Internship\\\\ONGC\\\\ONGC_REACT_RACK\\\\myapp\\\\src\\\\components\\\\reusable\\\\Badge.js\",\n  _s = $RefreshSig$();\nimport { Button, Chip, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, TextField, Typography } from '@mui/material';\nimport React, { useState, useEffect } from 'react';\nimport { FaArrowRight } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Badge = props => {\n  _s();\n  var _props$componentDetai, _props$componentDetai2, _editedComponent$spec, _editedComponent$spec2, _component$specificat, _component$specificat2;\n  const [open, setOpen] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedComponent, setEditedComponent] = useState({});\n  const [isChanged, setIsChanged] = useState(false);\n  const [showChanges, setShowChanges] = useState(false);\n  const [vendors, setVendors] = useState([]);\n  useEffect(() => {\n    setIsAdmin(localStorage.getItem('isAdmin') === 'true');\n    fetchVendors();\n  }, []);\n  const fetchVendors = async () => {\n    try {\n      const response = await axios.get('/general/vendors');\n      setVendors(response.data);\n    } catch (error) {\n      console.error('Error fetching vendors:', error);\n    }\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n    setEditedComponent(props.componentDetails);\n  };\n  const handleClose = () => {\n    setOpen(false);\n    setIsEditing(false);\n    setIsChanged(false);\n  };\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n  const handleSave = () => {\n    setShowChanges(true);\n  };\n  const confirmSave = () => {\n    console.log('Saving changes:', editedComponent);\n    setIsEditing(false);\n    setIsChanged(false);\n    setShowChanges(false);\n    handleClose();\n  };\n  const renderComparisonField = (label, oldValue, newValue, key) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        color: \"text.secondary\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 3,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: oldValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 1,\n      children: /*#__PURE__*/_jsxDEV(FaArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"primary\",\n        textAlign: 'center',\n        children: newValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, key, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n  const handleInputChange = (key, value) => {\n    setEditedComponent(prev => {\n      const updated = {\n        ...prev,\n        specifications: {\n          ...prev.specifications\n        }\n      };\n\n      // Ensure the new value is of the same type as the original\n      const originalValue = props.componentDetails.specifications[key];\n      let typedValue = value;\n      if (typeof originalValue === 'number' && !isNaN(Number(value))) {\n        typedValue = Number(value);\n      } else if (typeof originalValue === 'boolean') {\n        typedValue = value === 'true' || value === true;\n      }\n      updated.specifications[key] = typedValue;\n\n      // Special handling for vendor\n      if (key === 'vendor') {\n        const [vendorID, vendorName] = value.split('(');\n        updated.specifications.vendorID = {\n          vendorID: vendorID.trim(),\n          vendorName: vendorName.replace(')', '').trim()\n        };\n      }\n      const hasChanged = isObjectChanged(updated, props.componentDetails);\n      setIsChanged(hasChanged);\n\n      // DEBUG\n      // console.log(\"Result of is changed\", hasChanged);\n      // console.log(\"Updated\", updated);\n      // console.log(\"Prev\", props.componentDetails);\n\n      return updated;\n    });\n  };\n\n  // Helper function to deep compare objects\n  const isObjectChanged = (obj1, obj2) => {\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return true;\n    }\n    for (const key of keys1) {\n      const val1 = obj1[key];\n      const val2 = obj2[key];\n      const areObjects = isObject(val1) && isObject(val2);\n      if (areObjects && isObjectChanged(val1, val2) || !areObjects && val1 !== val2) {\n        return true;\n      }\n    }\n    return false;\n  };\n  const isObject = object => {\n    return object != null && typeof object === 'object';\n  };\n  let component = isEditing ? editedComponent : props.componentDetails;\n  return props.label ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Chip, {\n      label: props.label,\n      onClick: handleClickOpen,\n      sx: {\n        backgroundColor: props.color,\n        color: 'white',\n        fontFamily: 'Montserrat',\n        zIndex: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"specifications-dialog-title\",\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"specifications-dialog-title\",\n        sx: {\n          bgcolor: props.color,\n          color: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: props.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: showChanges ? /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [{\n            label: \"Service Tag / SN\",\n            oldValue: props.componentDetails.specifications.serialNo,\n            newValue: editedComponent.specifications.serialNo,\n            key: \"serialNo\"\n          }, {\n            label: \"Make / Model\",\n            oldValue: props.componentDetails.specifications.makeModel,\n            newValue: editedComponent.specifications.makeModel,\n            key: \"makeModel\"\n          }, ...(props.componentDetails.type === 1 ? [{\n            label: \"RAM (GB)\",\n            oldValue: props.componentDetails.specifications.ram,\n            newValue: editedComponent.specifications.ram,\n            key: \"ram\"\n          }, {\n            label: \"HDD (GB)\",\n            oldValue: props.componentDetails.specifications.hdd,\n            newValue: editedComponent.specifications.hdd,\n            key: \"hdd\"\n          }, {\n            label: \"Processor\",\n            oldValue: props.componentDetails.specifications.processor,\n            newValue: editedComponent.specifications.processor,\n            key: \"processor\"\n          }] : []), ...(props.componentDetails.type === 3 ? [{\n            label: \"No. of ports\",\n            oldValue: props.componentDetails.specifications.ports,\n            newValue: editedComponent.specifications.ports,\n            key: \"ports\"\n          }] : []), ...(props.componentDetails.type === 4 ? [{\n            label: \"No. of drives\",\n            oldValue: props.componentDetails.specifications.drives,\n            newValue: editedComponent.specifications.drives,\n            key: \"drives\"\n          }, {\n            label: \"No. of slots\",\n            oldValue: props.componentDetails.specifications.slots,\n            newValue: editedComponent.specifications.slots,\n            key: \"slots\"\n          }] : []), {\n            label: \"Vendor\",\n            oldValue: `${(_props$componentDetai = props.componentDetails.specifications) === null || _props$componentDetai === void 0 ? void 0 : _props$componentDetai.vendorID.vendorID} (${(_props$componentDetai2 = props.componentDetails.specifications) === null || _props$componentDetai2 === void 0 ? void 0 : _props$componentDetai2.vendorID.vendorName})`,\n            newValue: `${(_editedComponent$spec = editedComponent.specifications) === null || _editedComponent$spec === void 0 ? void 0 : _editedComponent$spec.vendorID.vendorID} (${(_editedComponent$spec2 = editedComponent.specifications) === null || _editedComponent$spec2 === void 0 ? void 0 : _editedComponent$spec2.vendorID.vendorName})`,\n            key: \"vendor\"\n          }].map(item => {\n            return item.oldValue !== item.newValue && renderComparisonField(item.label, item.oldValue, item.newValue, item.key);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [{\n            label: \"Service Tag / SN\",\n            value: component.specifications.serialNo,\n            key: \"serialNo\"\n          }, {\n            label: \"Make / Model\",\n            value: component.specifications.makeModel,\n            key: \"makeModel\"\n          }, ...(component.type === 1 ? [{\n            label: \"RAM (GB)\",\n            value: component.specifications.ram,\n            key: \"ram\"\n          }, {\n            label: \"HDD (GB)\",\n            value: component.specifications.hdd,\n            key: \"hdd\"\n          }, {\n            label: \"Processor\",\n            value: component.specifications.processor,\n            key: \"processor\"\n          }] : []), ...(component.type === 3 ? [{\n            label: \"No. of ports\",\n            value: component.specifications.ports,\n            key: \"ports\"\n          }] : []), ...(component.type === 4 ? [{\n            label: \"No. of drives\",\n            value: component.specifications.drives,\n            key: \"drives\"\n          }, {\n            label: \"No. of slots\",\n            value: component.specifications.slots,\n            key: \"slots\"\n          }] : []), {\n            label: \"Vendor\",\n            value: `${(_component$specificat = component.specifications) === null || _component$specificat === void 0 ? void 0 : _component$specificat.vendorID.vendorID} (${(_component$specificat2 = component.specifications) === null || _component$specificat2 === void 0 ? void 0 : _component$specificat2.vendorID.vendorName})`,\n            key: \"vendor\"\n          }].map(item => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 5,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: item.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 7,\n              children: isEditing ? /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                variant: \"outlined\",\n                size: \"small\",\n                value: item.value,\n                onChange: e => handleInputChange(item.key, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: item.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 21\n            }, this)]\n          }, item.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          justifyContent: 'flex-end',\n          p: 2\n        },\n        children: [isAdmin && !isEditing && !showChanges && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          onClick: handleEdit,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this), isAdmin && isEditing && isChanged && !showChanges && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }, this), showChanges && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"secondary\",\n            onClick: () => setShowChanges(false),\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: confirmSave,\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), !showChanges && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Badge, \"Gg7JWZs9eMzbloi4oXNu6wdxdLI=\");\n_c = Badge;\nexport default Badge;\nvar _c;\n$RefreshReg$(_c, \"Badge\");","map":{"version":3,"names":["Button","Chip","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Grid","TextField","Typography","React","useState","useEffect","FaArrowRight","jsxDEV","_jsxDEV","Fragment","_Fragment","Badge","props","_s","_props$componentDetai","_props$componentDetai2","_editedComponent$spec","_editedComponent$spec2","_component$specificat","_component$specificat2","open","setOpen","isAdmin","setIsAdmin","isEditing","setIsEditing","editedComponent","setEditedComponent","isChanged","setIsChanged","showChanges","setShowChanges","vendors","setVendors","localStorage","getItem","fetchVendors","response","axios","get","data","error","console","handleClickOpen","componentDetails","handleClose","handleEdit","handleSave","confirmSave","log","renderComparisonField","label","oldValue","newValue","key","children","item","xs","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","handleInputChange","value","prev","updated","specifications","originalValue","typedValue","isNaN","Number","vendorID","vendorName","split","trim","replace","hasChanged","isObjectChanged","obj1","obj2","keys1","Object","keys","keys2","length","val1","val2","areObjects","isObject","object","component","onClick","sx","backgroundColor","fontFamily","zIndex","onClose","maxWidth","fullWidth","id","bgcolor","dividers","container","spacing","serialNo","makeModel","type","ram","hdd","processor","ports","drives","slots","map","size","onChange","e","target","justifyContent","p","_c","$RefreshReg$"],"sources":["C:/Users/91981/Nigel/Internship/ONGC/ONGC_REACT_RACK/myapp/src/components/reusable/Badge.js"],"sourcesContent":["import { Button, Chip, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, TextField, Typography } from '@mui/material'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { FaArrowRight } from 'react-icons/fa';\r\n\r\n\r\nconst Badge = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedComponent, setEditedComponent] = useState({});\r\n  const [isChanged, setIsChanged] = useState(false);\r\n  const [showChanges, setShowChanges] = useState(false);\r\n  const [vendors, setVendors] = useState([]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setIsAdmin(localStorage.getItem('isAdmin') === 'true');\r\n    fetchVendors();\r\n  }, []);\r\n\r\n  const fetchVendors = async () => {\r\n    try {\r\n      const response = await axios.get('/general/vendors');\r\n      setVendors(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching vendors:', error);\r\n    }\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    setEditedComponent(props.componentDetails);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setIsEditing(false);\r\n    setIsChanged(false);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    setShowChanges(true);\r\n  };\r\n\r\n  const confirmSave = () => {\r\n    console.log('Saving changes:', editedComponent);\r\n    setIsEditing(false);\r\n    setIsChanged(false);\r\n    setShowChanges(false);\r\n \r\n    handleClose();\r\n  };\r\n\r\n  const renderComparisonField = (label, oldValue, newValue, key) => (\r\n    \r\n    <React.Fragment key={key}>\r\n      <Grid item xs={4}>\r\n        <Typography variant=\"subtitle2\" color=\"text.secondary\">{label}</Typography>\r\n      </Grid>\r\n      <Grid item xs={3}>\r\n        <Typography variant=\"body2\">{oldValue}</Typography>\r\n      </Grid>\r\n      <Grid item xs={1}>\r\n        <FaArrowRight />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Typography variant=\"body2\" color=\"primary\" textAlign={'center'}>{newValue}</Typography>\r\n      </Grid>\r\n    </React.Fragment>\r\n   \r\n  );\r\n\r\n  const handleInputChange = (key, value) => {\r\n    setEditedComponent(prev => {\r\n      const updated = {\r\n        ...prev,\r\n        specifications: {\r\n          ...prev.specifications,\r\n        }\r\n      };\r\n  \r\n      // Ensure the new value is of the same type as the original\r\n      const originalValue = props.componentDetails.specifications[key];\r\n      let typedValue = value;\r\n  \r\n      if (typeof originalValue === 'number' && !isNaN(Number(value))) {\r\n        typedValue = Number(value);\r\n      } else if (typeof originalValue === 'boolean') {\r\n        typedValue = value === 'true' || value === true;\r\n      }\r\n      \r\n  \r\n      updated.specifications[key] = typedValue;\r\n  \r\n      // Special handling for vendor\r\n      if (key === 'vendor') {\r\n        const [vendorID, vendorName] = value.split('(');\r\n        updated.specifications.vendorID = {\r\n          vendorID: vendorID.trim(),\r\n          vendorName: vendorName.replace(')', '').trim()\r\n        };\r\n      }\r\n  \r\n      const hasChanged = isObjectChanged(updated, props.componentDetails);\r\n      setIsChanged(hasChanged);\r\n      \r\n      // DEBUG\r\n      // console.log(\"Result of is changed\", hasChanged);\r\n      // console.log(\"Updated\", updated);\r\n      // console.log(\"Prev\", props.componentDetails);\r\n  \r\n      return updated;\r\n    });\r\n  };\r\n  \r\n  // Helper function to deep compare objects\r\n  const isObjectChanged = (obj1, obj2) => {\r\n    const keys1 = Object.keys(obj1);\r\n    const keys2 = Object.keys(obj2);\r\n  \r\n    if (keys1.length !== keys2.length) {\r\n      return true;\r\n    }\r\n  \r\n    for (const key of keys1) {\r\n      const val1 = obj1[key];\r\n      const val2 = obj2[key];\r\n      const areObjects = isObject(val1) && isObject(val2);\r\n  \r\n      if (\r\n        (areObjects && isObjectChanged(val1, val2)) ||\r\n        (!areObjects && val1 !== val2)\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n  \r\n    return false;\r\n  };\r\n  \r\n  const isObject = (object) => {\r\n    return object != null && typeof object === 'object';\r\n  };\r\n\r\n \r\n\r\n  let component = isEditing ? editedComponent : props.componentDetails;\r\n\r\n\r\n  return (\r\n    props.label ?\r\n      <>\r\n        <Chip\r\n          label={props.label}\r\n          onClick={handleClickOpen}\r\n          sx={{ backgroundColor: props.color, color: 'white', fontFamily: 'Montserrat', zIndex: 10, }}\r\n        />\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"specifications-dialog-title\"\r\n          maxWidth=\"sm\"\r\n          fullWidth\r\n        >\r\n          <DialogTitle id=\"specifications-dialog-title\" sx={{ bgcolor: props.color, color: 'white' }}>\r\n            <Typography variant=\"h6\">{props.label}</Typography>\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            {showChanges ? (\r\n              <Grid container spacing={3}>\r\n                {[\r\n                  { label: \"Service Tag / SN\", oldValue: props.componentDetails.specifications.serialNo, newValue: editedComponent.specifications.serialNo, key: \"serialNo\" },\r\n                  { label: \"Make / Model\", oldValue: props.componentDetails.specifications.makeModel, newValue: editedComponent.specifications.makeModel, key: \"makeModel\" },\r\n                  ...(props.componentDetails.type === 1 ? [\r\n                    { label: \"RAM (GB)\", oldValue: props.componentDetails.specifications.ram, newValue: editedComponent.specifications.ram, key: \"ram\" },\r\n                    { label: \"HDD (GB)\", oldValue: props.componentDetails.specifications.hdd, newValue: editedComponent.specifications.hdd, key: \"hdd\" },\r\n                    { label: \"Processor\", oldValue: props.componentDetails.specifications.processor, newValue: editedComponent.specifications.processor, key: \"processor\" },\r\n                  ] : []),\r\n                  ...(props.componentDetails.type === 3 ? [\r\n                    { label: \"No. of ports\", oldValue: props.componentDetails.specifications.ports, newValue: editedComponent.specifications.ports, key: \"ports\" },\r\n                  ] : []),\r\n                  ...(props.componentDetails.type === 4 ? [\r\n                    { label: \"No. of drives\", oldValue: props.componentDetails.specifications.drives, newValue: editedComponent.specifications.drives, key: \"drives\" },\r\n                    { label: \"No. of slots\", oldValue: props.componentDetails.specifications.slots, newValue: editedComponent.specifications.slots, key: \"slots\" },\r\n                  ] : []),\r\n                  {\r\n                    label: \"Vendor\",\r\n                    oldValue: `${props.componentDetails.specifications?.vendorID.vendorID} (${props.componentDetails.specifications?.vendorID.vendorName})`,\r\n                    newValue: `${editedComponent.specifications?.vendorID.vendorID} (${editedComponent.specifications?.vendorID.vendorName})`,\r\n                    key: \"vendor\"\r\n                  },\r\n                ].map((item) => {\r\n                  return ( item.oldValue!==item.newValue && renderComparisonField(item.label, item.oldValue, item.newValue, item.key));\r\n                  \r\n                }\r\n                )}\r\n              </Grid>\r\n            ) : (\r\n              \r\n              <Grid container spacing={3}>\r\n                {[\r\n                  { label: \"Service Tag / SN\", value: component.specifications.serialNo, key: \"serialNo\" },\r\n                  { label: \"Make / Model\", value: component.specifications.makeModel, key: \"makeModel\" },\r\n                  ...(component.type === 1 ? [\r\n                    { label: \"RAM (GB)\", value: component.specifications.ram, key: \"ram\" },\r\n                    { label: \"HDD (GB)\", value: component.specifications.hdd, key: \"hdd\" },\r\n                    { label: \"Processor\", value: component.specifications.processor, key: \"processor\" },\r\n                  ] : []),\r\n                  ...(component.type === 3 ? [\r\n                    { label: \"No. of ports\", value: component.specifications.ports, key: \"ports\" },\r\n                  ] : []),\r\n                  ...(component.type === 4 ? [\r\n                    { label: \"No. of drives\", value: component.specifications.drives, key: \"drives\" },\r\n                    { label: \"No. of slots\", value: component.specifications.slots, key: \"slots\" },\r\n                  ] : []),\r\n                  { label: \"Vendor\", value: `${component.specifications?.vendorID.vendorID} (${component.specifications?.vendorID.vendorName})`, key: \"vendor\" },\r\n                ].map((item) => (\r\n                  <React.Fragment key={item.key}>\r\n                    <Grid item xs={5}>\r\n                      <Typography variant=\"subtitle2\" color=\"text.secondary\">{item.label}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={7}>\r\n                      {isEditing ? (\r\n                        <TextField\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          value={item.value}\r\n                          onChange={(e) => handleInputChange(item.key, e.target.value)}\r\n                        />\r\n                      ) : (\r\n                        <Typography variant=\"body2\">{item.value}</Typography>\r\n                      )}\r\n                    </Grid>\r\n                  </React.Fragment>\r\n                ))}\r\n              </Grid>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions sx={{ justifyContent: 'flex-end', p: 2 }}>\r\n                    {isAdmin && !isEditing && !showChanges && (\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={handleEdit}>Edit</Button>\r\n                    )}\r\n                    {isAdmin && isEditing && isChanged && !showChanges && (\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>Save</Button>\r\n                    )}\r\n                    {showChanges && (\r\n                        <>\r\n                            <Button variant=\"outlined\" color=\"secondary\" onClick={() => setShowChanges(false)}>Back</Button>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={confirmSave}>Confirm</Button>\r\n                        </>\r\n                    )}\r\n                    {!showChanges && (\r\n                        <Button variant=\"outlined\" color=\"secondary\" onClick={handleClose}>Close</Button>\r\n                    )}\r\n                </DialogActions>\r\n        </Dialog>\r\n      </>\r\n      : <></>\r\n  )\r\n}\r\n\r\nexport default Badge"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}