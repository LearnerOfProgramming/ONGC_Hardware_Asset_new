{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91981\\\\Nigel\\\\Internship\\\\ONGC\\\\ONGC_REACT_RACK\\\\myapp\\\\src\\\\components\\\\home_components\\\\GnG.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Table from '../reusable/Table';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GnG = () => {\n  _s();\n  const [normalizedRacks, setNormalizedRacks] = useState({});\n\n  // Updated color mapping based on 'type' field\n  const colorMapping = {\n    1: \"rgba(255, 0, 0, 0.6)\",\n    // Assuming type 1 is for servers\n    2: \"rgba(0, 0, 255, 0.6)\",\n    // Assuming type 2 is for tape drives\n    3: \"rgba(0, 128, 0, 0.6)\",\n    // Assuming type 3 is for network devices\n    4: \"rgba(255, 165, 0, 0.6)\" // Assuming type 4 is for storage devices\n    // Add more mappings as needed\n  };\n  const getItemType = item => {\n    return colorMapping[item.type] || 'rgba(200, 200, 200, 0.6)'; // Default gray color\n  };\n\n  // Function to create an array of component names with repetitions\n  const expandComponents = components => {\n    return components.reduce((acc, item) => {\n      const repeatedName = Array(item.size).fill(item.name);\n      return acc.concat(repeatedName);\n    }, []);\n  };\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await axios.get('/general/data-centers/1/components');\n        const data = response.data;\n        console.log(\"Raw data:\", data);\n\n        // Process the data into the required structure\n        const processedData = Object.entries(data).reduce((acc, [rackName, components]) => {\n          acc[rackName] = components.map(component => ({\n            ...component,\n            displayName: component.name,\n            color: getItemType(component)\n          }));\n          return acc;\n        }, {});\n        setNormalizedRacks(processedData);\n      } catch (error) {\n        console.error(\"Error fetching components:\", error);\n        // Handle errors appropriately\n      }\n    }\n    fetchData();\n  }, []);\n  if (Object.keys(normalizedRacks).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex mx-2 border-r border-black\",\n    children: Object.entries(normalizedRacks).map(([rackName, components]) => {\n      const expandedNames = expandComponents(components);\n      return /*#__PURE__*/_jsxDEV(Table, {\n        rack: components,\n        name: rackName,\n        expandedNames: expandedNames\n      }, rackName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(GnG, \"GNlhK6msdrZCFfe58dw2ryaLJyE=\");\n_c = GnG;\nexport default GnG;\nvar _c;\n$RefreshReg$(_c, \"GnG\");","map":{"version":3,"names":["React","useState","useEffect","Table","axios","jsxDEV","_jsxDEV","GnG","_s","normalizedRacks","setNormalizedRacks","colorMapping","getItemType","item","type","expandComponents","components","reduce","acc","repeatedName","Array","size","fill","name","concat","fetchData","response","get","data","console","log","processedData","Object","entries","rackName","map","component","displayName","color","error","keys","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","expandedNames","rack","_c","$RefreshReg$"],"sources":["C:/Users/91981/Nigel/Internship/ONGC/ONGC_REACT_RACK/myapp/src/components/home_components/GnG.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Table from '../reusable/Table';\r\nimport axios from \"axios\";\r\n\r\nconst GnG = () => {\r\n  const [normalizedRacks, setNormalizedRacks] = useState({});\r\n\r\n  // Updated color mapping based on 'type' field\r\n  const colorMapping = {\r\n    1: \"rgba(255, 0, 0, 0.6)\", // Assuming type 1 is for servers\r\n    2: \"rgba(0, 0, 255, 0.6)\", // Assuming type 2 is for tape drives\r\n    3: \"rgba(0, 128, 0, 0.6)\", // Assuming type 3 is for network devices\r\n    4: \"rgba(255, 165, 0, 0.6)\", // Assuming type 4 is for storage devices\r\n    // Add more mappings as needed\r\n  };\r\n\r\n  const getItemType = (item) => {\r\n    return colorMapping[item.type] || 'rgba(200, 200, 200, 0.6)'; // Default gray color\r\n  };\r\n\r\n  // Function to create an array of component names with repetitions\r\n  const expandComponents = (components) => {\r\n    return components.reduce((acc, item) => {\r\n      const repeatedName = Array(item.size).fill(item.name);\r\n      return acc.concat(repeatedName);\r\n    }, []);\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await axios.get('/general/data-centers/1/components');\r\n        const data = response.data;\r\n        console.log(\"Raw data:\", data);\r\n\r\n        // Process the data into the required structure\r\n        const processedData = Object.entries(data).reduce((acc, [rackName, components]) => {\r\n          acc[rackName] = components.map((component) => ({\r\n            ...component,\r\n            displayName: component.name,\r\n            color: getItemType(component),\r\n          }));\r\n          return acc;\r\n        }, {});\r\n\r\n        setNormalizedRacks(processedData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching components:\", error);\r\n        // Handle errors appropriately\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (Object.keys(normalizedRacks).length === 0) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className='flex mx-2 border-r border-black'>\r\n      {Object.entries(normalizedRacks).map(([rackName, components]) => {\r\n        const expandedNames = expandComponents(components);\r\n        return (\r\n          <Table key={rackName} rack={components} name={rackName} expandedNames={expandedNames} />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GnG;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}