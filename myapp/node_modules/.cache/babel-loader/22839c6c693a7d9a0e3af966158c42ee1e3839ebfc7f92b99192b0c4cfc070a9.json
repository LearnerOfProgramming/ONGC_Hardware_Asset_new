{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91981\\\\Nigel\\\\Internship\\\\ONGC\\\\ONGC_REACT_RACK\\\\myapp\\\\src\\\\components\\\\admin_components\\\\GnG.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { TOTAL_SLOTS } from '../reusable/Table';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GnG_Admin = ({\n  dataCenter\n}) => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [components, setComponents] = useState({});\n  const [stats, setStats] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [newComponent, setNewComponent] = useState({\n    type: '',\n    name: '',\n    startSlot: '',\n    rack: '',\n    size: 1,\n    specifications: {}\n  });\n  const updateComponents = data => {\n    setComponents(c => ({\n      ...c,\n      ...data\n    }));\n  };\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const componentTypes = {\n    1: 'server',\n    2: 'storage',\n    3: 'switch',\n    4: 'tape drive',\n    5: 'others'\n  };\n  const rackTypes = ['Server', 'Network1', 'Network2', 'Storage', 'Peripheral'];\n  const vendorList = {\n    100001: 'Dell',\n    100002: 'Cisco',\n    100004: 'NeoSeries'\n  };\n  useEffect(() => {\n    fetchComponents();\n    switch (dataCenter) {\n      case 1:\n        setName('G&G Data Center');\n        break;\n      case 2:\n        setName('VRC');\n        break;\n      case 3:\n        setName('DR');\n        break;\n      case 4:\n        setName('SPIC');\n        break;\n      default:\n        setName('Unknown Data Center');\n        break;\n    }\n  }, [dataCenter]);\n  const fetchComponents = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`/general/data-centers/${dataCenter}/components`);\n      updateComponents(response.data);\n      calculateStats(response.data);\n      setLoading(false);\n    } catch (err) {\n      setError('Error fetching components');\n      setLoading(false);\n    }\n  };\n  const calculateStats = data => {\n    const stats = {\n      totalComponents: 0,\n      componentsByType: {},\n      componentsByRack: {}\n    };\n    Object.values(data).forEach(rackComponents => {\n      rackComponents.forEach(component => {\n        stats.totalComponents++;\n        stats.componentsByType[component.type] = (stats.componentsByType[component.type] || 0) + 1;\n        stats.componentsByRack[component.rackId.name] = (stats.componentsByRack[component.rackId.name] || 0) + 1;\n      });\n    });\n    setStats(stats);\n  };\n  useEffect(() => {\n    if (newComponent.size && newComponent.rack) {\n      calculateAvailableSlots(newComponent.rack, components);\n    }\n  }, [newComponent.size, newComponent.rack, components]);\n  const calculateAvailableSlots = (rack, data) => {\n    const occupiedSlots = new Set();\n\n    // Check if the rack exists in the data object\n    if (data[rack]) {\n      // Iterate through the components in the specified rack\n      data[rack].forEach(component => {\n        // Adjust the occupied slots based on slotsOccupied and startSlot\n        for (let i = component.startSlot; i < component.startSlot + component.size; i++) {\n          occupiedSlots.add(i);\n        }\n      });\n    }\n\n    // Calculate available slots\n    const availableSlots = Array.from({\n      length: TOTAL_SLOTS\n    }, (_, i) => i + 1).filter(slot => {\n      // Check if the slot is available for the desired slotsOccupied\n      for (let j = 0; j < newComponent.size; j++) {\n        if (occupiedSlots.has(slot + j)) {\n          return false; // Slot is occupied, so exclude it\n        }\n      }\n      return true; // Slot is available\n    });\n    setAvailableSlots(availableSlots);\n    console.log(availableSlots);\n  };\n  const handleDelete = async componentId => {\n    if (window.confirm('Are you sure you want to delete this component?')) {\n      try {\n        await axios.delete(`/general/components/${componentId}`);\n        fetchComponents(); // Refresh the list\n      } catch (err) {\n        setError('Error deleting component');\n      }\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewComponent(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    if (name === 'rack') {\n      calculateAvailableSlots(value, components);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('/general/addcomponent', newComponent);\n      alert('Successfull added!');\n      setIsDialogOpen(false);\n      setNewComponent({\n        type: '',\n        name: '',\n        startSlot: '',\n        rack: '',\n        size: 1,\n        specifications: {}\n      });\n      fetchComponents(); // Refresh the list\n    } catch (err) {\n      setError('Error adding component');\n      console.log(\"Error\");\n    }\n  };\n  const handleExtend = async (componentId, currentSlots) => {\n    const newSlots = prompt(`Enter new number of slots (current: ${currentSlots}):`, currentSlots);\n    if (newSlots && !isNaN(newSlots)) {\n      try {\n        await axios.put(`/general/components/${componentId}`, {\n          size: parseInt(newSlots)\n        });\n        fetchComponents(); // Refresh the list\n      } catch (err) {\n        setError('Error extending component');\n      }\n    }\n  };\n  const renderComponentFields = () => {\n    switch (newComponent.type) {\n      case '1':\n        // Server\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"serviceTag\",\n            value: newComponent.serviceTag || '',\n            onChange: handleInputChange,\n            placeholder: \"Service Tag / SN\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"makeModel\",\n            value: newComponent.makeModel || '',\n            onChange: handleInputChange,\n            placeholder: \"Make / Model\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"ram\",\n            value: newComponent.ram || '',\n            onChange: handleInputChange,\n            placeholder: \"RAM (GB)\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"hdd\",\n            value: newComponent.hdd || '',\n            onChange: handleInputChange,\n            placeholder: \"HDD (GB)\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"processor\",\n            value: newComponent.processor || '',\n            onChange: handleInputChange,\n            placeholder: \"Processor\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"vendor\",\n            value: newComponent.vendor || '',\n            onChange: handleInputChange,\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Vendor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this), Object.entries(vendorList).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: id,\n              children: name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true);\n      case '2':\n        // Storage\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"serviceTag\",\n            value: newComponent.serviceTag || '',\n            onChange: handleInputChange,\n            placeholder: \"Service Tag / SN\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"makeModel\",\n            value: newComponent.makeModel || '',\n            onChange: handleInputChange,\n            placeholder: \"Make / Model\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"vendor\",\n            value: newComponent.vendor || '',\n            onChange: handleInputChange,\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Vendor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 29\n            }, this), Object.entries(vendorList).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: id,\n              children: name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true);\n      case '3':\n        // Switch\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"serviceTag\",\n            value: newComponent.serviceTag || '',\n            onChange: handleInputChange,\n            placeholder: \"Service Tag / SN\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"makeModel\",\n            value: newComponent.makeModel || '',\n            onChange: handleInputChange,\n            placeholder: \"Make / Model\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"ports\",\n            value: newComponent.ports || '',\n            onChange: handleInputChange,\n            placeholder: \"No. of ports\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"vendor\",\n            value: newComponent.vendor || '',\n            onChange: handleInputChange,\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Vendor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 29\n            }, this), Object.entries(vendorList).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: id,\n              children: name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true);\n      case '4':\n        // Tape Drive\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"serviceTag\",\n            value: newComponent.serviceTag || '',\n            onChange: handleInputChange,\n            placeholder: \"Service Tag / SN\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"makeModel\",\n            value: newComponent.makeModel || '',\n            onChange: handleInputChange,\n            placeholder: \"Make / Model\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"drives\",\n            value: newComponent.drives || '',\n            onChange: handleInputChange,\n            placeholder: \"No. of drives\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"slots\",\n            value: newComponent.slots || '',\n            onChange: handleInputChange,\n            placeholder: \"No. of slots\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"vendor\",\n            value: newComponent.vendor || '',\n            onChange: handleInputChange,\n            className: \"w-full p-2 mb-4 border rounded\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Vendor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 29\n            }, this), Object.entries(vendorList).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: id,\n              children: name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true);\n      default:\n        return null;\n    }\n  };\n  const renderAvailableSlots = () => {\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"startSlot\",\n      value: newComponent.startSlot,\n      onChange: handleInputChange,\n      className: \"w-full p-2 mb-4 border rounded\",\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Start Slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }, this), availableSlots.map(slot => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: slot,\n        children: slot\n      }, slot, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 13\n    }, this);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 399,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 400,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: [\"Data Center Admin - \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow-md rounded-lg p-6 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-10 text-center\",\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-10/12\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold mb-2\",\n              children: \"Components by Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"divide-y divide-gray-200\",\n              children: Object.entries(stats.componentsByType).map(([type, count]) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"flex justify-between py-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"capitalize\",\n                  children: [componentTypes[type], \"s\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-semibold\",\n                  children: count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 41\n                }, this)]\n              }, type, true, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-10/12\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold mb-2\",\n              children: \"Components by Rack\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"divide-y divide-gray-200\",\n              children: Object.entries(stats.componentsByRack).map(([rack, count]) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"flex justify-between py-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: rack\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-semibold\",\n                  children: count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 41\n                }, this)]\n              }, rack, true, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsDialogOpen(true),\n      className: \"bg-blue-500 text-white px-4 py-2 rounded mb-4\",\n      children: \"Add New Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 13\n    }, this), isDialogOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full mt-24\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" relative top-32 mx-auto p-5 border w-10/12 shadow-lg rounded-md bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Add New Component\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" grid grid-cols-2 gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"type\",\n              value: newComponent.type,\n              onChange: handleInputChange,\n              className: \"w-full p-2 mb-4 border rounded\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Component Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 37\n              }, this), Object.entries(componentTypes).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: key,\n                children: value\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 33\n            }, this), renderComponentFields(), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: newComponent.name,\n              onChange: handleInputChange,\n              placeholder: \"Component Name\",\n              className: \"w-full p-2 mb-4 border rounded\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"rack\",\n              value: newComponent.rack,\n              onChange: handleInputChange,\n              className: \"w-full p-2 mb-4 border rounded\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Rack\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 37\n              }, this), rackTypes.map((rack, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: rack,\n                children: rack\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"size\",\n              value: newComponent.size,\n              onChange: handleInputChange,\n              className: \"w-full p-2 mb-4 border rounded\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Slots Occupied\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 37\n              }, this), Array.from({\n                length: 40 - newComponent.startSlot + 1\n              }, (_, i) => i + 1).map(slot => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: slot,\n                children: slot\n              }, slot, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 33\n            }, this), renderAvailableSlots()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setIsDialogOpen(false),\n              className: \"bg-gray-300 text-black px-4 py-2 rounded mr-2\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n              children: \"Add Component\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Component List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 17\n      }, this), Object.entries(components).map(([rackName, rackComponents]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold\",\n          children: rackName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: rackComponents.map(component => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"flex justify-between items-center mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [component.name, \" (Type: \", componentTypes[component.type] || component.type, \", Slot: \", component.startSlot, \", Slots Occupied: \", component.size, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleExtend(component._id, component.size),\n                className: \"bg-yellow-500 text-white px-2 py-1 rounded mr-2\",\n                children: \"Extend/Retract\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(component._id),\n                className: \"bg-red-500 text-white px-2 py-1 rounded\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 37\n            }, this)]\n          }, component._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 25\n        }, this)]\n      }, rackName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 403,\n    columnNumber: 9\n  }, this);\n};\n_s(GnG_Admin, \"y2yYvOmQsow4w+GQTi4TyNHcFdQ=\");\n_c = GnG_Admin;\nexport default GnG_Admin;\nvar _c;\n$RefreshReg$(_c, \"GnG_Admin\");","map":{"version":3,"names":["React","useState","useEffect","axios","TOTAL_SLOTS","jsxDEV","_jsxDEV","Fragment","_Fragment","GnG_Admin","dataCenter","_s","name","setName","components","setComponents","stats","setStats","loading","setLoading","error","setError","isDialogOpen","setIsDialogOpen","newComponent","setNewComponent","type","startSlot","rack","size","specifications","updateComponents","data","c","availableSlots","setAvailableSlots","componentTypes","rackTypes","vendorList","fetchComponents","response","get","calculateStats","err","totalComponents","componentsByType","componentsByRack","Object","values","forEach","rackComponents","component","rackId","calculateAvailableSlots","occupiedSlots","Set","i","add","Array","from","length","_","filter","slot","j","has","console","log","handleDelete","componentId","window","confirm","delete","handleInputChange","e","value","target","prev","handleSubmit","preventDefault","post","alert","handleExtend","currentSlots","newSlots","prompt","isNaN","put","parseInt","renderComponentFields","children","serviceTag","onChange","placeholder","className","required","fileName","_jsxFileName","lineNumber","columnNumber","makeModel","ram","hdd","processor","vendor","entries","map","id","ports","drives","slots","renderAvailableSlots","count","onClick","onSubmit","key","index","rackName","_id","_c","$RefreshReg$"],"sources":["C:/Users/91981/Nigel/Internship/ONGC/ONGC_REACT_RACK/myapp/src/components/admin_components/GnG.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { TOTAL_SLOTS } from '../reusable/Table';\r\n\r\nconst GnG_Admin = ({ dataCenter }) => {\r\n    const [name, setName] = useState(\"\")\r\n    const [components, setComponents] = useState({});\r\n    const [stats, setStats] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n    const [newComponent, setNewComponent] = useState({\r\n        type: '',\r\n        name: '',\r\n        startSlot: '',\r\n        rack: '',\r\n        size: 1,\r\n        specifications: {}\r\n    });\r\n\r\n    const updateComponents = (data) => {\r\n        setComponents(c => ({ ...c, ...data }))\r\n    }\r\n\r\n    const [availableSlots, setAvailableSlots] = useState([]);\r\n\r\n    const componentTypes = {\r\n        1: 'server',\r\n        2: 'storage',\r\n        3: 'switch',\r\n        4: 'tape drive',\r\n        5: 'others'\r\n    };\r\n    const rackTypes = ['Server', 'Network1', 'Network2', 'Storage', 'Peripheral'];\r\n\r\n    const vendorList = {\r\n        100001: 'Dell',\r\n        100002: 'Cisco',\r\n        100004: 'NeoSeries',\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchComponents();\r\n\r\n\r\n        switch (dataCenter) {\r\n            case 1:\r\n                setName('G&G Data Center');\r\n                break;\r\n            case 2:\r\n                setName('VRC');\r\n                break;\r\n            case 3:\r\n                setName('DR');\r\n                break;\r\n            case 4:\r\n                setName('SPIC');\r\n                break;\r\n            default:\r\n                setName('Unknown Data Center');\r\n                break;\r\n        }\r\n\r\n    }, [dataCenter]);\r\n\r\n    const fetchComponents = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await axios.get(`/general/data-centers/${dataCenter}/components`);\r\n\r\n            updateComponents(response.data);\r\n            calculateStats(response.data);\r\n            setLoading(false);\r\n        } catch (err) {\r\n            setError('Error fetching components');\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const calculateStats = (data) => {\r\n        const stats = {\r\n            totalComponents: 0,\r\n            componentsByType: {},\r\n            componentsByRack: {},\r\n        };\r\n\r\n        Object.values(data).forEach(rackComponents => {\r\n            rackComponents.forEach(component => {\r\n                stats.totalComponents++;\r\n                stats.componentsByType[component.type] = (stats.componentsByType[component.type] || 0) + 1;\r\n                stats.componentsByRack[component.rackId.name] = (stats.componentsByRack[component.rackId.name] || 0) + 1;\r\n            });\r\n        });\r\n\r\n        setStats(stats);\r\n    };\r\n    useEffect(() => {\r\n        if (newComponent.size && newComponent.rack) {\r\n            calculateAvailableSlots(newComponent.rack, components);\r\n        }\r\n    }, [newComponent.size, newComponent.rack, components]);\r\n\r\n    const calculateAvailableSlots = (rack, data) => {\r\n        const occupiedSlots = new Set();\r\n\r\n        // Check if the rack exists in the data object\r\n        if (data[rack]) {\r\n            // Iterate through the components in the specified rack\r\n            data[rack].forEach(component => {\r\n                // Adjust the occupied slots based on slotsOccupied and startSlot\r\n                for (let i = component.startSlot; i < component.startSlot + component.size; i++) {\r\n                    occupiedSlots.add(i);\r\n                }\r\n            });\r\n        }\r\n\r\n        // Calculate available slots\r\n        const availableSlots = Array.from({ length: TOTAL_SLOTS }, (_, i) => i + 1).filter(slot => {\r\n            // Check if the slot is available for the desired slotsOccupied\r\n            for (let j = 0; j < newComponent.size; j++) {\r\n                if (occupiedSlots.has(slot + j)) {\r\n                    return false; // Slot is occupied, so exclude it\r\n                }\r\n            }\r\n            return true; // Slot is available\r\n        });\r\n\r\n        setAvailableSlots(availableSlots);\r\n        console.log(availableSlots)\r\n    };\r\n\r\n\r\n    const handleDelete = async (componentId) => {\r\n        if (window.confirm('Are you sure you want to delete this component?')) {\r\n            try {\r\n                await axios.delete(`/general/components/${componentId}`);\r\n                fetchComponents(); // Refresh the list\r\n            } catch (err) {\r\n                setError('Error deleting component');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewComponent(prev => ({ ...prev, [name]: value }));\r\n        if (name === 'rack') {\r\n            calculateAvailableSlots(value, components);\r\n        }\r\n    };\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post('/general/addcomponent', newComponent);\r\n            alert('Successfull added!')\r\n            setIsDialogOpen(false);\r\n            setNewComponent({ type: '', name: '', startSlot: '', rack: '', size: 1,specifications:{} });\r\n            fetchComponents(); // Refresh the list\r\n        } catch (err) {\r\n            setError('Error adding component');\r\n            console.log(\"Error\")\r\n        }\r\n    };\r\n\r\n    const handleExtend = async (componentId, currentSlots) => {\r\n        const newSlots = prompt(`Enter new number of slots (current: ${currentSlots}):`, currentSlots);\r\n        if (newSlots && !isNaN(newSlots)) {\r\n            try {\r\n                await axios.put(`/general/components/${componentId}`, { size: parseInt(newSlots) });\r\n                fetchComponents(); // Refresh the list\r\n            } catch (err) {\r\n                setError('Error extending component');\r\n            }\r\n        }\r\n    };\r\n\r\n    const renderComponentFields = () => {\r\n        switch (newComponent.type) {\r\n            case '1': // Server\r\n                return (\r\n                    <>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"serviceTag\"\r\n                            value={newComponent.serviceTag || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Service Tag / SN\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"makeModel\"\r\n                            value={newComponent.makeModel || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Make / Model\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"ram\"\r\n                            value={newComponent.ram || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"RAM (GB)\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"hdd\"\r\n                            value={newComponent.hdd || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"HDD (GB)\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"processor\"\r\n                            value={newComponent.processor || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Processor\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <select\r\n                            name=\"vendor\"\r\n                            value={newComponent.vendor || ''}\r\n                            onChange={handleInputChange}\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select Vendor</option>\r\n                            {Object.entries(vendorList).map(([id, name]) => (\r\n                                <option key={id} value={id}>{name}</option>\r\n                            ))}\r\n                        </select>\r\n                    </>\r\n                );\r\n            case '2': // Storage\r\n                return (\r\n                    <>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"serviceTag\"\r\n                            value={newComponent.serviceTag || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Service Tag / SN\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"makeModel\"\r\n                            value={newComponent.makeModel || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Make / Model\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <select\r\n                            name=\"vendor\"\r\n                            value={newComponent.vendor || ''}\r\n                            onChange={handleInputChange}\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select Vendor</option>\r\n                            {Object.entries(vendorList).map(([id, name]) => (\r\n                                <option key={id} value={id}>{name}</option>\r\n                            ))}\r\n                        </select>\r\n                    </>\r\n                );\r\n            case '3': // Switch\r\n                return (\r\n                    <>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"serviceTag\"\r\n                            value={newComponent.serviceTag || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Service Tag / SN\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"makeModel\"\r\n                            value={newComponent.makeModel || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Make / Model\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"ports\"\r\n                            value={newComponent.ports || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"No. of ports\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <select\r\n                            name=\"vendor\"\r\n                            value={newComponent.vendor || ''}\r\n                            onChange={handleInputChange}\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select Vendor</option>\r\n                            {Object.entries(vendorList).map(([id, name]) => (\r\n                                <option key={id} value={id}>{name}</option>\r\n                            ))}\r\n                        </select>\r\n                    </>\r\n                );\r\n            case '4': // Tape Drive\r\n                return (\r\n                    <>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"serviceTag\"\r\n                            value={newComponent.serviceTag || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Service Tag / SN\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"makeModel\"\r\n                            value={newComponent.makeModel || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Make / Model\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"drives\"\r\n                            value={newComponent.drives || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"No. of drives\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"slots\"\r\n                            value={newComponent.slots || ''}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"No. of slots\"\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        />\r\n                        <select\r\n                            name=\"vendor\"\r\n                            value={newComponent.vendor || ''}\r\n                            onChange={handleInputChange}\r\n                            className=\"w-full p-2 mb-4 border rounded\"\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select Vendor</option>\r\n                            {Object.entries(vendorList).map(([id, name]) => (\r\n                                <option key={id} value={id}>{name}</option>\r\n                            ))}\r\n                        </select>\r\n                    </>\r\n                );\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    const renderAvailableSlots = () => {\r\n        return (\r\n            <select\r\n                name=\"startSlot\"\r\n                value={newComponent.startSlot}\r\n                onChange={handleInputChange}\r\n                className=\"w-full p-2 mb-4 border rounded\"\r\n                required\r\n            >\r\n                <option value=\"\">Select Start Slot</option>\r\n                {availableSlots.map(slot => (\r\n                    <option key={slot} value={slot}>\r\n                        {slot}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        );\r\n    };\r\n\r\n    if (loading) return <div>Loading...</div>;\r\n    if (error) return <div>{error}</div>;\r\n\r\n    return (\r\n        <div className=\"container mx-auto p-4\">\r\n            <h1 className=\"text-2xl font-bold mb-4\">Data Center Admin - {name}</h1>\r\n\r\n            \r\n\r\n            \r\n           \r\n\r\n            <div className=\"bg-white shadow-md rounded-lg p-6 mb-8\">\r\n                <h2 className=\"text-2xl font-bold mb-10 text-center\">Statistics</h2>\r\n                <div className=\"grid grid-cols-2 gap-6\">\r\n                    <div className='w-full flex justify-center'>\r\n                        <div className='w-10/12'>\r\n\r\n                            <h3 className=\"text-lg font-semibold mb-2\">Components by Type</h3>\r\n                            <ul className=\"divide-y divide-gray-200\">\r\n                                {Object.entries(stats.componentsByType).map(([type, count]) => (\r\n                                    <li key={type} className=\"flex justify-between py-2\">\r\n                                        <span className=\"capitalize\">{componentTypes[type]}s</span>\r\n                                        <span className=\"font-semibold\">{count}</span>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='w-full flex justify-center'>\r\n                        <div className='w-10/12'>\r\n\r\n                            <h3 className=\"text-lg font-semibold mb-2\">Components by Rack</h3>\r\n                            <ul className=\"divide-y divide-gray-200\">\r\n                                {Object.entries(stats.componentsByRack).map(([rack, count]) => (\r\n                                    <li key={rack} className=\"flex justify-between py-2\">\r\n                                        <span>{rack}</span>\r\n                                        <span className=\"font-semibold\">{count}</span>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <button\r\n                onClick={() => setIsDialogOpen(true)}\r\n                className=\"bg-blue-500 text-white px-4 py-2 rounded mb-4\"\r\n            >\r\n                Add New Component\r\n            </button>\r\n            {isDialogOpen && (\r\n                <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full mt-24\">\r\n                    <div className=\" relative top-32 mx-auto p-5 border w-10/12 shadow-lg rounded-md bg-white\">\r\n                        <h3 className=\"text-lg font-semibold mb-4\">Add New Component</h3>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=' grid grid-cols-2 gap-3'>\r\n\r\n                                <select\r\n                                    name=\"type\"\r\n                                    value={newComponent.type}\r\n                                    onChange={handleInputChange}\r\n                                    className=\"w-full p-2 mb-4 border rounded\"\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">Select Component Type</option>\r\n                                    {Object.entries(componentTypes).map(([key, value]) => (\r\n                                        <option key={key} value={key}>{value}</option>\r\n                                    ))}\r\n                                </select>\r\n                                {renderComponentFields()}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    value={newComponent.name}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Component Name\"\r\n                                    className=\"w-full p-2 mb-4 border rounded\"\r\n                                    required\r\n                                />\r\n                                <select\r\n                                    name=\"rack\"\r\n                                    value={newComponent.rack}\r\n                                    onChange={handleInputChange}\r\n                                    className=\"w-full p-2 mb-4 border rounded\"\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">Select Rack</option>\r\n                                    {rackTypes.map((rack, index) => (\r\n                                        <option key={index} value={rack}>{rack}</option>\r\n                                    ))}\r\n                                </select>\r\n                                <select\r\n                                    name=\"size\"\r\n                                    value={newComponent.size}\r\n                                    onChange={handleInputChange}\r\n                                    className=\"w-full p-2 mb-4 border rounded\"\r\n                                    required\r\n                                >\r\n                                    <option value=\"\">Select Slots Occupied</option>\r\n                                    {Array.from({ length: 40 - newComponent.startSlot + 1 }, (_, i) => i + 1).map((slot) => (\r\n                                        <option key={slot} value={slot}>{slot}</option>\r\n                                    ))}\r\n                                </select>\r\n                                {renderAvailableSlots()}\r\n                                \r\n                            </div>\r\n                            <div className=\"flex justify-end\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={() => setIsDialogOpen(false)}\r\n                                    className=\"bg-gray-300 text-black px-4 py-2 rounded mr-2\"\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n                                >\r\n                                    Add Component\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            <div>\r\n                <h2 className=\"text-xl font-semibold mb-2\">Component List</h2>\r\n                {Object.entries(components).map(([rackName, rackComponents]) => (\r\n                    <div key={rackName} className=\"mb-4\">\r\n                        <h3 className=\"text-lg font-semibold\">{rackName}</h3>\r\n                        <ul>\r\n                            {rackComponents.map(component => (\r\n                                <li key={component._id} className=\"flex justify-between items-center mb-2\">\r\n                                    <span>\r\n                                        {component.name} (Type: {componentTypes[component.type] || component.type},\r\n                                        Slot: {component.startSlot}, Slots Occupied: {component.size})\r\n                                    </span>\r\n                                    <div>\r\n                                        <button\r\n                                            onClick={() => handleExtend(component._id, component.size)}\r\n                                            className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\"\r\n                                        >\r\n                                            Extend/Retract\r\n                                        </button>\r\n                                        <button\r\n                                            onClick={() => handleDelete(component._id)}\r\n                                            className=\"bg-red-500 text-white px-2 py-1 rounded\"\r\n                                        >\r\n                                            Delete\r\n                                        </button>\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GnG_Admin;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC;IAC7CyB,IAAI,EAAE,EAAE;IACRd,IAAI,EAAE,EAAE;IACRe,SAAS,EAAE,EAAE;IACbC,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,CAAC;EACrB,CAAC,CAAC;EAEF,MAAMC,gBAAgB,GAAIC,IAAI,IAAK;IAC/BjB,aAAa,CAACkB,CAAC,KAAK;MAAE,GAAGA,CAAC;MAAE,GAAGD;IAAK,CAAC,CAAC,CAAC;EAC3C,CAAC;EAED,MAAM,CAACE,cAAc,EAAEC,iBAAiB,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMmC,cAAc,GAAG;IACnB,CAAC,EAAE,QAAQ;IACX,CAAC,EAAE,SAAS;IACZ,CAAC,EAAE,QAAQ;IACX,CAAC,EAAE,YAAY;IACf,CAAC,EAAE;EACP,CAAC;EACD,MAAMC,SAAS,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,YAAY,CAAC;EAE7E,MAAMC,UAAU,GAAG;IACf,MAAM,EAAE,MAAM;IACd,MAAM,EAAE,OAAO;IACf,MAAM,EAAE;EACZ,CAAC;EAEDpC,SAAS,CAAC,MAAM;IACZqC,eAAe,CAAC,CAAC;IAGjB,QAAQ7B,UAAU;MACd,KAAK,CAAC;QACFG,OAAO,CAAC,iBAAiB,CAAC;QAC1B;MACJ,KAAK,CAAC;QACFA,OAAO,CAAC,KAAK,CAAC;QACd;MACJ,KAAK,CAAC;QACFA,OAAO,CAAC,IAAI,CAAC;QACb;MACJ,KAAK,CAAC;QACFA,OAAO,CAAC,MAAM,CAAC;QACf;MACJ;QACIA,OAAO,CAAC,qBAAqB,CAAC;QAC9B;IACR;EAEJ,CAAC,EAAE,CAACH,UAAU,CAAC,CAAC;EAEhB,MAAM6B,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACApB,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMqB,QAAQ,GAAG,MAAMrC,KAAK,CAACsC,GAAG,CAAC,yBAAyB/B,UAAU,aAAa,CAAC;MAElFqB,gBAAgB,CAACS,QAAQ,CAACR,IAAI,CAAC;MAC/BU,cAAc,CAACF,QAAQ,CAACR,IAAI,CAAC;MAC7Bb,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOwB,GAAG,EAAE;MACVtB,QAAQ,CAAC,2BAA2B,CAAC;MACrCF,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,MAAMuB,cAAc,GAAIV,IAAI,IAAK;IAC7B,MAAMhB,KAAK,GAAG;MACV4B,eAAe,EAAE,CAAC;MAClBC,gBAAgB,EAAE,CAAC,CAAC;MACpBC,gBAAgB,EAAE,CAAC;IACvB,CAAC;IAEDC,MAAM,CAACC,MAAM,CAAChB,IAAI,CAAC,CAACiB,OAAO,CAACC,cAAc,IAAI;MAC1CA,cAAc,CAACD,OAAO,CAACE,SAAS,IAAI;QAChCnC,KAAK,CAAC4B,eAAe,EAAE;QACvB5B,KAAK,CAAC6B,gBAAgB,CAACM,SAAS,CAACzB,IAAI,CAAC,GAAG,CAACV,KAAK,CAAC6B,gBAAgB,CAACM,SAAS,CAACzB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAC1FV,KAAK,CAAC8B,gBAAgB,CAACK,SAAS,CAACC,MAAM,CAACxC,IAAI,CAAC,GAAG,CAACI,KAAK,CAAC8B,gBAAgB,CAACK,SAAS,CAACC,MAAM,CAACxC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;MAC5G,CAAC,CAAC;IACN,CAAC,CAAC;IAEFK,QAAQ,CAACD,KAAK,CAAC;EACnB,CAAC;EACDd,SAAS,CAAC,MAAM;IACZ,IAAIsB,YAAY,CAACK,IAAI,IAAIL,YAAY,CAACI,IAAI,EAAE;MACxCyB,uBAAuB,CAAC7B,YAAY,CAACI,IAAI,EAAEd,UAAU,CAAC;IAC1D;EACJ,CAAC,EAAE,CAACU,YAAY,CAACK,IAAI,EAAEL,YAAY,CAACI,IAAI,EAAEd,UAAU,CAAC,CAAC;EAEtD,MAAMuC,uBAAuB,GAAGA,CAACzB,IAAI,EAAEI,IAAI,KAAK;IAC5C,MAAMsB,aAAa,GAAG,IAAIC,GAAG,CAAC,CAAC;;IAE/B;IACA,IAAIvB,IAAI,CAACJ,IAAI,CAAC,EAAE;MACZ;MACAI,IAAI,CAACJ,IAAI,CAAC,CAACqB,OAAO,CAACE,SAAS,IAAI;QAC5B;QACA,KAAK,IAAIK,CAAC,GAAGL,SAAS,CAACxB,SAAS,EAAE6B,CAAC,GAAGL,SAAS,CAACxB,SAAS,GAAGwB,SAAS,CAACtB,IAAI,EAAE2B,CAAC,EAAE,EAAE;UAC7EF,aAAa,CAACG,GAAG,CAACD,CAAC,CAAC;QACxB;MACJ,CAAC,CAAC;IACN;;IAEA;IACA,MAAMtB,cAAc,GAAGwB,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAExD;IAAY,CAAC,EAAE,CAACyD,CAAC,EAAEL,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CAACM,MAAM,CAACC,IAAI,IAAI;MACvF;MACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxC,YAAY,CAACK,IAAI,EAAEmC,CAAC,EAAE,EAAE;QACxC,IAAIV,aAAa,CAACW,GAAG,CAACF,IAAI,GAAGC,CAAC,CAAC,EAAE;UAC7B,OAAO,KAAK,CAAC,CAAC;QAClB;MACJ;MACA,OAAO,IAAI,CAAC,CAAC;IACjB,CAAC,CAAC;IAEF7B,iBAAiB,CAACD,cAAc,CAAC;IACjCgC,OAAO,CAACC,GAAG,CAACjC,cAAc,CAAC;EAC/B,CAAC;EAGD,MAAMkC,YAAY,GAAG,MAAOC,WAAW,IAAK;IACxC,IAAIC,MAAM,CAACC,OAAO,CAAC,iDAAiD,CAAC,EAAE;MACnE,IAAI;QACA,MAAMpE,KAAK,CAACqE,MAAM,CAAC,uBAAuBH,WAAW,EAAE,CAAC;QACxD9B,eAAe,CAAC,CAAC,CAAC,CAAC;MACvB,CAAC,CAAC,OAAOI,GAAG,EAAE;QACVtB,QAAQ,CAAC,0BAA0B,CAAC;MACxC;IACJ;EACJ,CAAC;EAED,MAAMoD,iBAAiB,GAAIC,CAAC,IAAK;IAC7B,MAAM;MAAE9D,IAAI;MAAE+D;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCnD,eAAe,CAACoD,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACjE,IAAI,GAAG+D;IAAM,CAAC,CAAC,CAAC;IACrD,IAAI/D,IAAI,KAAK,MAAM,EAAE;MACjByC,uBAAuB,CAACsB,KAAK,EAAE7D,UAAU,CAAC;IAC9C;EACJ,CAAC;EAGD,MAAMgE,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAC9BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAM5E,KAAK,CAAC6E,IAAI,CAAC,uBAAuB,EAAExD,YAAY,CAAC;MACvDyD,KAAK,CAAC,oBAAoB,CAAC;MAC3B1D,eAAe,CAAC,KAAK,CAAC;MACtBE,eAAe,CAAC;QAAEC,IAAI,EAAE,EAAE;QAAEd,IAAI,EAAE,EAAE;QAAEe,SAAS,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,IAAI,EAAE,CAAC;QAACC,cAAc,EAAC,CAAC;MAAE,CAAC,CAAC;MAC3FS,eAAe,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOI,GAAG,EAAE;MACVtB,QAAQ,CAAC,wBAAwB,CAAC;MAClC6C,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACxB;EACJ,CAAC;EAED,MAAMe,YAAY,GAAG,MAAAA,CAAOb,WAAW,EAAEc,YAAY,KAAK;IACtD,MAAMC,QAAQ,GAAGC,MAAM,CAAC,uCAAuCF,YAAY,IAAI,EAAEA,YAAY,CAAC;IAC9F,IAAIC,QAAQ,IAAI,CAACE,KAAK,CAACF,QAAQ,CAAC,EAAE;MAC9B,IAAI;QACA,MAAMjF,KAAK,CAACoF,GAAG,CAAC,uBAAuBlB,WAAW,EAAE,EAAE;UAAExC,IAAI,EAAE2D,QAAQ,CAACJ,QAAQ;QAAE,CAAC,CAAC;QACnF7C,eAAe,CAAC,CAAC,CAAC,CAAC;MACvB,CAAC,CAAC,OAAOI,GAAG,EAAE;QACVtB,QAAQ,CAAC,2BAA2B,CAAC;MACzC;IACJ;EACJ,CAAC;EAED,MAAMoE,qBAAqB,GAAGA,CAAA,KAAM;IAChC,QAAQjE,YAAY,CAACE,IAAI;MACrB,KAAK,GAAG;QAAE;QACN,oBACIpB,OAAA,CAAAE,SAAA;UAAAkF,QAAA,gBACIpF,OAAA;YACIoB,IAAI,EAAC,MAAM;YACXd,IAAI,EAAC,YAAY;YACjB+D,KAAK,EAAEnD,YAAY,CAACmE,UAAU,IAAI,EAAG;YACrCC,QAAQ,EAAEnB,iBAAkB;YAC5BoB,WAAW,EAAC,kBAAkB;YAC9BC,SAAS,EAAC,gCAAgC;YAC1CC,QAAQ;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACF7F,OAAA;YACIoB,IAAI,EAAC,MAAM;YACXd,IAAI,EAAC,WAAW;YAChB+D,KAAK,EAAEnD,YAAY,CAAC4E,SAAS,IAAI,EAAG;YACpCR,QAAQ,EAAEnB,iBAAkB;YAC5BoB,WAAW,EAAC,cAAc;YAC1BC,SAAS,EAAC,gCAAgC;YAC1CC,QAAQ;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACF7F,OAAA;YACIoB,IAAI,EAAC,QAAQ;YACbd,IAAI,EAAC,KAAK;YACV+D,KAAK,EAAEnD,YAAY,CAAC6E,GAAG,IAAI,EAAG;YAC9BT,QAAQ,EAAEnB,iBAAkB;YAC5BoB,WAAW,EAAC,UAAU;YACtBC,SAAS,EAAC,gCAAgC;YAC1CC,QAAQ;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACF7F,OAAA;YACIoB,IAAI,EAAC,QAAQ;YACbd,IAAI,EAAC,KAAK;YACV+D,KAAK,EAAEnD,YAAY,CAAC8E,GAAG,IAAI,EAAG;YAC9BV,QAAQ,EAAEnB,iBAAkB;YAC5BoB,WAAW,EAAC,UAAU;YACtBC,SAAS,EAAC,gCAAgC;YAC1CC,QAAQ;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACF7F,OAAA;YACIoB,IAAI,EAAC,MAAM;YACXd,IAAI,EAAC,WAAW;YAChB+D,KAAK,EAAEnD,YAAY,CAAC+E,SAAS,IAAI,EAAG;YACpCX,QAAQ,EAAEnB,iBAAkB;YAC5BoB,WAAW,EAAC,WAAW;YACvBC,SAAS,EAAC,gCAAgC;YAC1CC,QAAQ;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACF7F,OAAA;YACIM,IAAI,EAAC,QAAQ;YACb+D,KAAK,EAAEnD,YAAY,CAACgF,MAAM,IAAI,EAAG;YACjCZ,QAAQ,EAAEnB,iBAAkB;YAC5BqB,SAAS,EAAC,gCAAgC;YAC1CC,QAAQ;YAAAL,QAAA,gBAERpF,OAAA;cAAQqE,KAAK,EAAC,EAAE;cAAAe,QAAA,EAAC;YAAa;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACtCpD,MAAM,CAAC0D,OAAO,CAACnE,UAAU,CAAC,CAACoE,GAAG,CAAC,CAAC,CAACC,EAAE,EAAE/F,IAAI,CAAC,kBACvCN,OAAA;cAAiBqE,KAAK,EAAEgC,EAAG;cAAAjB,QAAA,EAAE9E;YAAI,GAApB+F,EAAE;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA2B,CAC7C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA,eACX,CAAC;MAEX,KAAK,GAAG;QAAE;QACN,oBACI7F,OAAA,CAAAE,SAAA;UAAAkF,QAAA,gBACIpF,OAAA;YACIoB,IAAI,EAAC,MAAM;YACXd,IAAI,EAAC,YAAY;YACjB+D,KAAK,EAAEnD,YAAY,CAACmE,UAAU,IAAI,EAAG;YACrCC,QAAQ,EAAEnB,iBAAkB;YAC5BoB,WAAW,EAAC,kBAAkB;YAC9BC,SAAS,EAAC,gCAAgC;YAC1CC,QAAQ;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACF7F,OAAA;YACIoB,IAAI,EAAC,MAAM;YACXd,IAAI,EAAC,WAAW;YAChB+D,KAAK,EAAEnD,YAAY,CAAC4E,SAAS,IAAI,EAAG;YACpCR,QAAQ,EAAEnB,iBAAkB;YAC5BoB,WAAW,EAAC,cAAc;YAC1BC,SAAS,EAAC,gCAAgC;YAC1CC,QAAQ;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACF7F,OAAA;YACIM,IAAI,EAAC,QAAQ;YACb+D,KAAK,EAAEnD,YAAY,CAACgF,MAAM,IAAI,EAAG;YACjCZ,QAAQ,EAAEnB,iBAAkB;YAC5BqB,SAAS,EAAC,gCAAgC;YAC1CC,QAAQ;YAAAL,QAAA,gBAERpF,OAAA;cAAQqE,KAAK,EAAC,EAAE;cAAAe,QAAA,EAAC;YAAa;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACtCpD,MAAM,CAAC0D,OAAO,CAACnE,UAAU,CAAC,CAACoE,GAAG,CAAC,CAAC,CAACC,EAAE,EAAE/F,IAAI,CAAC,kBACvCN,OAAA;cAAiBqE,KAAK,EAAEgC,EAAG;cAAAjB,QAAA,EAAE9E;YAAI,GAApB+F,EAAE;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA2B,CAC7C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA,eACX,CAAC;MAEX,KAAK,GAAG;QAAE;QACN,oBACI7F,OAAA,CAAAE,SAAA;UAAAkF,QAAA,gBACIpF,OAAA;YACIoB,IAAI,EAAC,MAAM;YACXd,IAAI,EAAC,YAAY;YACjB+D,KAAK,EAAEnD,YAAY,CAACmE,UAAU,IAAI,EAAG;YACrCC,QAAQ,EAAEnB,iBAAkB;YAC5BoB,WAAW,EAAC,kBAAkB;YAC9BC,SAAS,EAAC,gCAAgC;YAC1CC,QAAQ;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACF7F,OAAA;YACIoB,IAAI,EAAC,MAAM;YACXd,IAAI,EAAC,WAAW;YAChB+D,KAAK,EAAEnD,YAAY,CAAC4E,SAAS,IAAI,EAAG;YACpCR,QAAQ,EAAEnB,iBAAkB;YAC5BoB,WAAW,EAAC,cAAc;YAC1BC,SAAS,EAAC,gCAAgC;YAC1CC,QAAQ;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACF7F,OAAA;YACIoB,IAAI,EAAC,QAAQ;YACbd,IAAI,EAAC,OAAO;YACZ+D,KAAK,EAAEnD,YAAY,CAACoF,KAAK,IAAI,EAAG;YAChChB,QAAQ,EAAEnB,iBAAkB;YAC5BoB,WAAW,EAAC,cAAc;YAC1BC,SAAS,EAAC,gCAAgC;YAC1CC,QAAQ;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACF7F,OAAA;YACIM,IAAI,EAAC,QAAQ;YACb+D,KAAK,EAAEnD,YAAY,CAACgF,MAAM,IAAI,EAAG;YACjCZ,QAAQ,EAAEnB,iBAAkB;YAC5BqB,SAAS,EAAC,gCAAgC;YAC1CC,QAAQ;YAAAL,QAAA,gBAERpF,OAAA;cAAQqE,KAAK,EAAC,EAAE;cAAAe,QAAA,EAAC;YAAa;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACtCpD,MAAM,CAAC0D,OAAO,CAACnE,UAAU,CAAC,CAACoE,GAAG,CAAC,CAAC,CAACC,EAAE,EAAE/F,IAAI,CAAC,kBACvCN,OAAA;cAAiBqE,KAAK,EAAEgC,EAAG;cAAAjB,QAAA,EAAE9E;YAAI,GAApB+F,EAAE;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA2B,CAC7C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA,eACX,CAAC;MAEX,KAAK,GAAG;QAAE;QACN,oBACI7F,OAAA,CAAAE,SAAA;UAAAkF,QAAA,gBACIpF,OAAA;YACIoB,IAAI,EAAC,MAAM;YACXd,IAAI,EAAC,YAAY;YACjB+D,KAAK,EAAEnD,YAAY,CAACmE,UAAU,IAAI,EAAG;YACrCC,QAAQ,EAAEnB,iBAAkB;YAC5BoB,WAAW,EAAC,kBAAkB;YAC9BC,SAAS,EAAC,gCAAgC;YAC1CC,QAAQ;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACF7F,OAAA;YACIoB,IAAI,EAAC,MAAM;YACXd,IAAI,EAAC,WAAW;YAChB+D,KAAK,EAAEnD,YAAY,CAAC4E,SAAS,IAAI,EAAG;YACpCR,QAAQ,EAAEnB,iBAAkB;YAC5BoB,WAAW,EAAC,cAAc;YAC1BC,SAAS,EAAC,gCAAgC;YAC1CC,QAAQ;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACF7F,OAAA;YACIoB,IAAI,EAAC,QAAQ;YACbd,IAAI,EAAC,QAAQ;YACb+D,KAAK,EAAEnD,YAAY,CAACqF,MAAM,IAAI,EAAG;YACjCjB,QAAQ,EAAEnB,iBAAkB;YAC5BoB,WAAW,EAAC,eAAe;YAC3BC,SAAS,EAAC,gCAAgC;YAC1CC,QAAQ;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACF7F,OAAA;YACIoB,IAAI,EAAC,QAAQ;YACbd,IAAI,EAAC,OAAO;YACZ+D,KAAK,EAAEnD,YAAY,CAACsF,KAAK,IAAI,EAAG;YAChClB,QAAQ,EAAEnB,iBAAkB;YAC5BoB,WAAW,EAAC,cAAc;YAC1BC,SAAS,EAAC,gCAAgC;YAC1CC,QAAQ;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACF7F,OAAA;YACIM,IAAI,EAAC,QAAQ;YACb+D,KAAK,EAAEnD,YAAY,CAACgF,MAAM,IAAI,EAAG;YACjCZ,QAAQ,EAAEnB,iBAAkB;YAC5BqB,SAAS,EAAC,gCAAgC;YAC1CC,QAAQ;YAAAL,QAAA,gBAERpF,OAAA;cAAQqE,KAAK,EAAC,EAAE;cAAAe,QAAA,EAAC;YAAa;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACtCpD,MAAM,CAAC0D,OAAO,CAACnE,UAAU,CAAC,CAACoE,GAAG,CAAC,CAAC,CAACC,EAAE,EAAE/F,IAAI,CAAC,kBACvCN,OAAA;cAAiBqE,KAAK,EAAEgC,EAAG;cAAAjB,QAAA,EAAE9E;YAAI,GAApB+F,EAAE;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA2B,CAC7C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA,eACX,CAAC;MAEX;QACI,OAAO,IAAI;IACnB;EACJ,CAAC;EAED,MAAMY,oBAAoB,GAAGA,CAAA,KAAM;IAC/B,oBACIzG,OAAA;MACIM,IAAI,EAAC,WAAW;MAChB+D,KAAK,EAAEnD,YAAY,CAACG,SAAU;MAC9BiE,QAAQ,EAAEnB,iBAAkB;MAC5BqB,SAAS,EAAC,gCAAgC;MAC1CC,QAAQ;MAAAL,QAAA,gBAERpF,OAAA;QAAQqE,KAAK,EAAC,EAAE;QAAAe,QAAA,EAAC;MAAiB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC1CjE,cAAc,CAACwE,GAAG,CAAC3C,IAAI,iBACpBzD,OAAA;QAAmBqE,KAAK,EAAEZ,IAAK;QAAA2B,QAAA,EAC1B3B;MAAI,GADIA,IAAI;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAET,CACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEjB,CAAC;EAED,IAAIjF,OAAO,EAAE,oBAAOZ,OAAA;IAAAoF,QAAA,EAAK;EAAU;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAI/E,KAAK,EAAE,oBAAOd,OAAA;IAAAoF,QAAA,EAAMtE;EAAK;IAAA4E,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEpC,oBACI7F,OAAA;IAAKwF,SAAS,EAAC,uBAAuB;IAAAJ,QAAA,gBAClCpF,OAAA;MAAIwF,SAAS,EAAC,yBAAyB;MAAAJ,QAAA,GAAC,sBAAoB,EAAC9E,IAAI;IAAA;MAAAoF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAOvE7F,OAAA;MAAKwF,SAAS,EAAC,wCAAwC;MAAAJ,QAAA,gBACnDpF,OAAA;QAAIwF,SAAS,EAAC,sCAAsC;QAAAJ,QAAA,EAAC;MAAU;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpE7F,OAAA;QAAKwF,SAAS,EAAC,wBAAwB;QAAAJ,QAAA,gBACnCpF,OAAA;UAAKwF,SAAS,EAAC,4BAA4B;UAAAJ,QAAA,eACvCpF,OAAA;YAAKwF,SAAS,EAAC,SAAS;YAAAJ,QAAA,gBAEpBpF,OAAA;cAAIwF,SAAS,EAAC,4BAA4B;cAAAJ,QAAA,EAAC;YAAkB;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClE7F,OAAA;cAAIwF,SAAS,EAAC,0BAA0B;cAAAJ,QAAA,EACnC3C,MAAM,CAAC0D,OAAO,CAACzF,KAAK,CAAC6B,gBAAgB,CAAC,CAAC6D,GAAG,CAAC,CAAC,CAAChF,IAAI,EAAEsF,KAAK,CAAC,kBACtD1G,OAAA;gBAAewF,SAAS,EAAC,2BAA2B;gBAAAJ,QAAA,gBAChDpF,OAAA;kBAAMwF,SAAS,EAAC,YAAY;kBAAAJ,QAAA,GAAEtD,cAAc,CAACV,IAAI,CAAC,EAAC,GAAC;gBAAA;kBAAAsE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC3D7F,OAAA;kBAAMwF,SAAS,EAAC,eAAe;kBAAAJ,QAAA,EAAEsB;gBAAK;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA,GAFzCzE,IAAI;gBAAAsE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAGT,CACP;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAEN7F,OAAA;UAAKwF,SAAS,EAAC,4BAA4B;UAAAJ,QAAA,eACvCpF,OAAA;YAAKwF,SAAS,EAAC,SAAS;YAAAJ,QAAA,gBAEpBpF,OAAA;cAAIwF,SAAS,EAAC,4BAA4B;cAAAJ,QAAA,EAAC;YAAkB;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClE7F,OAAA;cAAIwF,SAAS,EAAC,0BAA0B;cAAAJ,QAAA,EACnC3C,MAAM,CAAC0D,OAAO,CAACzF,KAAK,CAAC8B,gBAAgB,CAAC,CAAC4D,GAAG,CAAC,CAAC,CAAC9E,IAAI,EAAEoF,KAAK,CAAC,kBACtD1G,OAAA;gBAAewF,SAAS,EAAC,2BAA2B;gBAAAJ,QAAA,gBAChDpF,OAAA;kBAAAoF,QAAA,EAAO9D;gBAAI;kBAAAoE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACnB7F,OAAA;kBAAMwF,SAAS,EAAC,eAAe;kBAAAJ,QAAA,EAAEsB;gBAAK;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA,GAFzCvE,IAAI;gBAAAoE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAGT,CACP;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAEN7F,OAAA;MACI2G,OAAO,EAAEA,CAAA,KAAM1F,eAAe,CAAC,IAAI,CAAE;MACrCuE,SAAS,EAAC,+CAA+C;MAAAJ,QAAA,EAC5D;IAED;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACR7E,YAAY,iBACThB,OAAA;MAAKwF,SAAS,EAAC,6EAA6E;MAAAJ,QAAA,eACxFpF,OAAA;QAAKwF,SAAS,EAAC,2EAA2E;QAAAJ,QAAA,gBACtFpF,OAAA;UAAIwF,SAAS,EAAC,4BAA4B;UAAAJ,QAAA,EAAC;QAAiB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjE7F,OAAA;UAAM4G,QAAQ,EAAEpC,YAAa;UAAAY,QAAA,gBACzBpF,OAAA;YAAKwF,SAAS,EAAC,yBAAyB;YAAAJ,QAAA,gBAEpCpF,OAAA;cACIM,IAAI,EAAC,MAAM;cACX+D,KAAK,EAAEnD,YAAY,CAACE,IAAK;cACzBkE,QAAQ,EAAEnB,iBAAkB;cAC5BqB,SAAS,EAAC,gCAAgC;cAC1CC,QAAQ;cAAAL,QAAA,gBAERpF,OAAA;gBAAQqE,KAAK,EAAC,EAAE;gBAAAe,QAAA,EAAC;cAAqB;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EAC9CpD,MAAM,CAAC0D,OAAO,CAACrE,cAAc,CAAC,CAACsE,GAAG,CAAC,CAAC,CAACS,GAAG,EAAExC,KAAK,CAAC,kBAC7CrE,OAAA;gBAAkBqE,KAAK,EAAEwC,GAAI;gBAAAzB,QAAA,EAAEf;cAAK,GAAvBwC,GAAG;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAA6B,CAChD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,EACRV,qBAAqB,CAAC,CAAC,eACxBnF,OAAA;cACIoB,IAAI,EAAC,MAAM;cACXd,IAAI,EAAC,MAAM;cACX+D,KAAK,EAAEnD,YAAY,CAACZ,IAAK;cACzBgF,QAAQ,EAAEnB,iBAAkB;cAC5BoB,WAAW,EAAC,gBAAgB;cAC5BC,SAAS,EAAC,gCAAgC;cAC1CC,QAAQ;YAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC,eACF7F,OAAA;cACIM,IAAI,EAAC,MAAM;cACX+D,KAAK,EAAEnD,YAAY,CAACI,IAAK;cACzBgE,QAAQ,EAAEnB,iBAAkB;cAC5BqB,SAAS,EAAC,gCAAgC;cAC1CC,QAAQ;cAAAL,QAAA,gBAERpF,OAAA;gBAAQqE,KAAK,EAAC,EAAE;gBAAAe,QAAA,EAAC;cAAW;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EACpC9D,SAAS,CAACqE,GAAG,CAAC,CAAC9E,IAAI,EAAEwF,KAAK,kBACvB9G,OAAA;gBAAoBqE,KAAK,EAAE/C,IAAK;gBAAA8D,QAAA,EAAE9D;cAAI,GAAzBwF,KAAK;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAA6B,CAClD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACT7F,OAAA;cACIM,IAAI,EAAC,MAAM;cACX+D,KAAK,EAAEnD,YAAY,CAACK,IAAK;cACzB+D,QAAQ,EAAEnB,iBAAkB;cAC5BqB,SAAS,EAAC,gCAAgC;cAC1CC,QAAQ;cAAAL,QAAA,gBAERpF,OAAA;gBAAQqE,KAAK,EAAC,EAAE;gBAAAe,QAAA,EAAC;cAAqB;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EAC9CzC,KAAK,CAACC,IAAI,CAAC;gBAAEC,MAAM,EAAE,EAAE,GAAGpC,YAAY,CAACG,SAAS,GAAG;cAAE,CAAC,EAAE,CAACkC,CAAC,EAAEL,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CAACkD,GAAG,CAAE3C,IAAI,iBAC/EzD,OAAA;gBAAmBqE,KAAK,EAAEZ,IAAK;gBAAA2B,QAAA,EAAE3B;cAAI,GAAxBA,IAAI;gBAAAiC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAA6B,CACjD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,EACRY,oBAAoB,CAAC,CAAC;UAAA;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEtB,CAAC,eACN7F,OAAA;YAAKwF,SAAS,EAAC,kBAAkB;YAAAJ,QAAA,gBAC7BpF,OAAA;cACIoB,IAAI,EAAC,QAAQ;cACbuF,OAAO,EAAEA,CAAA,KAAM1F,eAAe,CAAC,KAAK,CAAE;cACtCuE,SAAS,EAAC,+CAA+C;cAAAJ,QAAA,EAC5D;YAED;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACT7F,OAAA;cACIoB,IAAI,EAAC,QAAQ;cACboE,SAAS,EAAC,0CAA0C;cAAAJ,QAAA,EACvD;YAED;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR,eAED7F,OAAA;MAAAoF,QAAA,gBACIpF,OAAA;QAAIwF,SAAS,EAAC,4BAA4B;QAAAJ,QAAA,EAAC;MAAc;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC7DpD,MAAM,CAAC0D,OAAO,CAAC3F,UAAU,CAAC,CAAC4F,GAAG,CAAC,CAAC,CAACW,QAAQ,EAAEnE,cAAc,CAAC,kBACvD5C,OAAA;QAAoBwF,SAAS,EAAC,MAAM;QAAAJ,QAAA,gBAChCpF,OAAA;UAAIwF,SAAS,EAAC,uBAAuB;UAAAJ,QAAA,EAAE2B;QAAQ;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrD7F,OAAA;UAAAoF,QAAA,EACKxC,cAAc,CAACwD,GAAG,CAACvD,SAAS,iBACzB7C,OAAA;YAAwBwF,SAAS,EAAC,wCAAwC;YAAAJ,QAAA,gBACtEpF,OAAA;cAAAoF,QAAA,GACKvC,SAAS,CAACvC,IAAI,EAAC,UAAQ,EAACwB,cAAc,CAACe,SAAS,CAACzB,IAAI,CAAC,IAAIyB,SAAS,CAACzB,IAAI,EAAC,UACpE,EAACyB,SAAS,CAACxB,SAAS,EAAC,oBAAkB,EAACwB,SAAS,CAACtB,IAAI,EAAC,GACjE;YAAA;cAAAmE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACP7F,OAAA;cAAAoF,QAAA,gBACIpF,OAAA;gBACI2G,OAAO,EAAEA,CAAA,KAAM/B,YAAY,CAAC/B,SAAS,CAACmE,GAAG,EAAEnE,SAAS,CAACtB,IAAI,CAAE;gBAC3DiE,SAAS,EAAC,iDAAiD;gBAAAJ,QAAA,EAC9D;cAED;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACT7F,OAAA;gBACI2G,OAAO,EAAEA,CAAA,KAAM7C,YAAY,CAACjB,SAAS,CAACmE,GAAG,CAAE;gBAC3CxB,SAAS,EAAC,yCAAyC;gBAAAJ,QAAA,EACtD;cAED;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC;UAAA,GAlBDhD,SAAS,CAACmE,GAAG;YAAAtB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAmBlB,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA,GAzBCkB,QAAQ;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA0Bb,CACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACxF,EAAA,CA7iBIF,SAAS;AAAA8G,EAAA,GAAT9G,SAAS;AA+iBf,eAAeA,SAAS;AAAC,IAAA8G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}